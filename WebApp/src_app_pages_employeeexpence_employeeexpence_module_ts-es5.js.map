{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_3__","AddExpencemployeeComponent","dialogRef","cdr","formBuilder","router","toastService","titleCasePipe","UserData","productService","expenseservice","JSON","parse","localStorage","getItem","today","Date","userId","console","log","addexpenseForm","group","name","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","startDate","type","amount","description","controls","submitted","invalid","openErrorSnackBar","Body","value","productPicUrl","currentEmployee","id","addExpenseDetails","then","openSnackBar","notifyExpenseAdded","close","err","error","expose","transform","error_message","selectedDate","get","isNaN","getTime","setValue","event","charCode","which","keyCode","e","formdata","FormData","reader","FileReader","file","target","files","readAsDataURL","set","PostImagePdf","res","data","location","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_4__","EditExpencemployeeComponent","expenseId","createEductionForm","getExpenseById","editexpenseForm","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","GetExpenseByExpenseId","receiptImage","patchValue","date","moment__WEBPACK_IMPORTED_MODULE_0__","format","category","enterAmount","ExpenseUpdateByEmployeeId","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","EmpExpenceComponent","dialog","rolesPermissionsService","getEmployeeByEmployeeId","getexpenseDetails","productAdded$","subscribe","getEmployeeById","parentId","getAllExpenseDetails","expenseAllData","open","_add_expencemployee_add_expencemployee_component__WEBPACK_IMPORTED_MODULE_1__","width","height","panelClass","disableClose","position","right","afterClosed","_edit_expencemployee_edit_expencemployee_component__WEBPACK_IMPORTED_MODULE_0__","deleteExpense","imagelink","DataLink","pdfName","file_saver__WEBPACK_IMPORTED_MODULE_2___default","routes","path","component","_main_expencemployee_main_expencemployee_component__WEBPACK_IMPORTED_MODULE_0__","children","redirectTo","pathMatch","_emp_expence_emp_expence_component__WEBPACK_IMPORTED_MODULE_1__","routerLinkActiveOptions","exact","EmployeeexpenceRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","imports","exports","EmployeeexpenceModule","_angular_common__WEBPACK_IMPORTED_MODULE_7__","_employeeexpence_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_8__","src_app_material_module__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_10__","declarations","_main_expencemployee_main_expencemployee_component__WEBPACK_IMPORTED_MODULE_2__","_add_expencemployee_add_expencemployee_component__WEBPACK_IMPORTED_MODULE_3__","_edit_expencemployee_edit_expencemployee_component__WEBPACK_IMPORTED_MODULE_4__","MainExpencemployeeComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/pages/employeeexpence/add-expencemployee/add-expencemployee.component.html","webpack:///src/app/pages/employeeexpence/add-expencemployee/add-expencemployee.component.ts","webpack:///src/app/pages/employeeexpence/edit-expencemployee/edit-expencemployee.component.html","webpack:///src/app/pages/employeeexpence/edit-expencemployee/edit-expencemployee.component.ts","webpack:///src/app/pages/employeeexpence/emp-expence/emp-expence.component.html","webpack:///src/app/pages/employeeexpence/emp-expence/emp-expence.component.ts","webpack:///src/app/pages/employeeexpence/employeeexpence-routing.module.ts","webpack:///src/app/pages/employeeexpence/employeeexpence.module.ts","webpack:///src/app/pages/employeeexpence/main-expencemployee/main-expencemployee.component.ts","webpack:///src/app/pages/employeeexpence/main-expencemployee/main-expencemployee.component.html"],"sourcesContent":["<!-- <div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Expense</h1>\r\n\r\n    <div class=\"flex d-flex flex-row\" style=\"margin-left: auto;\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"postExpense()\">Save</button>\r\n\r\n    </div>\r\n</div> -->\r\n\r\n<div class=\"modal-header pt-0\">\r\n  <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Expense</h1>\r\n  <div class=\"addProductButtons\">\r\n      <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n      (click)=\"cancel()\">Cancel</button>\r\n      <button type=\"button\" class=\"btn btn-save\" (click)=\"postExpense()\">Save</button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"addexpenseForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Name\" formControlName=\"name\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.name.touched) && f.name.errors?.required\">\r\n                        Name is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Date<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput required ngModel bsDatepicker placeholder=\"DD MMM YYYY\" [minDate]=\"today\"\r\n                            style=\"text-transform:uppercase!important;\" id=\"datePicker\" bsDatepicker [bsConfig]=\"{\r\n                            containerClass: 'theme-dark-blue',\r\n                            dateInputFormat: 'DD MMM YYYY',\r\n                             showWeekNumbers:false\r\n                            }\" formControlName=\"startDate\" autocomplete=\"off\"  (click)=\"openDatepicker()\">\r\n                        <span>\r\n                            <mat-icon class=\"iconcalender p-1\">date_range</mat-icon>\r\n                        </span>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.startDate.touched) && f.startDate.errors?.required\">\r\n                        Date is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Category<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Type\"\r\n                            formControlName=\"type\">\r\n                            <mat-option value=\"Meals & Entertainment\">Meals & Entertainment</mat-option>\r\n                            <mat-option value=\"Labour Charges\">Labour Charges</mat-option>\r\n                            <mat-option value=\"Loading Unloading\">Loading Unloading</mat-option>\r\n                            <mat-option value=\"Shipping\">Shipping</mat-option>\r\n                            <mat-option value=\"Cleaning\">Cleaning</mat-option>\r\n                            <mat-option value=\"Other\">Other</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.type.touched) && f.type.errors?.required\">\r\n                        Category is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Amount<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Minimum Amount\" formControlName=\"amount\"\r\n                            (keypress)=\"numberDecimalOnly($event)\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.amount.touched) && f.amount.errors?.required\">\r\n                        Amount is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 col-xl-12 col-lg-12 col-sm-12\">\r\n                    <label class=\"form-label\">Description<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput placeholder=\"Description\" rows=\"3\" formControlName=\"description\"\r\n                            autocomplete=\"off\"></textarea>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.description.touched) && f.description.errors?.required\">\r\n                        Description is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 col-xl-12 col-lg-12 col-sm-12\">\r\n                    <label class=\"form-label\">Upload Document</label>\r\n                    <div><input type=\"file\" accept=\".jpeg, .jpg, .png, .pdf\" (change)=\"documentChange($event)\"></div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { EmpexpenseserviceService } from 'src/app/core/services/empexpenseservice.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-expencemployee',\r\n  templateUrl: './add-expencemployee.component.html',\r\n  styleUrls: ['./add-expencemployee.component.scss']\r\n})\r\nexport class AddExpencemployeeComponent implements OnInit {\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public addexpenseForm: any;\r\n  userId: any;\r\n  productPicUrl: any;\r\n  public submitted: boolean = false;\r\n  public today: Date;\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddExpencemployeeComponent>, private cdr: ChangeDetectorRef, private formBuilder: FormBuilder, public router: Router, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, @Inject(MAT_DIALOG_DATA) public UserData: any, private productService: ProductService,\r\n    public expenseservice: EmpexpenseserviceService) { \r\n      this.today = new Date();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userId = this.UserData.userId;\r\n    console.log(\"this.userId\",this.userId)\r\n\r\n    this.addexpenseForm = this.formBuilder.group({\r\n      name: [\"\", [Validators.required]],\r\n      startDate: [\"\",[Validators.required]],\r\n      type: [\"\",[Validators.required]],\r\n      amount: [null,[Validators.required]],\r\n      description: [\"\", [Validators.required]]\r\n      //uploadDocument: [\"\"],\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  get f() {\r\n    return this.addexpenseForm.controls;\r\n  }\r\n\r\n  postExpense() {\r\n    this.submitted = true;\r\n    if (this.addexpenseForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      let Body =\r\n      {\r\n        \"name\": this.addexpenseForm.controls.name.value,\r\n        \"date\": this.addexpenseForm.controls.startDate.value,\r\n        \"category\": this.addexpenseForm.controls.type.value,\r\n        \"enterAmount\": this.addexpenseForm.controls.amount.value,\r\n        \"description\": this.addexpenseForm.controls.description.value,\r\n        \"receiptImage\": this.productPicUrl,\r\n        \"employeeId\": this.currentEmployee.id\r\n\r\n      }\r\n      this.expenseservice.addExpenseDetails(Body,this.userId ).then(res => {\r\n        this.toastService.openSnackBar(\" Expense Added Successfully\");\r\n        this.expenseservice.notifyExpenseAdded();\r\n        this.dialogRef.close();\r\n\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n  }\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.addexpenseForm.get('startDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.addexpenseForm.get('startDate').setValue(new Date());\r\n    }\r\n  }\r\n\r\n  numberDecimalOnly(event): boolean {\r\n    var charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode != 46 && charCode > 31\r\n      && (charCode < 48 || charCode > 57))\r\n      return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  documentChange(e) {\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      if (file == null) {\r\n        this.toastService.openErrorSnackBar(\r\n          \"Please Select Image To Upload.\",\r\n        );\r\n      } else {\r\n        formdata.set(\"upload\", file)\r\n        this.productService.PostImagePdf(formdata).then((res) => {\r\n          this.productPicUrl = res.data.location;\r\n          console.log(\"this.productPicUrl\", this.productPicUrl);\r\n\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Update Expense</h1>\r\n\r\n    <div class=\"flex d-flex flex-row\" style=\"margin-left: auto;\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\"\r\n            class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"UpdateEducation()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div> -->\r\n\r\n<div class=\"modal-header pt-0\">\r\n  <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Expense</h1>\r\n  <div class=\"addProductButtons\">\r\n    <button style=\"margin-right: 10px !important;\" type=\"button\"\r\n    class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-save\" (click)=\"UpdateEducation()\">Save</button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"editexpenseForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Name\" formControlName=\"name\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.name.touched) && f.name.errors?.required\">\r\n                        Name is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Date<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput required ngModel bsDatepicker placeholder=\"DD MMM YYYY\" [minDate]=\"today\"\r\n                            style=\"text-transform:uppercase!important;\" id=\"datePicker\" bsDatepicker [bsConfig]=\"{\r\n                            containerClass: 'theme-dark-blue',\r\n                            dateInputFormat: 'DD MMM YYYY',\r\n                             showWeekNumbers:false\r\n                            }\" formControlName=\"startDate\" autocomplete=\"off\" (click)=\"openDatepicker()\">\r\n                        <span>\r\n                            <mat-icon class=\"iconcalender p-1\">date_range</mat-icon>\r\n                        </span>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.startDate.touched) && f.startDate.errors?.required\">\r\n                        Date is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Category<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Type\"\r\n                            formControlName=\"type\">\r\n                            <mat-option value=\"Meals & Entertainment\">Meals & Entertainment</mat-option>\r\n                            <mat-option value=\"Labour Charges\">Labour Charges</mat-option>\r\n                            <mat-option value=\"Loading Unloading\">Loading Unloading</mat-option>\r\n                            <mat-option value=\"Shipping\">Shipping</mat-option>\r\n                            <mat-option value=\"Cleaning\">Cleaning</mat-option>\r\n                            <mat-option value=\"Other\">Other</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.type.touched) && f.type.errors?.required\">\r\n                        Category is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Amount<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Minimum Amount\" formControlName=\"amount\"\r\n                            (keypress)=\"numberDecimalOnly($event)\"  required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.amount.touched) && f.amount.errors?.required\">\r\n                        Amount is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 col-xl-12 col-lg-12 col-sm-12\">\r\n                    <label class=\"form-label\">Description<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput placeholder=\"Description\" rows=\"3\" formControlName=\"description\"\r\n                           autocomplete=\"off\"></textarea>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.description.touched) && f.description.errors?.required\">\r\n                        Description is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 col-xl-12 col-lg-12 col-sm-12\">\r\n                    <label class=\"form-label\">Upload Document</label>\r\n                    <div><input type=\"file\" accept=\".jpeg, .jpg, .png, .pdf\" (change)=\"documentChange($event)\"></div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { EmpexpenseserviceService } from 'src/app/core/services/empexpenseservice.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-expencemployee',\r\n  templateUrl: './edit-expencemployee.component.html',\r\n  styleUrls: ['./edit-expencemployee.component.scss']\r\n})\r\nexport class EditExpencemployeeComponent implements OnInit {\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public editexpenseForm: any;\r\n  productPicUrl: any;\r\n  userId: any;\r\n  expenseId: any;\r\n  public submitted: boolean = false;\r\n  public today: Date;\r\n  constructor(public dialogRef: MatDialogRef<EditExpencemployeeComponent>, private cdr: ChangeDetectorRef, private formBuilder: FormBuilder, public router: Router, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, @Inject(MAT_DIALOG_DATA) public UserData: any, private productService: ProductService,\r\n    public expenseservice: EmpexpenseserviceService) {\r\n      this.today = new Date();\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.UserData.userId;\r\n    this.expenseId = this.UserData.expenseId;\r\n\r\n    this.createEductionForm();\r\n    this.getExpenseById();\r\n\r\n  }\r\n\r\n  get f() {\r\n    return this.editexpenseForm.controls;\r\n  }\r\n  createEductionForm() {\r\n    this.editexpenseForm = this.formBuilder.group({\r\n      name: ['',[Validators.required]],\r\n      startDate: ['',[Validators.required]],\r\n      type: ['',[Validators.required]],\r\n      amount: [null,[Validators.required]],\r\n      description: ['',[Validators.required]],\r\n      //uploadDocument: [\"\"],\r\n\r\n\r\n    });\r\n  }\r\n\r\n  getExpenseById() {\r\n    this.expenseservice.GetExpenseByExpenseId({}, this.expenseId).then((res: any) => {\r\n      console.log(\"RES expense BY ID\", res);\r\n\r\n      this.productPicUrl = res.data.receiptImage;\r\n      this.editexpenseForm.patchValue({\r\n\r\n        name: res.data.name,\r\n        startDate: res.data.date ? (moment(res.data.date).format(\"DD-MMM-YYYY\")) : (moment(res.data.date).format(\"DD-MMM-YYYY\")),\r\n        type: res.data.category,\r\n        amount: res.data.enterAmount,\r\n        description: res.data.description,\r\n\r\n\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  UpdateEducation(){\r\n    this.submitted = true;\r\n    if (this.editexpenseForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else{\r\n      let Body={\r\n        \"name\": this.editexpenseForm.controls.name.value,\r\n        \"date\": this.editexpenseForm.controls.startDate.value,\r\n        \"category\":this.editexpenseForm.controls.type.value,\r\n        \"enterAmount\": this.editexpenseForm.controls.amount.value,\r\n        \"description\": this.editexpenseForm.controls.description.value,\r\n        \"receiptImage\": this.productPicUrl,\r\n        \"employeeId\": this.currentEmployee.id\r\n         \r\n      }\r\n      this.expenseservice.ExpenseUpdateByEmployeeId(Body,this.expenseId).then((res:any)=>{\r\n        this.toastService.openSnackBar(\" Expense Updated Successfully\");\r\n        this.expenseservice.notifyExpenseAdded();\r\n        this.dialogRef.close();\r\n      },(err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");      \r\n        } \r\n       })\r\n\r\n    }\r\n\r\n    \r\n  }\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.editexpenseForm.get('startDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.editexpenseForm.get('startDate').setValue(new Date());\r\n    }\r\n  }\r\n  numberDecimalOnly(event): boolean {\r\n    var charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode != 46 && charCode > 31\r\n      && (charCode < 48 || charCode > 57))\r\n      return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  documentChange(e) {\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      if (file == null) {\r\n        this.toastService.openErrorSnackBar(\r\n          \"Please Select Image To Upload.\",\r\n        );\r\n      } else {\r\n        formdata.set(\"upload\", file)\r\n        this.productService.PostImagePdf(formdata).then((res) => {\r\n          this.productPicUrl = res.data.location;\r\n          console.log(\"this.productPicUrl\", this.productPicUrl);\r\n\r\n        });\r\n      }\r\n    }\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"row mb-3 container-fluid mb-3\">\r\n    <button class=\"delete-button p-3\" (click)=\"openAddexpense(userId)\">\r\n        <i class=\"fas fa-plus \" style=\"color:rgba(252, 118, 67, 1)\"></i>\r\n    </button><label class=\"text-black\"\r\n        style=\"margin-left: 22px; font-size: 14px; margin-top: 5px; position: absolute; \">ADD</label>\r\n</div>\r\n\r\n<div style=\"width:100% ; overflow-x: scroll;\">\r\n    <table class=\"table table-responsive table-bordered fs--1 mb-0\">\r\n        <thead class=\"text-600\">\r\n            <tr>\r\n                <th class=\"text-nowrap\">No</th>\r\n                <th class=\"text-nowrap\">Name</th>\r\n                <th class=\"text-nowrap\">Date</th>\r\n                <th class=\"text-nowrap\">Category</th>\r\n                <th class=\"text-nowrap\">Description</th>\r\n                <th class=\"text-nowrap\">Amount</th>\r\n                <th class=\"text-nowrap\">Approved Amount</th>\r\n                <th class=\"text-nowrap\">Status</th>\r\n                <th class=\"text-nowrap\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr class=\"btn-reveal-trigger text-left\" *ngFor=\"let item of expenseAllData; let i = index\"\r\n                style=\"color: #676398!important;\">\r\n                <td class=\"Offer Name text-nowrap\" style=\"vertical-align:middle;\">{{i+1}}</td>\r\n                <td class=\"Offer Name text-nowrap\" style=\"vertical-align:middle;\">{{item.name}}</td>\r\n                <td class=\"Offer Name text-nowrap\" style=\"vertical-align:middle;\">{{item.date | date:\"dd MMM YYYY\"|\r\n                    uppercase}}</td>\r\n                <td class=\"Valid From text-nowrap\" style=\"vertical-align:middle;\">{{item.category}}</td>\r\n                <td class=\"Status text-nowrap\" style=\"vertical-align:middle;\">{{item.description}}</td>\r\n                <td class=\"Valid To text-nowrap\" style=\"vertical-align:middle;\">{{item.enterAmount}}</td>\r\n                <td class=\"Decription\" style=\"vertical-align:middle;\" *ngIf=\"item.status !==  'ACCEPTED'\">--</td>\r\n                <td class=\"Decription\" style=\"vertical-align:middle;\" *ngIf=\"item.status ===  'ACCEPTED'\">{{item.approvedAmount}}</td>\r\n                <td class=\"Decription\" style=\"vertical-align:middle; color:#FC7643 !important;\"\r\n                    *ngIf=\"item.status == 'PENDING'\">Pending</td>\r\n                <td class=\"Decription\" style=\"vertical-align:middle; color:#FC7643 !important;\"\r\n                    *ngIf=\"item.status == 'REJECTED'\">Rejected</td>\r\n                <td class=\"Decription\" style=\"vertical-align:middle; color:#0CAB42 !important;\"\r\n                    *ngIf=\"item.status == 'ACCEPTED'\">Approved</td>\r\n                <td style=\"vertical-align:middle; width:20%!important; white-space:nowrap; \">\r\n                    <div class=\"\" style=\"padding-left:40%\">\r\n                        <button class=\"btn btnp\" *ngIf=\"item.receiptImage !== null\" (click)=\"GotoImageOrPDF(item.receiptImage)\">\r\n                            <!-- <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\"></span> -->\r\n                            <i class=\"fas fa-receipt icon-color iconFontSize\"></i>\r\n                        </button>\r\n\r\n                        <button class=\"btn btnp\" *ngIf=\"item.status !== 'ACCEPTED'\" (click)=\"openEditexpense(item.id,userId)\" [ngStyle]=\"{'padding-left': item.receiptImage === null ? '48px' : '0px'}\">\r\n                            <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                        </button>\r\n\r\n                        <!-- <button class=\"btn btnp\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                            (click)=\"getexpenseId(item.id)\" [ngStyle]=\"{'padding-left': item.receiptImage === null ? '0px' : '0px'}\">\r\n                            <span class=\"bi-trash icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Delete\" style=\"color: red;\"></span>\r\n                            \r\n                        </button> -->\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n        <tbody *ngIf=\"expenseAllData == 0\">\r\n            <tr class=\"text-center\">\r\n                <td colspan=\"12\">\r\n                    <img class=\"image-responsive\" src=\"assets/img/icons/spot-illustrations/notfound1.png\" width=\"250\"\r\n                        height=\"180\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n</div>\r\n\r\n<!-- <div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Expense? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are You Sure To Delete Expense?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" (click)=\"deletExpenseById()\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EditExpencemployeeComponent } from '../edit-expencemployee/edit-expencemployee.component';\r\nimport { AddExpencemployeeComponent } from '../add-expencemployee/add-expencemployee.component';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { EmpexpenseserviceService } from 'src/app/core/services/empexpenseservice.service';\r\nimport FileSaver from \"file-saver\";\r\nimport { saveAs } from \"file-saver/dist/FileSaver\";\r\n\r\n@Component({\r\n  selector: 'app-emp-expence',\r\n  templateUrl: './emp-expence.component.html',\r\n  styleUrls: ['./emp-expence.component.scss']\r\n})\r\nexport class EmpExpenceComponent implements OnInit {\r\n\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public userId:any;\r\n  expenseAllData: any;\r\n  expenseId: any;\r\n  DataLink: any;\r\n\r\n  constructor(public dialog: MatDialog,public rolesPermissionsService: RolesPermissionsService,\r\n    private titleCasePipe: TitleCasePipe, private toastService: ToastNotificationService,\r\n    public expenseservice : EmpexpenseserviceService ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"employee \",this.currentEmployee,\"employee Id\",this.currentEmployee.id)\r\n\r\n    this.getEmployeeByEmployeeId();\r\n    this.getexpenseDetails();\r\n    this.expenseservice.productAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getexpenseDetails();\r\n    });\r\n  }\r\n  getEmployeeByEmployeeId(){\r\n    this.rolesPermissionsService.getEmployeeById({}, this.currentEmployee.id).then((res) => {\r\n\r\n      console.log(\"In Leave --> employee BY UDER Id\",res.data);\r\n      this.userId=res.data.parentId;\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");      \r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  getexpenseDetails(){\r\n    this.expenseservice.getAllExpenseDetails({},this.currentEmployee.id).then((res)=>{\r\n      console.log(\"res Expense LIST\",res);\r\n      this.expenseAllData = res.data;\r\n      \r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");      \r\n      }\r\n    })\r\n  }\r\n\r\n  openAddexpense(userId){\r\n    const dialogRef = this.dialog.open(AddExpencemployeeComponent, {\r\n      width: '700px',\r\n      height : '730px',\r\n      data: {userId:userId},\r\n      panelClass: 'custom-dialog-addexpence-class',\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n\r\n  }\r\n\r\n  openEditexpense(expenseId,userId) {\r\n    const dialogRef = this.dialog.open(EditExpencemployeeComponent, {\r\n      width: '700px',\r\n      height : '730px',\r\n      data: {expenseId:expenseId,userId:userId},\r\n      panelClass: 'custom-dialog-updateexpense-class',\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n\r\n  getexpenseId(expenseId){\r\n    this.expenseId=expenseId\r\n\r\n  }\r\n  deletExpenseById(){\r\n    this.expenseservice.deleteExpense({},this.expenseId).then(res=>{\r\n      this.toastService.openSnackBar(\" Expense Deleted Successfully\")\r\n      this.getexpenseDetails();\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");      \r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  GotoImageOrPDF(imagelink){\r\n    this.DataLink=imagelink\r\n    const pdfName = \"document.pdf\";\r\n    FileSaver.saveAs(this.DataLink, pdfName);\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainExpencemployeeComponent } from './main-expencemployee/main-expencemployee.component';\r\nimport { EmpExpenceComponent } from './emp-expence/emp-expence.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:MainExpencemployeeComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'emp-expence',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'emp-expence',\r\n        component:EmpExpenceComponent,\r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeeexpenceRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EmployeeexpenceRoutingModule } from './employeeexpence-routing.module';\r\nimport { EmpExpenceComponent } from './emp-expence/emp-expence.component';\r\nimport { MainExpencemployeeComponent } from './main-expencemployee/main-expencemployee.component';\r\nimport { AddExpencemployeeComponent } from './add-expencemployee/add-expencemployee.component';\r\nimport { EditExpencemployeeComponent } from './edit-expencemployee/edit-expencemployee.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmpExpenceComponent,\r\n    MainExpencemployeeComponent,\r\n    AddExpencemployeeComponent,\r\n    EditExpencemployeeComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EmployeeexpenceRoutingModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  \r\n  ]\r\n})\r\nexport class EmployeeexpenceModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-expencemployee',\r\n  templateUrl: './main-expencemployee.component.html',\r\n  styleUrls: ['./main-expencemployee.component.scss']\r\n})\r\nexport class MainExpencemployeeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-4\">\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"row mt-3 page-nav-link\">\r\n             <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\" id=\"productlistLink\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-expence\" routerLinkActive='active'>Expense</a>\r\n              </div>\r\n              <div class=\"col-xxl-9 col-xl-9 col-lg-9 col-md-3 col-sm-0 col-xs-0\"></div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <hr  class = \"mt-1\" />\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n  \r\n"]}