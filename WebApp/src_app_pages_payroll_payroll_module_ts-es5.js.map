{"version":3,"mappings":"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","names":["SaalryReleaseServiceService","httpClient","rxjs__WEBPACK_IMPORTED_MODULE_2__","partyAddedSource","asObservable","next","data","userId","Promise","resolve","reject","call","src_app_helpers_url_constants__WEBPACK_IMPORTED_MODULE_0__","subscribe","res","err","employeeId","_angular_core__WEBPACK_IMPORTED_MODULE_3__","factory","providedIn","_angular_core__WEBPACK_IMPORTED_MODULE_4__","AssignPayrollComponent","dialogRef","employeeData","payrollService","toastService","titleCasePipe","rolesPermissionsService","roleService","commonService","JSON","parse","localStorage","getItem","todaysDate","Date","console","log","empId","structureId","PayrollList","payrollList","payrollData","getStructureDetails","getProfileData","i","length","getEmployeeById","then","selectedStructureId","employee","employeeStructure","id","push","employeePayroll","hra","basic","employeeContribution","error","expose","toastMsg","title","content","transform","error_message","getAllStructures","currentUser","structureName","rows","submitted","undefined","body","bodypayrollPut","assignStructure","notifyDataAdded","close","retailerPayrollPut","strId","selectedDate","isNaN","getTime","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_5__","CreateStructureComponent","dialog","formBuilder","commonservice","CreateStructureForm","group","startDate","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","endDate","pf","deductTax","rowAdded$","getUsersList","document","getElementById","addEventListener","placeholderOption","querySelector","remove","getUsers","employeeList","pageData","StructureId","getStructureById","selectedRecordId","formattedStartDate","from","formattedEndDate","to","slectedStrucureName","name","patchValue","pfStatus","professionalTax","updateEndDateOptions","controls","invalid","value","payrollSettingSave","reset","open","_new_structure_new_structure_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","disableClose","position","right","afterClosed","result","selectedStartDate","get","endDates","PayNumber","slice","EditPayrollComponent","EditPayrollForm","date","ctc","salary","_a","_b","moment__WEBPACK_IMPORTED_MODULE_0__","format","addSalary","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","item_r2","PayrollListComponent","getPayrollList","e","target","checked","upiCheckedId","index","indexOf","splice","basicSalary","hraSalary","pfSalary","forEach","item","searchKey","getUsersSearch","_assign_payroll_assign_payroll_component__WEBPACK_IMPORTED_MODULE_0__","_edit_payroll_edit_payroll_component__WEBPACK_IMPORTED_MODULE_1__","routes","path","component","_payroll_component__WEBPACK_IMPORTED_MODULE_0__","children","redirectTo","pathMatch","_payroll_list_payroll_list_component__WEBPACK_IMPORTED_MODULE_2__","_assign_payroll_assign_payroll_component__WEBPACK_IMPORTED_MODULE_4__","_edit_payroll_edit_payroll_component__WEBPACK_IMPORTED_MODULE_5__","_setup_payroll_setup_payroll_component__WEBPACK_IMPORTED_MODULE_3__","_create_structure_create_structure_component__WEBPACK_IMPORTED_MODULE_1__","_new_structure_new_structure_component__WEBPACK_IMPORTED_MODULE_6__","_saalry_release_list_saalry_release_list_component__WEBPACK_IMPORTED_MODULE_7__","routerLinkActiveOptions","exact","PayrollRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_9__","imports","exports","PayrollModule","src_app_core_services_payroll_service__WEBPACK_IMPORTED_MODULE_8__","_angular_common__WEBPACK_IMPORTED_MODULE_12__","_payroll_routing_module__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_13__","src_app_material_module__WEBPACK_IMPORTED_MODULE_0__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_14__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_15__","declarations","_create_structure_create_structure_component__WEBPACK_IMPORTED_MODULE_4__","_assign_payroll_assign_payroll_component__WEBPACK_IMPORTED_MODULE_6__","_edit_payroll_edit_payroll_component__WEBPACK_IMPORTED_MODULE_7__","_new_structure_new_structure_component__WEBPACK_IMPORTED_MODULE_5__","_saalry_release_list_saalry_release_list_component__WEBPACK_IMPORTED_MODULE_9__","_saalry_release_view_saalry_release_view_component__WEBPACK_IMPORTED_MODULE_10__","SaalryReleaseListComponent","saalryReleaseServiceService","getSalaryData","partyAdded$","getAllSalaryData","salaryData","payrollCost","employeeNetPay","employeeLength","_saalry_release_view_saalry_release_view_component__WEBPACK_IMPORTED_MODULE_0__","salarySubmit","SaalryReleaseViewComponent","to_words__WEBPACK_IMPORTED_MODULE_0__","localeCode","converterOptions","currency","ignoreDecimal","ignoreZeroCurrency","GetsalryDataByEmployeeId","getAllSalaryDataByEmployeeId","totaltotalNetPayable","totalNetPayable","finalAmount","convertToWord","totalDeduct","deduction","totalEarning","grossEarning","num","toWords","convert","addErningFlag","adddeductFlag","adjustEarnAmount","parseInt","PostEarningDeduct","notifyPartyAdded","adjustDeductAmount","parseFloat","isFinite","SetupPayrollComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/core/services/saalry-release-service.service.ts","webpack:///src/app/pages/payroll/assign-payroll/assign-payroll.component.html","webpack:///src/app/pages/payroll/assign-payroll/assign-payroll.component.ts","webpack:///src/app/pages/payroll/create-structure/create-structure.component.html","webpack:///src/app/pages/payroll/create-structure/create-structure.component.ts","webpack:///src/app/pages/payroll/edit-payroll/edit-payroll.component.html","webpack:///src/app/pages/payroll/edit-payroll/edit-payroll.component.ts","webpack:///src/app/pages/payroll/payroll-list/payroll-list.component.html","webpack:///src/app/pages/payroll/payroll-list/payroll-list.component.ts","webpack:///src/app/pages/payroll/payroll-routing.module.ts","webpack:///src/app/pages/payroll/payroll.module.ts","webpack:///src/app/pages/payroll/saalry-release-list/saalry-release-list.component.html","webpack:///src/app/pages/payroll/saalry-release-list/saalry-release-list.component.ts","webpack:///src/app/pages/payroll/saalry-release-view/saalry-release-view.component.html","webpack:///src/app/pages/payroll/saalry-release-view/saalry-release-view.component.ts","webpack:///src/app/pages/payroll/setup-payroll/setup-payroll.component.ts","webpack:///src/app/pages/payroll/setup-payroll/setup-payroll.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaalryReleaseServiceService {\r\n  private partyAddedSource = new Subject<void>();\r\n  partyAdded$ = this.partyAddedSource.asObservable();\r\n  notifyPartyAdded() {\r\n    this.partyAddedSource.next();\r\n  }\r\n\r\n\r\n\r\n  constructor(public httpClient: HttpService) { }\r\n  getAllSalaryData(data: {},userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getAllSalary +userId, 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  AddEarnigData(data: {},userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getAllSalary +userId, 'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  getAllSalaryDataByEmployeeId(data: {},employeeId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getSalaryByEmpoyeeId +employeeId, 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  PostEarningDeduct(data: {},userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.AddEarningSalary +userId, 'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  } \r\n}\r\n","<div class=\"modal-header\">\r\n\r\n  <h1 class=\"modal-title\">Assign Salary Structure</h1>\r\n\r\n  <div class=\"payrollButtons\">\r\n\r\n      <button type=\"button\" class=\"btn btn-cancel\" style=\"margin-right: 10px !important;\"\r\n          (click) = \"clearAssignPayrollForm()\">Cancel</button>\r\n      <button type=\"button\" class=\"btn btn-save\" (click)=\"postAssignStructureForm()\">Save</button>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n\r\n  <form>\r\n\r\n    <div class=\"row my-3\">\r\n\r\n      <div class = \"flexAssignPayroll\">\r\n        <label class=\"form-label flex-item\">Date</label>\r\n        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width flex-item\" appearance=\"outline\">\r\n          <input matInput required ngModel bsDatepicker placeholder=\"Date\" [ngModelOptions]=\"{ standalone: true }\"\r\n            style=\"text-transform:uppercase!important;\" [(ngModel)]=\"todaysDate\" id=\"datePicker\" bsDatepicker (click)=\"openDatepicker()\"\r\n            [bsConfig]=\"{ containerClass: 'theme-dark-blue',dateInputFormat: 'DD MMM YYYY',showWeekNumbers:false }\">\r\n          <span>\r\n            <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n          </span>\r\n        </mat-form-field>\r\n        <mat-error class=\"text-danger\" *ngIf=\"(submitted || todaysDate.touched) && todaysDate.errors?.required\">\r\n          Date Is Required!\r\n        </mat-error>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 ps-1\">\r\n\r\n        <mat-radio-group name=\"structures\"  [(ngModel)]=\"selectedStructureId\" >\r\n          <mat-radio-button *ngFor=\"let structure of structureName\"\r\n          (change)=\"selectStructure(structure.id)\" [value]=\"structure.id\">\r\n            <span class = \"structureNames\" value = \"id\" >{{ structure.name }}</span>\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n</div>\r\n\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-assign-payroll',\r\n  templateUrl: './assign-payroll.component.html',\r\n  styleUrls: ['./assign-payroll.component.scss'],\r\n})\r\nexport class AssignPayrollComponent implements OnInit {\r\n\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  public structureName: any[] = [];\r\n  public submitted: boolean = false;\r\n  public todaysDate: any;\r\n  public empId: any = [];\r\n  public structureId: any;\r\n  public PayrollList: any = []\r\n  public payrollData: any = []\r\n  selectedStructureId: number | undefined;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AssignPayrollComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public employeeData: any,\r\n    private payrollService: PayrollService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private rolesPermissionsService: RolesPermissionsService,\r\n    private roleService: RolesPermissionsService,\r\n    private commonService: CommonService,) {\r\n    this.todaysDate = new Date();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"--------\", this.employeeData);\r\n\r\n\r\n    this.empId = this.employeeData.structureId;\r\n    console.log(\"EMP IDDDD\", this.empId)\r\n    this.PayrollList = this.employeeData.payrollList;\r\n    console.log(\"Payroll List\", this.PayrollList)\r\n\r\n    // this.PayrollList.forEach((item) => {\r\n    //   this.payrollData.push({\r\n    //     \"id\":item.employeePayroll.id,\r\n    //     \"hra\":item.employeePayroll.hra,\r\n    //     \"basic\": item.employeePayroll.basic,\r\n    //     \"specialAllowance\": \"0\",\r\n    //     \"pf\": item.employeePayroll.employeeContribution,\r\n    //     \"userId\": item.id\r\n\r\n    //   })\r\n    // })\r\n    console.log(\"payroll Dta--\", this.payrollData)\r\n    this.getStructureDetails();\r\n    this.getProfileData();\r\n  }\r\n  getProfileData() {\r\n    for (var i = 0; i < this.empId.length; i++) {\r\n      console.log(\"empppppp III\", this.empId[i])\r\n      this.roleService.getEmployeeById({}, this.empId[i]).then((res: any) => {\r\n        console.log(\"Payroll employee by id ++++++++\", res)\r\n        this.PayrollList = res.data;\r\n        this.selectedStructureId=this.PayrollList.employee.employeeStructure.id\r\n        this.payrollData.push({\r\n          \"id\": this.PayrollList.employeePayroll.id,\r\n          \"hra\": this.PayrollList.employeePayroll.hra,\r\n          \"basic\": this.PayrollList.employeePayroll.basic,\r\n          \"specialAllowance\": \"0\",\r\n          \"pf\": this.PayrollList.employeePayroll.employeeContribution,\r\n          \"userId\": this.PayrollList.id\r\n\r\n        })\r\n\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n          // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n          // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      }\r\n\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  // To get all the structures.\r\n  getStructureDetails(): void {\r\n    this.payrollService.getAllStructures({}, this.currentUser.id).then((res) => {\r\n      console.log(\"Structures\", res);\r\n      this.structureName = res.data.rows;\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  // To save the assign structure form\r\n  postAssignStructureForm() {\r\n    this.submitted = true;\r\n    if (this.structureId === undefined || this.structureId === null) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    } else {\r\n      let body = {\r\n        \"structureId\": this.structureId,\r\n        \"empId\": this.empId,\r\n      }\r\n\r\n      let bodypayrollPut = this.payrollData;\r\n\r\n      this.payrollService.assignStructure(body).then((res) => {\r\n        console.log(res);\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Payroll Assigned Successfully!!!\",\r\n          });\r\n        // this.toastService.openSnackBar(\"Payroll Assigned Successfully!!!\");\r\n        this.commonService.notifyDataAdded();\r\n        this.submitted = false;\r\n        this.dialogRef.close();\r\n      },\r\n        (err) => {\r\n\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n            // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n            // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n\r\n        })\r\n\r\n      this.payrollService.retailerPayrollPut(bodypayrollPut, this.currentUser.id).then((res) => {\r\n        console.log(res);\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Payroll Data Updated Successfully!!!\",\r\n          });\r\n        // this.toastService.openSnackBar(\"Payroll Data Updated  Successfully!!!\");\r\n        this.commonService.notifyDataAdded();\r\n        this.submitted = false;\r\n        this.dialogRef.close();\r\n      },\r\n        (err) => {\r\n\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n            // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n            // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Select Structure\r\n  selectStructure(strId: number) {\r\n    this.structureId = strId;\r\n    console.log(\"Select Structure\", this.structureId);\r\n  }\r\n\r\n  // To close the dialog.\r\n  clearAssignPayrollForm() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.todaysDate\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.todaysDate = new Date()\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-0\">\r\n\r\n  <div class=\"row d-flex flex-center mb-3\">\r\n    <div class=\"navOption-btns my-2\">\r\n      <button class=\"btn text-nowrap mx-3\" style = \"float: right;\" type=\"button\" (click)=\"addNewStructure()\"><i\r\n        class=\"fas fa-plus me-2\"> </i>Add New\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class = \"row mt-3\">\r\n\r\n    <div class=\"col-sm-12 col-md-3 col-lg-3 col-xl-4 col-xxl-5\">\r\n\r\n      <div class = \"structureList\">\r\n\r\n        <div class=\"card cardList mt-1\"  *ngFor=\"let item of structureName\"  [ngClass]=\"{'selected-record': item.id === selectedRecordId}\">\r\n          <span class=\"structureName\" (click)=\"selectStructure(item.id)\">{{ item.name }}</span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-sm-12 col-md-9 col-lg-8 col-xl-7 col-xxl-6\" style = \"margin-bottom: 8px;\">\r\n\r\n      <div class=\"card\" style=\"width:100%;border-radius: 5px;\">\r\n\r\n        <form [formGroup]=\"CreateStructureForm\" style=\"width:100%;height:100%;\">\r\n\r\n          <hr class=\"my-0 py-0\" />\r\n\r\n          <div class=\"row my-3 px-3\">\r\n            <div class = \"col-10\" style = \"font-size: 18px;font-weight: 600;\">\r\n              Payroll Setting\r\n            </div>\r\n            <div class=\"col-2\" style=\"color:#FC7643\">{{slectedStrucureName ? slectedStrucureName :\"\"}}</div>\r\n          </div>\r\n\r\n          <hr class=\"my-0 py-0\" />\r\n\r\n          <div class=\"row my-3 px-3\">\r\n            <div class = \"col-12\">\r\n\r\n              <div class = \"row my-2\">\r\n\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Pay Cycle <span class=\"error-asterisk\">*</span></span>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-sm-6 col-md-3 px-1\">\r\n                  <div style = \"padding-left: 5px;\">From</div>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-select matNativeControl disableOptionCentering  formControlName=\"startDate\" placeholder=\"From\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\"\r\n                      (selectionChange)=\"updateEndDateOptions()\">\r\n                          <mat-option [value]=\"item\" *ngFor=\"let item of PayNumber\">{{item}}\r\n                          </mat-option>\r\n                      </mat-select>\r\n                  </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.startDate.touched) && f.startDate.errors?.required\">\r\n                      Start day is required!\r\n                    </mat-error>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6 col-md-3 px-1\">\r\n                  <div style = \"padding-left: 5px;\">To</div>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-select matNativeControl disableOptionCentering  formControlName=\"endDate\" placeholder=\"To\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\">\r\n                          <mat-option [value]=\"item\" *ngFor=\"let item of endDates\">{{item}}\r\n                          </mat-option>\r\n                      </mat-select>\r\n                  </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.endDate.touched) && f.endDate.errors?.required\">\r\n                      End Day is required!\r\n                    </mat-error>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Basic <span class=\"error-asterisk\">*</span></span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6  px-1\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select matNativeControl disableOptionCentering  formControlName=\"basic\" placeholder=\"Basic\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\" id=\"employeeContributionSelect\">   \r\n                        <mat-option [value]=\"40\">40% CTC</mat-option>\r\n                        <mat-option [value]=\"50\">50% CTC</mat-option>\r\n                        <mat-option [value]=\"60\">60% CTC</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                  \r\n                  <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.basic.touched) && f.basic.errors?.required\">\r\n                    Basic is required!\r\n                  </mat-error>\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">HRA <span class=\"error-asterisk\">*</span></span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6  px-1\" >\r\n\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select matNativeControl disableOptionCentering  formControlName = \"hra\" placeholder=\"HRA\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\" id=\"employeeContributionSelect\">\r\n                        <mat-option [value]=\"\" data-placeholder>Select an option</mat-option>\r\n                        <mat-option [value]=\"8\">Basic * 8%</mat-option>\r\n                        <mat-option [value]=\"10\">Basic * 10%</mat-option>\r\n                        <mat-option [value]=\"12\">Basic * 12%</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            \r\n                  <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.hra.touched) && f.hra.errors?.required\">\r\n                    HRA is required!\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Does company have PF ?</span>\r\n                </div>\r\n                <div class = \"col-sm-6\" style = \"padding-left: 14px;\">\r\n                  <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" formControlName = \"pf\"\r\n                        id=\"flexSwitchCheckDefault\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Employee Contribution <span class=\"error-asterisk\">*</span></span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6  px-1\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select matNativeControl disableOptionCentering  formControlName = \"employeeContribution\" placeholder=\"Employee Contribution\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\" id=\"employeeContributionSelect\">\r\n                        <mat-option [value]=\"8\">Basic * 8%</mat-option>\r\n                        <mat-option [value]=\"10\">Basic * 10%</mat-option>\r\n                        <mat-option [value]=\"12\">Basic * 12%</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n              \r\n                  <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.employeeContribution.touched) && f.employeeContribution.errors?.required\">\r\n                    Employee Contribution is required!\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Do you deduct professional tax ?</span>\r\n                </div>\r\n                <div class = \"col-sm-6\" style = \"padding-left: 14px;\">\r\n                  <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" formControlName = \"deductTax\"\r\n                        id=\"flexSwitchCheckDefault\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-1 px-3\" style = \"float:right\">\r\n                <button type=\"button\" class=\"btn btn-save\" (click)=\"savePayrollsetting()\">Save</button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n<!-- for future work -->\r\n      <!-- <div class = \"my-4\">\r\n        <a class=\"btn text-nowrap\" type=\"button\" style = \"color:#EB8B3F;\" ><i\r\n          class=\"fas fa-plus me-2\"> </i>Add Another Salary Component\r\n        </a>\r\n      </div> -->\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { NewStructureComponent } from \"../new-structure/new-structure.component\";\r\nimport { PayrollService } from \"src/app/core/services/payroll.service\";\r\nimport { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\nimport { TitleCasePipe, formatDate } from \"@angular/common\";\r\nimport { CommonService } from \"src/app/core/services/common.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport * as moment from 'moment';\r\nimport { RolesPermissionsService } from \"src/app/core/services/roles-permissions.service\";\r\n\r\n@Component({\r\n  selector: \"app-create-structure\",\r\n  templateUrl: \"./create-structure.component.html\",\r\n  styleUrls: [\"./create-structure.component.scss\"],\r\n})\r\nexport class CreateStructureComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  public CreateStructureForm: FormGroup;\r\n  public employeeList:[];\r\n  public StructureId: any;\r\n  public submitted = false;\r\n  public ctc: number = 0;\r\n  public structureName: any;\r\n  public pf: boolean = false;\r\n  public deductTax: boolean = false;\r\n  public structureIdFlag:boolean= false;\r\n  public selectedRecordId: number | null = null; // Initialize with null or a default ID\r\n  public slectedStrucureName=\"\";\r\n  public PayNumber=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31]\r\n  endDates: number[];\r\n  \r\n\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private payrollService: PayrollService,\r\n    private formBuilder: FormBuilder,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private commonservice: CommonService,\r\n    public rolesPermissionsService: RolesPermissionsService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.CreateStructureForm = this.formBuilder.group({\r\n      startDate: [\"\", [Validators.required]],\r\n      endDate: [\"\", [Validators.required]],\r\n      basic: [\"\" ,[Validators.required]],\r\n      hra: [\"\", [Validators.required]],\r\n      pf: [false],\r\n      employeeContribution: [\"\", [Validators.required]],\r\n      deductTax: [false],\r\n    });\r\n\r\n    this.getStructureDetails();\r\n    this.commonservice.rowAdded$.subscribe(() => {\r\n      this.getStructureDetails();\r\n    });\r\n\r\n    this.getUsersList();\r\n\r\n    // To make the first option available as placeholder and remove it when clicked.\r\n    document.getElementById('employeeContributionSelect').addEventListener('click', () => {\r\n      const placeholderOption = document.getElementById('employeeContributionSelect').querySelector('option[data-placeholder]')\r\n      if (placeholderOption) {\r\n        placeholderOption.remove();\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  // To get the list of all employees.\r\n  getUsersList() {\r\n    this.rolesPermissionsService.getUsers({}, this.currentUser.id,1000,1).then((res) => {\r\n      this.employeeList = res.data.pageData;\r\n      console.log(\"employee\",this.employeeList)\r\n    })\r\n  }\r\n\r\n  // To get the list of all structures.\r\n  getStructureDetails(): void {\r\n    this.payrollService.getAllStructures({}, this.currentUser.id).then(\r\n      (res) => {\r\n        console.log(\"Structures\", res);\r\n        this.StructureId = res.data.rows;\r\n        this.structureName = res.data.rows;\r\n\r\n     \r\n      },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n          // this.toastService.openErrorSnackBar(\r\n          //   this.titleCasePipe.transform(err.error.error_message)\r\n          // );\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n          // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // Select Structure\r\n  selectStructure(structureId: any) {\r\n  \r\n    console.log(\"Select Structure\", structureId);\r\n    this.payrollService.getStructureById({}, structureId).then((res) => {\r\n      this.StructureId = res.data.id;\r\n      this.selectedRecordId = this.StructureId;\r\n\r\n      console.log(\"Structure by id\", this.StructureId);\r\n      const formattedStartDate = res.data.from\r\n      const formattedEndDate = res.data.to\r\n      this.slectedStrucureName=res.data.name;\r\n \r\n      this.CreateStructureForm.patchValue({\r\n        \"startDate\": formattedStartDate,\r\n        \"endDate\": formattedEndDate,\r\n        // \"startDate\": res.data.from ? (moment(res.data.from).format(\"DD-MMM-YYYY\")) : (moment(res.data.from).format(\"DD-MMM-YYYY\")),\r\n        // \"endDate\": res.data.to ? (moment(res.data.to).format(\"DD-MMM-YYYY\")) : (moment(res.data.to).format(\"DD-MMM-YYYY\")),\r\n        \"basic\": res.data.basic,\r\n        \"hra\":res.data.hra,\r\n        \"pf\":res.data.pfStatus,\r\n        \"employeeContribution\":res.data.employeeContribution,\r\n        \"deductTax\":res.data.professionalTax,\r\n        \"structureId\":res.data.id,\r\n      });\r\n      this.updateEndDateOptions();\r\n    });\r\n    \r\n  \r\n  }\r\n\r\n  // Short-cut used in mat errors.\r\n  get f() {\r\n    return this.CreateStructureForm.controls;\r\n  }\r\n\r\n  // To save the payroll setting.\r\n  savePayrollsetting() {\r\n    this.submitted = true;\r\n    if (this.CreateStructureForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      console.log(this.CreateStructureForm);\r\n      return false;\r\n    } else {\r\n      let body = {\r\n        \"from\" : this.CreateStructureForm.controls.startDate.value,\r\n        \"to\" : this.CreateStructureForm.controls.endDate.value,\r\n        \"pfStatus\": this.CreateStructureForm.controls.pf.value,\r\n        \"employeeContribution\": this.CreateStructureForm.controls.employeeContribution.value,\r\n        \"professionalTax\": this.CreateStructureForm.controls.deductTax.value,\r\n        \"basic\":this.CreateStructureForm.controls.basic.value,\r\n        \"hra\": this.CreateStructureForm.controls.hra.value,\r\n        \"structureId\": this.StructureId,\r\n      };\r\n      console.log(body);\r\n      this.payrollService.payrollSettingSave(body, this.StructureId).then(\r\n        (res: any) => {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Payroll Setting Data Added Successfully!!!\",\r\n            });\r\n          // this.toastService.openSnackBar(\r\n          //   \"Payroll Setting Data Added Successfully!!!\"\r\n          // );\r\n          this.CreateStructureForm.reset();\r\n          this.submitted = false;\r\n        },\r\n        (err) => {\r\n          if (err.error.expose) {\r\n            // this.toastService.openErrorSnackBar(\r\n            //   this.titleCasePipe.transform(err.error.error_message)\r\n            // );\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n          } else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n            // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // To open a dialog box of new structure form.\r\n  addNewStructure(): void {\r\n    const dialogRef: MatDialogRef<NewStructureComponent> = this.dialog.open(\r\n      NewStructureComponent,\r\n      {\r\n        width: \"500px\",\r\n        height: \"730px\",\r\n        data: {},\r\n        panelClass: \"custom-dialog-new-structure\",\r\n        disableClose: true,\r\n        position: {\r\n          right: \"0\",\r\n        },\r\n      }\r\n    );\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  updateEndDateOptions() {\r\n    const selectedStartDate = this.CreateStructureForm.get('startDate').value;\r\n    this.endDates = this.PayNumber.slice(selectedStartDate - 1); // Filter options based on selected \"From\" value\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n\r\n  <h1 class=\"modal-title\">Edit Payroll</h1>\r\n\r\n  <div class=\"payrollButtons\">\r\n\r\n      <button style=\"margin-right: 10px !important;\" type=\"button\"\r\n          class=\"btn btn-cancel\" (click) = \"clearEditStructureForm()\">Cancel</button>\r\n      <button type=\"button\" class=\"btn btn-save\" (click)=\"UpdatePayroll()\">Save</button>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n\r\n  <form [formGroup]=\"EditPayrollForm\">\r\n\r\n    <!-- <div class=\"row my-5\">\r\n      <div class = \"col-12\" style = \"font-size: 18px;font-weight: 600;padding-left: 16px;\">\r\n        Name\r\n      </div>\r\n    </div> -->\r\n\r\n    <div class=\"row mb-3\">\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <label class=\"form-label\">Date<span class=\"error-asterisk\">*</span></label>\r\n        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n          <input matInput required ngModel bsDatepicker placeholder=\"Date\"\r\n            style=\"text-transform:uppercase!important;\" [(ngModel)]=\"todaysDate\" id=\"datePicker\" bsDatepicker\r\n            [bsConfig]=\"{\r\n              containerClass: 'theme-dark-blue',\r\n              dateInputFormat: 'YYYY-MM-DD',\r\n              showWeekNumbers:false\r\n              }\"\r\n            [ngModelOptions]=\"{ standalone: true }\"   bsDatepicker (click)=\"openDatepicker()\" >\r\n          <span>\r\n            <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n          </span>\r\n        </mat-form-field>\r\n        <mat-error class=\"text-danger\" *ngIf=\"(submitted || todaysDate.touched) && todaysDate.errors?.required\">\r\n          Date Is Required!\r\n        </mat-error>\r\n      </div>\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <label class=\"form-label\">CTC<span class=\"error-asterisk\">*</span></label>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matNativeControl required matInput placeholder=\"CTC\"\r\n                autocomplete=\"off\" formControlName = \"ctc\">\r\n        </mat-form-field>\r\n        <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.ctc.touched)\" >\r\n          <mat-error *ngIf=\"f.ctc.errors?.required\">\r\n              CTC is required!\r\n          </mat-error>\r\n        </mat-error>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <label class=\"form-label\">Basic<span class=\"error-asterisk\">*</span></label>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matNativeControl matInput placeholder=\"Basic\"\r\n                autocomplete=\"off\" formControlName = \"basic\" readonly>\r\n        </mat-form-field>\r\n        <!-- <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.basic.touched)\" >\r\n          <mat-error *ngIf=\"f.basic.errors?.required\">\r\n            Basic is required!\r\n          </mat-error>\r\n        </mat-error> -->\r\n      </div>\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <label class=\"form-label\">HRA<span class=\"error-asterisk\">*</span></label>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matNativeControl matInput placeholder=\"HRA\"\r\n                autocomplete=\"off\" formControlName = \"hra\" readonly>\r\n        </mat-form-field>\r\n        <!-- <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.hra.touched)\" >\r\n          <mat-error *ngIf=\"f.hra.errors?.required\">\r\n            HRA is required!\r\n          </mat-error>\r\n        </mat-error> -->\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n</div>\r\n\r\n\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\nimport { CommonService } from \"src/app/core/services/common.service\";\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport * as moment from 'moment';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-payroll',\r\n  templateUrl: './edit-payroll.component.html',\r\n  styleUrls: ['./edit-payroll.component.scss']\r\n})\r\nexport class EditPayrollComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  public EditPayrollForm: FormGroup;\r\n  public todaysDate;\r\n  public employeeId:any;\r\n  public structureID: any;\r\n\r\n  public submitted: boolean = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditPayrollComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private payrollService:PayrollService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private commonService: CommonService,\r\n    @Inject(MAT_DIALOG_DATA) public payrollData: any,\r\n    private roleService:RolesPermissionsService,\r\n    ) {\r\n      this.todaysDate = new Date();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.employeeId=this.payrollData.employeeId;\r\n\r\n    this.getProfileData();\r\n\r\n    this.EditPayrollForm = this.formBuilder.group({\r\n      date: [\"\", new Date()],\r\n      ctc:[\"\", Validators.required],\r\n      basic:[\"\"],\r\n      hra:[\"\"],\r\n    });\r\n\r\n  }\r\n\r\n  // Short-cut used in mat errors.\r\n  get f() {\r\n    return this.EditPayrollForm.controls;\r\n  }\r\n\r\n  // To close the dialog.\r\n  clearEditStructureForm() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // To get the info of selected employees.\r\n  getProfileData(){\r\n    this.roleService.getEmployeeById({}, this.employeeId).then((res:any)=>{\r\n      console.log(\"Payroll employee by id\",res)\r\n     // const calcBasic = (res.data.employeePayroll.ctc * res.data.employeePayroll.employeeStructure.basic);\r\n      //const calcHRA = ((res.data.employeePayroll.ctc * res.data.employeePayroll.employeeStructure.basic) * res.data.employeePayroll.employeeStructure.hra);\r\n      this.EditPayrollForm.patchValue({\r\n        \"ctc\": res.data.employee ? res.data.employee.salary:0,\r\n        \"basic\": res.data.employeePayroll ? res.data.employeePayroll.employeeStructure.basic:0,\r\n        //\"basic\": res.data.employeePayroll.employeeStructure.basic,\r\n        \"hra\":res.data.employeePayroll?.employeeStructure?.hra ,\r\n       // \"basic\": calcBasic ? calcBasic : 0.00,\r\n       // \"hra\":calcHRA ? calcHRA : 0.00,\r\n      })\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n\r\n    )\r\n\r\n  }\r\n\r\n  // To update the ctc of the employee.\r\n  UpdatePayroll(){\r\n    if (this.EditPayrollForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    } else {\r\n      let body=\r\n      {\r\n        \"date\" : moment(this.EditPayrollForm.controls.date.value, 'DD-MMM-YYYY').format('YYYY-MM-DD'),\r\n        \"ctc\" : this.EditPayrollForm.controls.ctc.value,\r\n        \"empId\" :this.employeeId,\r\n        \"userId\" : this.employeeId\r\n      \r\n    }\r\n    this.payrollService.addSalary(body).then((res:any)=>{\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Payroll Updated Successfully!!!\",\r\n        });\r\n      // this.toastService.openSnackBar(\"Payroll Updated Successfully!!!\");\r\n      this.commonService.notifyDataAdded();\r\n      this.dialogRef.close();\r\n\r\n    }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n          // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n          // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      })\r\n    }\r\n  }\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.todaysDate\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.todaysDate = new Date()\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-0\">\r\n\r\n  <!-- <div class=\"row d-flex flex-center mb-3\">\r\n    <div class=\"col-md-1 col-lg-5 col-xl-6\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\"\r\n      [(ngModel)]=\"searchKey\" (keyup)=\"getUsersListSearch(searchKey)\" >\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-4 col-xl-3\" style = \"display:flex;justify-content: space-around !important;align-items: center;flex-wrap: wrap;\">\r\n      <button class=\"btn text-nowrap  mt-2\" type=\"button\" (click)=\"assignPayroll(payrollList.id)\" ><i\r\n        class=\"fas fa-plus me-2\"> </i>Assign\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap  mt-2\" >\r\n          <i class=\"fas fa-upload\"></i> Import\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap  mt-2\"><i\r\n              class=\"fas fa-download\"></i>\r\n      </button>\r\n    </div>\r\n  </div> -->\r\n\r\n  <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n    <div class=\"flex-item searchBar\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5  mt-2\" placeholder=\"Name\"\r\n      [(ngModel)]=\"searchKey\" (keyup)=\"getUsersListSearch(searchKey)\" >\r\n    </div>\r\n    <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n      <button class=\"btn text-nowrap  mt-2\" type=\"button\" (click)=\"assignPayroll(payrollList.id)\" ><i\r\n        class=\"fas fa-plus me-2\"> </i>Assign\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <hr class=\"my-0 py-0\" /> -->\r\n\r\n  <div class=\"table-container overflow-visible\">\r\n    <div class=\"table-div\" style=\"overflow-x: auto;\">\r\n    <table class=\"table table-responsive mb-0 bg-white\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-nowrap col-1\" style=\"vertical-align:middle;width:40px;\">\r\n                  <!-- <input  type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\"\r\n                      (change)=\"onChekMultiple($event)\" [value]=\"-1\" [checked]=\"checkSelect\" [(ngModel)]=\"allSelect\"/> -->\r\n                </th>\r\n                <!-- <th style = \"width:50px !important;\"></th> -->\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Full Name</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Designation</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Salary Structure</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">CTC</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Basic</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">HRA</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">PF</th>\r\n                <!-- <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Special Allowance</th> -->\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle\"></th>\r\n\r\n            </tr>\r\n            <tr>\r\n              <th style=\"padding: 0px !important; height: 1px!important;\" colspan=\"9\">\r\n                <hr class=\"col-12\" style=\"margin-top: 0px; margin-bottom: 0px;\">\r\n              </th>\r\n          </tr>\r\n        </thead>\r\n\r\n\r\n        <tbody>\r\n          <tr *ngFor=\"let item of payrollList; let i = index\" style=\"color: #676398!important;\" >\r\n            <td scope=\"row\" style=\"vertical-align:middle;\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"checkSelectsinglefalse\"\r\n                (change)=\"onChekedsingleCheckfalse($event,item.id)\" [value]=\"item.id\" />\r\n            </td>\r\n            <td>\r\n              <!-- <div class=\"party-info p-0\" style = \"vertical-align:middle;text-align:end;\">\r\n                <span><img  [src]=\"item.profileImage\" alt=\"Profile\"  onerror=\"this.src='assets/img/dashboard-party-profiles/party-profile-1.png'\"\r\n                  alt=\"Profile\" style = \"width:40px;height:41px;\"\r\n                     class=\"rounded-circle\">\r\n                 </span>\r\n              </div>\r\n              <div>\r\n                <div>{{ item.firstName }}</div>\r\n                <div>{{ item.mobile }}</div>\r\n              </div> -->\r\n              <div class=\"row\" style = \"display: flex;flex-direction:row;justify-content:flex-start;align-items: center;flex-wrap:nowrap;padding-left: 8px;padding-right: 8px;\">\r\n                <div class = \"flex-item\" style = \"flex-basis: 55px;\">\r\n                  <img  [src]=\"item.profileImage\" alt=\"Profile\"  onerror=\"this.src='assets/img/dashboard-party-profiles/party-profile-1.png'\"\r\n                    alt=\"Profile\" width=\"50\" height=\"50\" class=\"rounded-circle\">\r\n                </div>\r\n                <div class=\"flex-item party-name\" style = \"display: flex;flex-direction: column;align-items: flex-start;flex-basis: 70px;\">\r\n                    <div>{{ item.firstName }}</div>\r\n                    <div class=\"mobile\">{{ item.mobile }}</div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;\">{{ item.employee.designation }}</td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;\">\r\n              <span *ngIf=\"item.employee.employeeStructure === null\">\r\n                {{'NA'}}\r\n              </span>\r\n              <span *ngIf=\"item.employee.employeeStructure !== null\">\r\n                {{ item.employee.employeeStructure.name }}\r\n              </span>\r\n            </td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{ ((item.employee ? item.employee.salary : 0 )) }}</td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{ (item.employee.employeeStructure? item.employee.employeeStructure.basic:0)}}</td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.employee.employeeStructure ? item.employee.employeeStructure.hra : 0) }}</td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.employee.employeeStructure? item.employee.employeeStructure.employeeContribution: 0) }}</td>\r\n            <!-- <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{ item.specialAllowance  }}</td> -->\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: center;\">\r\n              <button class=\"btn btnp me-2\" (click)=\"editPayrollById(item.id)\">\r\n                <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"top\" title=\"Edit\"></span>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <!-- Change \"payrollList.length\" to \"payrollList\"  -->\r\n        <tbody *ngIf=\"payrollList.length == 0\">\r\n          <tr class=\"text-center\">\r\n            <td colspan=\"12\">\r\n              <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\" alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n\r\n              <!-- <img class=\"image-responsive\" src=\"assets/img/icons/spot-illustrations/GST No Transaction.png\" width=\"124\" height=\"142\" alt=\"\"> -->\r\n              <!-- <h5 class=\"text-nowrap pt-2\" style=\"font-weight: 600;color: #000000;\">No Payroll Is Added. Please Add Payroll To Be Displayed Here.</h5> -->\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AssignPayrollComponent } from '../assign-payroll/assign-payroll.component';\r\nimport { EditPayrollComponent } from '../edit-payroll/edit-payroll.component';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\nimport { CommonService } from \"src/app/core/services/common.service\";\r\n\r\n@Component({\r\n  selector: 'app-payroll-list',\r\n  templateUrl: './payroll-list.component.html',\r\n  styleUrls: ['./payroll-list.component.scss']\r\n})\r\n\r\nexport class PayrollListComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public employeePayrollId: any;\r\n  public searchKey: any;\r\n  public payrollList: any=[];\r\n  public structureList: any[];\r\n  public StructureId: any;\r\n  public structureName: any;\r\n  public result: any = [];\r\n  public basicSalary:any=[];\r\n  public hraSalary:any=[]\r\n  public pfSalary:any=[]\r\n  public payrollResult:any = [];\r\n  public empnewId:any;\r\n\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private rolesPermissionsService: RolesPermissionsService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    public payrollService: PayrollService,\r\n    private commonservice: CommonService,\r\n    ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getPayrollList();\r\n\r\n    this.commonservice.rowAdded$.subscribe(() => {\r\n      this.getPayrollList();\r\n    });\r\n\r\n    this.getStructureDetails();\r\n\r\n  }\r\n\r\n  // Get all structure details.\r\n  getStructureDetails(): void {\r\n    this.payrollService.getAllStructures({}, this.currentUser.id).then(\r\n      (res) => {\r\n        console.log(\"Structures\", res);\r\n        this.StructureId = res.data.rows;\r\n        this.structureName = res.data.rows;\r\n        this.getPayrollList();\r\n      },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          // this.toastService.openErrorSnackBar(\r\n          //   this.titleCasePipe.transform(err.error.error_message)\r\n          // );\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n          // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // Code for Multiple selection if necessary.\r\n\r\n  // onChekMultiple($event) {\r\n  //   let id = $event.target.value;\r\n  //   this.isChecked = $event.target.checked;\r\n  //   console.log(\"this.isChecked\", this.isChecked)\r\n  //   this.upiCheckedId1 = this.payrollList.map((item) => {\r\n  //     if (id == -1) {\r\n  //       if (this.isChecked == true) {\r\n  //         this.checkSelectsinglefalse = true;\r\n  //         return item;\r\n  //       }\r\n  //       else {\r\n  //         this.checkSelectsinglefalse = false;\r\n  //         this.upiCheckedId = [];\r\n  //         this.upiCheckedId1=[];\r\n  //       }\r\n  //     }\r\n  //   })\r\n  //   console.log(\"multiple click\", this.upiCheckedId1)\r\n  //   for (var i = 0; i < this.upiCheckedId1.length; i++) {\r\n  //       this.upiCheckedId.push(this.upiCheckedId1[i].id);\r\n  //   }\r\n  //   console.log(\"multiple click\", this.upiCheckedId)\r\n\r\n  // }\r\n\r\n  // Code for single selction.\r\n  onChekedsingleCheckfalse(e, id) {\r\n    console.log(\"checked\", e.target.checked)\r\n\r\n    if (e.target.checked == true) {\r\n      // this.archiveIconfalse = true;\r\n      this.upiCheckedId.push(e.target.value);\r\n      console.log(\"this.upiCheckedId\", this.upiCheckedId)\r\n\r\n    }\r\n    else {\r\n\r\n        var index = this.upiCheckedId.indexOf(id);\r\n        console.log(index)\r\n        this.upiCheckedId.splice(index, 1);\r\n        console.log(\"this.upiCheckedId\", this.upiCheckedId)\r\n\r\n        if (this.upiCheckedId.length > 0) {\r\n        }\r\n        else {\r\n          this.upiCheckedId = [];\r\n        }\r\n\r\n    }\r\n  }\r\n\r\n  // Get the info of all employees.\r\n  getPayrollList() {\r\n    this.basicSalary = [];\r\n    this.hraSalary = [];\r\n    this.pfSalary = [];\r\n    this.rolesPermissionsService.getUsers({}, this.currentUser.id,1000,1).then((res) => {\r\n      console.log(\"getPayrollList\", res.data)\r\n\r\n      this.upiCheckedId = [];\r\n      this.payrollList = res.data.pageData;\r\n\r\n      this.payrollList.forEach((item) => {\r\n        // Calculate basicSalary and hraSalary for each item\r\n        const salary = item.employee.salary ? item.employee.salary : 0;\r\n\r\n        item.employeePayroll = item.employeePayroll || {}; // Ensure employeePayroll exists\r\n\r\n        item.employeePayroll.employeeStructure = item.employeePayroll.employeeStructure || {}; // Ensure employeeStructure exists\r\n\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.basic) {\r\n          // Your code here\r\n          item.employee.employeeStructure.basic = salary * (item.employee.employeeStructure.basic / 100 || 0);\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.basic && item.employee.employeeStructure.hra) {\r\n          item.employee.employeeStructure.hra = item.employee.employeeStructure.basic * (item.employee.employeeStructure.hra / 100 || 0);\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.basic && item.employee.employeeStructure.employeeContribution) {\r\n          item.employee.employeeStructure.employeeContribution = item.employee.employeeStructure.basic * (item.employee.employeeStructure.employeeContribution / 100 || 0);\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.basic !== undefined) {\r\n          // Perform the assignment\r\n          item.employee.employeeStructure.basic = item.employee.employeeStructure.basic;\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.hra !== undefined) {\r\n          // Perform the assignment\r\n          item.employee.employeeStructure.hra = item.employee.employeeStructure.hra;\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.employeeContribution !== undefined) {\r\n          // Perform the assignment\r\n          item.employee.employeeStructure.employeeContribution = item.employee.employeeStructure.employeeContribution;\r\n        } else {\r\n        }\r\n\r\n    \r\n\r\n\r\n      //  this.hraSalary.push(item.employeePayroll.hra);\r\n       // this.pfSalary.push(item.employeePayroll.employeeContribution);\r\n\r\n\r\n      });\r\n      console.log(\"payrollList\", this.payrollList);\r\n      console.log(\"Basicsalary    hraSalary  pfsalary--->\",this.basicSalary,this.hraSalary,this.pfSalary)\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  // Search bar functionality\r\n  getUsersListSearch(searchKey) {\r\n    this.rolesPermissionsService.getUsersSearch({}, this.currentUser.id,searchKey).then((res) => {\r\n      this.payrollList = res.data.pageData;\r\n      if(this.payrollList.length > 0){\r\n     //   this.toastService.openSnackBar(\"Record Found Successfully!!!\")\r\n      }else{\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Record Not Found!!!\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Record Not Found Successfully!!!\");\r\n      }\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  // To open dialig box of Assign Payroll form.\r\n  assignPayroll(payrollList): void {\r\n    if (this.upiCheckedId.length == 0) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Please Select The Employee You Want To Assign.\",\r\n      });\r\n      // this.toastService.openErrorSnackBar(\"Please select the employee you want to assign.\");\r\n    } else {\r\n      const dialogRef: MatDialogRef<AssignPayrollComponent> = this.dialog.open(AssignPayrollComponent, {\r\n        width: '50%',\r\n        height : '730px',\r\n        data: { structureId : this.upiCheckedId},\r\n        panelClass: 'custom-dialog-assign-payroll',\r\n        disableClose:true,\r\n        position: {\r\n          right: '0',\r\n        },\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((result) => {\r\n        console.log(`Dialog result: ${result}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  // To open dialig box of Edit Payroll form.\r\n  editPayrollById(employeeId): void {\r\n\r\n    const dialogRef: MatDialogRef<EditPayrollComponent> = this.dialog.open(EditPayrollComponent, {\r\n      // width: '1050px',\r\n      height : '730px',\r\n      data: {employeeId:employeeId},\r\n      panelClass: 'custom-dialog-edit-payroll',\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n// Main component\r\nimport { PayrollComponent } from './payroll.component';\r\n\r\n// Sub-components\r\nimport { CreateStructureComponent } from './create-structure/create-structure.component';\r\nimport { PayrollListComponent } from './payroll-list/payroll-list.component';\r\nimport { SetupPayrollComponent } from './setup-payroll/setup-payroll.component';\r\n\r\n// Child components of payload list\r\nimport { AssignPayrollComponent } from './assign-payroll/assign-payroll.component';\r\nimport { EditPayrollComponent } from './edit-payroll/edit-payroll.component';\r\n\r\n// Child component of create structure\r\nimport { NewStructureComponent } from './new-structure/new-structure.component';\r\nimport { SaalryReleaseListComponent } from './saalry-release-list/saalry-release-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: PayrollComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'payroll-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'payroll-list',\r\n        component:PayrollListComponent,\r\n      },\r\n      {\r\n        path:'assign-payroll',\r\n        component:AssignPayrollComponent,\r\n      },\r\n      {\r\n        path:'edit-payroll',\r\n        component:EditPayrollComponent,\r\n      },\r\n      {\r\n        path:'setup-payroll',\r\n        component:SetupPayrollComponent,\r\n      },\r\n      {\r\n        path:'create-structure',\r\n        component:CreateStructureComponent,\r\n      },\r\n      {\r\n        path:'new-structure',\r\n        component:NewStructureComponent,\r\n      },\r\n      {\r\n        path:'release-salary',\r\n        component:SaalryReleaseListComponent\r\n      }\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PayrollRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\nimport { PayrollRoutingModule } from './payroll-routing.module';\r\nimport { PayrollListComponent } from './payroll-list/payroll-list.component';\r\nimport { SetupPayrollComponent } from './setup-payroll/setup-payroll.component';\r\nimport { CreateStructureComponent } from './create-structure/create-structure.component';\r\nimport { NewStructureComponent } from './new-structure/new-structure.component';\r\nimport { AssignPayrollComponent } from './assign-payroll/assign-payroll.component';\r\nimport { EditPayrollComponent } from './edit-payroll/edit-payroll.component';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\nimport { SaalryReleaseListComponent } from './saalry-release-list/saalry-release-list.component';\r\nimport { SaalryReleaseViewComponent } from './saalry-release-view/saalry-release-view.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PayrollListComponent,\r\n    SetupPayrollComponent,\r\n    CreateStructureComponent,\r\n    AssignPayrollComponent,\r\n    EditPayrollComponent,\r\n    NewStructureComponent,\r\n    SaalryReleaseListComponent,\r\n    SaalryReleaseViewComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PayrollRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialExampleModule,\r\n    MatDatepickerModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ],\r\n  providers: [PayrollService],\r\n})\r\nexport class PayrollModule { }\r\n","\r\n\r\n\r\n<!-- <div class=\"row d-flex flex-center mb-3 pe-3\">\r\n    <div class=\"col-md-1 col-lg-8 col-xl-8\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Type/Payment\"\r\n     >\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-1 col-xl-1 \" style = \"display:flex;justify-content: space-around !important;align-items: center;flex-wrap: wrap;\">\r\n      <button class=\"btn text-nowrap  mt-2\" type=\"button\" ><i\r\n        class=\"fas fa-plus me-1\"> </i>Submit\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <hr class=\"my-0 py-0\" /> -->\r\n\r\n\r\n<div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n  <div class=\"flex-item searchBar\">\r\n    <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Type/Payment\">\r\n  </div>\r\n  <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n    <button class=\"btn text-nowrap  my-2\" type=\"button\"  (click)=\"submitSalary()\" ><i\r\n      class=\"fas fa-plus me-1\"> </i>Submit\r\n    </button>  </div>\r\n</div>\r\n\r\n\r\n<hr class=\"my-0 py-0\" />\r\n\r\n<div class=\"row m-1 bg-light mb-3\">\r\n    <div class=\"col-lg-2 col-xl-2 col-sm-12 col-md-2 bg-light\">\r\n\r\n    </div>\r\n    <div class=\"col-lg-6 col-xl-6 col-sm-12 col-md-6 card bg-light  m-3 \" style=\"float: right !important;background-color: #EEEEF6 !important;\">\r\n        <div class=\"row text-center\" >\r\n            <div class=\"col-lg-12 col-xl-12 col-md-12 col-sm-12\">\r\n                <p class=\"text-black \" style=\"font-size: 16px!important;font-weight: 500!important;font-family: Poppins;\">Period : December 2022 | 30 Base Days<span>\r\n                        <button class=\"btn btnp me-4\">\r\n                            <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                        </button></span> </p>\r\n            </div>\r\n        </div>\r\n        <div class=\"row text-center\">\r\n            <div class=\"col-lg-6 col-xl-6 col-md-12 col-sm-12\">\r\n                <p class=\"text-black\"  style=\"font-weight: 500!important;font-family: Poppins;\">₹&nbsp;{{payrollCost | number:'1.2-2'}}</p>\r\n                <p style=\"color:gray;font-family: Poppins;\" >PAYROLL COST </p>\r\n\r\n            </div>\r\n            <div class=\"col-lg-6 col-xl-6 col-md-12 col-sm-12\">\r\n                <p class=\"text-black\" style=\"font-weight: 500!important;font-family: Poppins;\">₹&nbsp;{{employeeNetPay | number:'1.2-2'}}</p>\r\n                <p style=\"color:gray;font-family: Poppins;\">EMPLOYESS NET PAY</p>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"col-lg-2 col-xl-2 col-sm-12 col-md-2 card m-3  bg-white\">\r\n        <p class=\"text-center\" style=\"color:gray;font-family: Poppins;\">PAY DAY</p>\r\n        <p class=\"text-center fw-bold text-black\" style = \"font-family: Poppins;font-weight: 500 !important;\">30</p>\r\n        <p class=\"text-center text-black\" style = \"font-family: Poppins;\">Dec,2023</p>\r\n        <hr>\r\n        <p class=\"text-center fw-bold text-black\" style = \"font-family: Poppins;font-weight: 500 !important;\">{{employeeLength}} Employees</p>\r\n    </div>\r\n    <div class=\"col-lg-2 col-xl-2 col-sm-12 col-md-2 bg-light\">\r\n    </div>\r\n</div>\r\n\r\n<div class=\"table-container overflow-visible\">\r\n    <div class=\"table-div\" style=\"overflow-x: auto;\">\r\n    <table class=\"table table-responsive mb-0 bg-white\">\r\n        <thead>\r\n        <tr>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;padding-left: 15px;padding-top: 15px;\"></th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Full Name</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Designation</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Paid Days</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Gross Pay</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Deduction</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Tax</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Net Pay</th>\r\n            <th></th>\r\n\r\n        </tr>\r\n        <tr>\r\n            <th style=\"padding: 0px !important; height: 1px!important;\" colspan=\"9\"><hr class=\"col-12\" style=\"margin-top: 0px; margin-bottom: 0px;\"></th>\r\n        </tr>\r\n    </thead>\r\n\r\n\r\n        <tbody>\r\n\r\n            <tr class=\"btn-reveal-trigger text-left \" style=\"color: #676398!important;\"\r\n                *ngFor=\"let item of salaryData\">\r\n                <td class=\"text-nowrap\" style=\"vertical-align:middle; margin-left: 100px !important;\"><input\r\n                    type=\"checkbox\" class=\"form-check-input\" [checked]=\"checkSelectsinglefalse\"\r\n                    (change)=\"onChekedsingleCheckfalse($event,item.id)\" [value]=\"item.id\"></td>\r\n                <td style=\"vertical-align:middle;\">\r\n                    <div class=\"row\" style = \"display: flex;flex-direction:row;justify-content:flex-start;align-items: center;flex-wrap:nowrap;padding-right: 8px;\">\r\n                      <div class = \"flex-item\" style = \"flex-basis: 55px;\">\r\n                        <img  [src]=\"item.profileImage\" alt=\"Profile\"  onerror=\"this.src='assets/img/dashboard-party-profiles/party-profile-1.png'\"\r\n                          alt=\"Profile\" width=\"50\" height=\"50\" class=\"rounded-circle\">\r\n                      </div>\r\n                      <div class=\"flex-item party-name\" style = \"display: flex;flex-direction: column;align-items: center;flex-basis: 70px;\">\r\n                          <div>{{ item.firstName }}</div>\r\n                      </div>\r\n                    </div>\r\n                </td>\r\n                <td style=\"vertical-align:middle;\">{{item.employee ? item.employee.department:\"-\" }}</td>\r\n                <td style=\"vertical-align:middle;\">30 Days</td>\r\n                <td style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.employee? item.employee.grossPay : 0)  | number:'1.2-2'}}</td>\r\n                <td style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{item.totalDeduct | number:'1.2-2'}}</td>\r\n                <td style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.Tax ? item.Tax : 0) | number:'1.2-2'}}</td>\r\n                <td style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.totalNetPay ? item.totalNetPay :0)  | number:'1.2-2'}}</td>\r\n                <td style=\"vertical-align:middle;text-align: center;\">\r\n                    <button class=\"btn btnp me-4\" type=\"button\" (click)=\"openViewSalaryModel(item.id)\">\r\n                        <span class=\"bi bi-eye icon-color iconFontSize\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                            title=\"View\"></span>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n        <tbody *ngIf=\"salaryData.length == 0\">\r\n            <tr class=\"text-center\">\r\n                <td colspan=\"10\">\r\n                    <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                        alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { SaalryReleaseViewComponent } from '../saalry-release-view/saalry-release-view.component';\r\nimport { SaalryReleaseServiceService } from 'src/app/core/services/saalry-release-service.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\n\r\n@Component({\r\n  selector: 'app-saalry-release-list',\r\n  templateUrl: './saalry-release-list.component.html',\r\n  styleUrls: ['./saalry-release-list.component.scss']\r\n})\r\nexport class SaalryReleaseListComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public payrollCost:any=0;\r\n  public employeeNetPay:any=0;\r\n  public employeeLength=0\r\n  public salaryData=[]\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public submitted: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n\r\n  constructor( private dialog: MatDialog,private saalryReleaseServiceService:SaalryReleaseServiceService,private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private commonService: CommonService,  private payrollService: PayrollService,) { }\r\n  ngOnInit(): void {\r\n    this.getSalaryData();\r\n    this.saalryReleaseServiceService.partyAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getSalaryData();\r\n    });\r\n  }\r\n  getSalaryData(){\r\n    this.saalryReleaseServiceService.getAllSalaryData({},this.currentUser.id).then((res:any)=>{\r\n      this.salaryData= res.data.employee;\r\n      this.payrollCost=res.data.payrollCost;\r\n      this.employeeNetPay=res.data.employeeNetPay;\r\n      this.employeeLength=this.salaryData.length\r\n      console.log(\"Salary Details\",this.salaryData);\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        // this.toastService.openErrorSnackBar(\r\n        //   this.titleCasePipe.transform(err.error.error_message)\r\n        // );\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      } else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n    )\r\n  }\r\n  openViewSalaryModel(employeeId:any){\r\n    const dialogRef: MatDialogRef<SaalryReleaseViewComponent> = this.dialog.open(SaalryReleaseViewComponent, {\r\n      width: '50%',\r\n      height : '100vh',\r\n      data: {employeeId:employeeId},\r\n      panelClass: 'custom-dialog-edit-payroll',\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n\r\n  }\r\n    submitSalary(){\r\n    this.submitted = true;\r\n    if (this.upiCheckedId.length == 0) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Please Select The Employee You Want To submit.\",\r\n      });\r\n      return false;\r\n    } else{\r\n      let body = {\r\n        \"ids\": this.upiCheckedId,\r\n        \"details\": {\r\n          \"name\": \"test\",\r\n          \"description\": \"test description\"\r\n      }\r\n      }\r\n      this.payrollService.salarySubmit(body,this.currentUser.id).then((res) => {\r\n        console.log(res);\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Salary submitted Successfully!!!\",\r\n          });\r\n        this.commonService.notifyDataAdded();\r\n        this.submitted = false;\r\n        \r\n      },\r\n        (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n          }\r\n  \r\n        })\r\n    }\r\n  }\r\n    // Code for single selction.\r\n   onChekedsingleCheckfalse(e, id) {\r\n    console.log(\"checked\", e.target.checked)\r\n\r\n    if (e.target.checked == true) {\r\n      // this.archiveIconfalse = true;\r\n      this.upiCheckedId.push(e.target.value);\r\n      console.log(\"this.upiCheckedId\", this.upiCheckedId)\r\n\r\n    }\r\n    else {\r\n\r\n        var index = this.upiCheckedId.indexOf(id);\r\n        console.log(index)\r\n        this.upiCheckedId.splice(index, 1);\r\n        console.log(\"this.upiCheckedId\", this.upiCheckedId)\r\n\r\n        if (this.upiCheckedId.length > 0) {\r\n        }\r\n        else {\r\n          this.upiCheckedId = [];\r\n        }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">{{ salaryData.employee ? salaryData.employee.firstName : \"-\"}}</h1>\r\n\r\n    <div class=\"flex d-flex \" style=\"margin-left: auto;\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" (click)=\"onclear()\" type=\"button\"\r\n            class=\"btn btn-cancel\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"getAllOffersType()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row mb-3\">\r\n        <div class=\"col-lg-6 col-xl-6 col-md-6 col-sm-12\" style=\"margin-left: 20px !important;\">\r\n            <p class=\"text-black fw-bold\">Designation : {{salaryData.employee ? salaryData.employee.department :\"-\"}}</p>\r\n            <p class=\"text-black fw-bold\">Date of Joining : 21-09-2019</p>\r\n            <p class=\"text-black fw-bold\">Paid Days: 28</p>\r\n            <p class=\"text-black fw-bold\">LOP:3</p>\r\n        </div>\r\n\r\n        <div class=\"col-lg-6 col-xl-6 col-md-6 col-sm-12\"></div>\r\n    </div>\r\n    <div class=\"container\">\r\n        <table class=\"table table-responsive  table-bordered fs--1 mb-2 \">\r\n            <tr>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;\" class=\"text-success fw-bold\">(+) Earning </th>\r\n                <th class=\"text-nowrap\" style = \"text-align: right !important;\" class=\"text-black fw-bold\">Amount</th>\r\n            </tr>\r\n            <tbody>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">Basic</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;{{( (salaryData.employee && salaryData.employee.employeeStructure.basic) ? salaryData.employee.employeeStructure.basic : 0.00)  | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">HRA</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;{{(( salaryData.employee && salaryData.employee.employeeStructure.hra) ? salaryData.employee.employeeStructure.hra : 0.00) | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">Special Allowance</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;0.00</td>\r\n                </tr>\r\n                <tr *ngIf=\"addErningFlag\">\r\n                    <td class=\"text-nowrap \" style=\" vertical-align:middle;\">Adjust Amount</td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"><input (keydown.enter)=\"AdjustAmount($event)\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap fw-bold\" style=\" vertical-align:middle;color:#6090EE !important;\" (click)=\"AddEarning()\">+ Add Earning</td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\" class=\"text-black fw-bold\">Gross Earning</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\" class=\"text-black fw-bold\">₹&nbsp;{{totalEarning | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"class=\" text-danger fw-bold\">(-) Deduction</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\" class=\"text-black fw-bold\">Amount</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">PF</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;{{( ( salaryData.employee && salaryData.employee.employeeStructure.employeeContribution) ? salaryData.employee.employeeStructure.employeeContribution : 0.00) | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">Profession Tax</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;{{( ( salaryData.employee && salaryData.employee.employeeStructure.professionalTax) ? salaryData.employee.employeeStructure.professionalTax : 0.00) | number:'1.2-2'}}\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">Paid leave Taken(2)</td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"></td>\r\n                </tr>\r\n                <tr *ngIf=\"adddeductFlag\">\r\n                    <td class=\"text-nowrap\" style=\" vertical-align:middle;\">Adjust Amount</td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"><input (keydown.enter)=\"deductAmount($event)\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap fw-bold\" (click)=\"AddDeduct()\" style=\" vertical-align:middle;color:#6090EE !important;\"> + Add Deduction </td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"  class=\"text-black fw-bold\"> Total Deduction</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\"  class=\"text-black fw-bold\">₹&nbsp;{{totalDeduct | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr class=\"bg-light\">\r\n                    <td class=\"text-nowrap\"  class=\"text-black fw-bold\" style=\"vertical-align:middle;\"> Total Net Payable</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\"> ₹&nbsp;{{totaltotalNetPayable | number:'1.2-2'}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12 col-xl-12 col-md-12 col-sm-12\">\r\n            <p class=\"text-black fw-bold\" *ngIf=\"isNumeric(totaltotalNetPayable) && isNumeric(finalAmount)\">\r\n                Total Net Payable  ₹&nbsp; {{ totaltotalNetPayable | number:'1.2-2' }} ({{ finalAmount | number:'1.2-2' }})\r\n              </p>            \r\n              <p class=\"text-black fw-bold text-center\">Total Net Payable =(Gross Earning - Total Deductions)</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { SaalryReleaseServiceService } from 'src/app/core/services/saalry-release-service.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ToWords } from 'to-words';\r\n\r\n\r\n@Component({\r\n  selector: 'app-saalry-release-view',\r\n  templateUrl: './saalry-release-view.component.html',\r\n  styleUrls: ['./saalry-release-view.component.scss']\r\n})\r\nexport class SaalryReleaseViewComponent implements OnInit {\r\n  public employeeId:any=[];\r\n  public salaryData:any=[];\r\n  public finalAmount: any;\r\n  public totaltotalNetPayable:any = 0\r\n  public totalDeduct:any = 0\r\n  public totalEarning:any = 0\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  \r\n  toWords = new ToWords({\r\n    localeCode: 'en-IN',\r\n    converterOptions: {\r\n      currency: true,\r\n      ignoreDecimal: false,\r\n      ignoreZeroCurrency: true,\r\n    }\r\n  });\r\n  calcBasic: number;\r\n  calcHRA: number;\r\n  public addErningFlag:boolean=false\r\n  public adddeductFlag:boolean=false\r\n  public adjustEarnAmount:any=0;\r\n  public adjustDeductAmount:any=0;\r\n\r\n  constructor(public dialogRef: MatDialogRef<SaalryReleaseViewComponent>,@Inject(MAT_DIALOG_DATA) public employeeData: any,private saalryReleaseServiceService:SaalryReleaseServiceService,private toastService: ToastNotificationService,\r\n  private titleCasePipe: TitleCasePipe,private roleService:RolesPermissionsService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.employeeId=this.employeeData.employeeId;\r\n    this.GetsalryDataByEmployeeId();\r\n    this.getProfileData();\r\n\r\n  }\r\n  GetsalryDataByEmployeeId(){\r\n    this.saalryReleaseServiceService.getAllSalaryDataByEmployeeId({},this.employeeId).then((res:any)=>{\r\n      this.salaryData= res.data.employee\r\n      this.totaltotalNetPayable=res.data.totalNetPayable\r\n      this.finalAmount= res.data.totalNetPayable;\r\n      this.convertToWord(this.finalAmount)\r\n      console.log(\"res\",this.salaryData);\r\n\r\n      this.totalDeduct = res.data.deduction\r\n      this.totalEarning= res.data.grossEarning\r\n\r\n  \r\n\r\n    }\r\n    ,\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        // this.toastService.openErrorSnackBar(\r\n        //   this.titleCasePipe.transform(err.error.error_message)\r\n        // );\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      } else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n    )\r\n\r\n  }\r\n  getProfileData(){\r\n    this.roleService.getEmployeeById({}, this.employeeId).then((res:any)=>{\r\n      console.log(\"Payroll employee by id\",res)\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n\r\n    )\r\n\r\n  }\r\n\r\n  convertToWord(num) {\r\n    this.finalAmount = this.toWords.convert(num);\r\n  }\r\n  onclear(){\r\n    this.dialogRef.close();\r\n  }\r\n  getAllOffersType(){\r\n\r\n  }\r\n  AddEarning(){\r\n    this.addErningFlag=!this.addErningFlag\r\n  }\r\n  AddDeduct(){\r\n    this.adddeductFlag=!this.adddeductFlag\r\n  }\r\n  AdjustAmount(e){\r\n     this.adjustEarnAmount = parseInt((e.target as HTMLInputElement).value);\r\n    console.log('Entered value:', this.adjustEarnAmount);\r\n    let body={\r\n      \"grossType\": \"EARNING\",   //gross type should be either EARNING OR DEDUCTION\r\n      \"name\": \"Adjust Amount\",\r\n      \"total\": this.adjustEarnAmount,\r\n      \"employeeId\":this.employeeId\r\n     \r\n    }\r\n    this.saalryReleaseServiceService.PostEarningDeduct(body,this.currentUser.id).then((res:any)=>{\r\n      // this.toastService.openSnackBar(\"Earning Details Added Successfully!!!\");\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Earning Details Added Successfully!!!\",\r\n      });\r\n      this.saalryReleaseServiceService.notifyPartyAdded();\r\n      this.addErningFlag=false;\r\n      this.dialogRef.close();\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n  deductAmount(e){\r\n    this.adjustDeductAmount = parseInt((e.target as HTMLInputElement).value);\r\n    console.log('Entered value:', this.adjustDeductAmount);\r\n    let body={\r\n      \"grossType\": \"DEDUCTION\",   //gross type should be either EARNING OR DEDUCTION\r\n      \"name\": \"Adjust Amount\",\r\n      \"total\": this.adjustDeductAmount,\r\n      \"employeeId\":this.employeeId\r\n    }\r\n    this.saalryReleaseServiceService.PostEarningDeduct(body,this.currentUser.id).then((res:any)=>{\r\n     this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Deduction Details Added Successfully!!!\",\r\n        });\r\n      // this.toastService.openSnackBar(\"Deduction  Details Added Successfully!!!\");\r\n      this.saalryReleaseServiceService.notifyPartyAdded();\r\n      this.adddeductFlag=false;\r\n      this.dialogRef.close();\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n    isNumeric(value: any): boolean {\r\n    return !isNaN(parseFloat(value)) && isFinite(value);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-setup-payroll',\r\n  templateUrl: './setup-payroll.component.html',\r\n  styleUrls: ['./setup-payroll.component.scss']\r\n})\r\nexport class SetupPayrollComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-0\">\r\n\r\n  <!-- <div class=\"row d-flex flex-center mb-3\">\r\n    <div class=\"col-md-1 col-lg-5 col-xl-6\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Designation\">\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-4 col-xl-3 mt-2\" style = \"display:flex;justify-content: space-around !important;align-items: center;\">\r\n      <button class=\"btn text-nowrap\" type=\"button\"  ><i\r\n        class=\"fas fa-plus me-2\"> </i>Add New\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap\" >\r\n          <i class=\"fas fa-upload\"></i> Import\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap\"><i\r\n              class=\"fas fa-download\"></i></button>\r\n      <input class=\"inputhide\" type=\"file\" name=\"file\" id=\"uploadFile\" accept=\".xls,.xlsx\"/>\r\n    </div>\r\n  </div> -->\r\n\r\n  <!-- <hr class=\"my-0 py-0\" /> -->\r\n\r\n  <div class = \"row mt-5\">\r\n\r\n    <div class=\"col-sm-12 col-md-11 col-lg-10 col-xl-9 col-xxl-8\">\r\n\r\n      <div class=\"card\">\r\n\r\n        <form>\r\n\r\n          <hr class=\"my-0 py-0\" />\r\n\r\n          <div class=\"row my-3 px-3\">\r\n            <div class = \"col-12\" style = \"font-size: 18px;font-weight: 600;\">\r\n              Payroll Setting\r\n            </div>\r\n          </div>\r\n\r\n          <hr class=\"my-0 py-0\" />\r\n\r\n          <div class=\"row my-3 px-3\">\r\n            <div class = \"col-12\">\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Pay Cycle</span>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div style = \"padding-left: 5px;\">From</div>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div style = \"padding-left: 5px;\">To</div>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Basic</span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"50% CTC\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">HRA</span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"Basic * 12%\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-6 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Does company have PF ?</span>\r\n                </div>\r\n                <div class = \"col-sm-6 col-md-6\" style = \"padding-left: 14px;\">\r\n                  <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\"\r\n                        id=\"flexSwitchCheckDefault\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Employee Contribution</span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"Basic * 12%\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-6 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Do you deduct professional tax ?</span>\r\n                </div>\r\n                <div class = \"col-sm-6 col-md-6\" style = \"padding-left: 14px;\">\r\n                  <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\"\r\n                        id=\"flexSwitchCheckDefault\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-3 px-3\" style = \"float:right\">\r\n                <button type=\"button\" class=\"btn btn-save\" style = \"width:100px;\">Save</button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n      <div class = \"my-4\">\r\n        <a class=\"btn text-nowrap\" type=\"button\" style = \"color:#EB8B3F;\" ><i\r\n          class=\"fas fa-plus me-2\"> </i>Add Another Salary Component\r\n        </a>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n"]}