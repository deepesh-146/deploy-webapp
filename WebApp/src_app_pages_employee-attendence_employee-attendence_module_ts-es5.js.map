{"version":3,"mappings":"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","names":["EmployeeAttendenceService","httpClient","data","Promise","resolve","reject","call","src_app_helpers_url_constants__WEBPACK_IMPORTED_MODULE_0__","subscribe","res","err","employeeId","_angular_core__WEBPACK_IMPORTED_MODULE_2__","factory","providedIn","_angular_core__WEBPACK_IMPORTED_MODULE_6__","ctx_r1","EmployeeAttendenceFromComponent","formBuilder","toastService","commonService","titleCasePipe","rolesPermissionsService","datePipe","cd","_fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_0__","_fullcalendar_interaction__WEBPACK_IMPORTED_MODULE_1__","title","start","Date","JSON","parse","localStorage","getItem","today","console","log","getEmployeeByEmployeeId","getAttendeceForm","rowAdded$","getEmployeeAttendenceData","detectChanges","AttendanceForm","controls","group","start_time","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","end_time","Status","calendarVisible","calendarWeekends","calendarApi","calendarComponent","getApi","gotoDate","arg","confirm","dateStr","calendarEvents","concat","date","allDay","submitted","invalid","openErrorSnackBar","value","Body","currentEmployee","id","userId","addAttendenceDetails","then","success","notifyDataAdded","openSnackBar","reset","error","expose","transform","error_message","getEmployeeById","parentId","getAttendenceDetails","AttendeceData","length","backenddate","createdAt","caldata","map","p","status","calenderdata","stringify","events","selectors","viewQuery","routes","path","component","_employee_attendence_employee_attendence_component__WEBPACK_IMPORTED_MODULE_1__","children","redirectTo","pathMatch","_employee_attendence_from_employee_attendence_from_component__WEBPACK_IMPORTED_MODULE_0__","routerLinkActiveOptions","exact","EmployeeAttendenceRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","imports","exports","_fullcalendar_angular__WEBPACK_IMPORTED_MODULE_7__","_fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_4__","_fullcalendar_interaction__WEBPACK_IMPORTED_MODULE_5__","_fullcalendar_list__WEBPACK_IMPORTED_MODULE_6__","EmployeeAttendenceModule","_angular_common__WEBPACK_IMPORTED_MODULE_9__","_employee_attendence_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_10__","src_app_material_module__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_11__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_12__","declarations","_employee_attendence_from_employee_attendence_from_component__WEBPACK_IMPORTED_MODULE_1__","_employee_attendence_employee_attendence_component__WEBPACK_IMPORTED_MODULE_3__","EmployeeAttendenceComponent","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/core/services/employee-attendence.service.ts","webpack:///src/app/pages/employee-attendence/employee-attendence-from/employee-attendence-from.component.ts","webpack:///src/app/pages/employee-attendence/employee-attendence-from/employee-attendence-from.component.html","webpack:///src/app/pages/employee-attendence/employee-attendence-routing.module.ts","webpack:///src/app/pages/employee-attendence/employee-attendence.module.ts","webpack:///src/app/pages/employee-attendence/employee-attendence/employee-attendence.component.ts","webpack:///src/app/pages/employee-attendence/employee-attendence/employee-attendence.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeAttendenceService {\r\n\r\n  constructor(public httpClient:HttpService) { }\r\n  addAttendenceDetails(data:{}){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.postAttendence ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  getAttendenceDetails(data:{},employeeId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getAttendence +employeeId ,  'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n}\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { CalendarOptions } from '@fullcalendar/angular'; // Import CalendarOptions\r\nimport { FullCalendarComponent } from '@fullcalendar/angular';\r\nimport { EventInput } from '@fullcalendar/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction'; //\r\nimport { EmployeeAttendenceService } from 'src/app/core/services/employee-attendence.service';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-attendence-from',\r\n  templateUrl: './employee-attendence-from.component.html',\r\n  styleUrls: ['./employee-attendence-from.component.scss']\r\n})\r\nexport class EmployeeAttendenceFromComponent implements OnInit , AfterViewInit {\r\n  @ViewChild('calendar') calendarComponent: FullCalendarComponent; // the #calendar in the template\r\n  calendarVisible = true;\r\n  calendarPlugins = [dayGridPlugin, interactionPlugin];\r\n  calendarWeekends = true;\r\n  calendarEvents: EventInput[] = [\r\n    { title: 'Event Now', start: new Date() }\r\n  ];\r\n\r\n\r\n\r\n  public AttendanceForm: any\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public userId: any;\r\n  public AttendeceData: any\r\n  public calDataStatus: any;\r\n  public calDataDate: any;\r\n  public caldata: any;\r\n  public submitted: boolean = false;\r\n  public calenderdata:any;\r\n  public backenddate : Date;\r\n  public today: Date;\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,private commonService : CommonService,\r\n    private titleCasePipe: TitleCasePipe, public rolesPermissionsService: RolesPermissionsService, public EmployeeAttendenceService: EmployeeAttendenceService, private datePipe: DatePipe,\r\n    private cd : ChangeDetectorRef) \r\n    {   }\r\n\r\n  ngOnInit(): void {\r\n    this.today = new Date();\r\n    console.log(\"this.today\",this.today)\r\n    this.getEmployeeByEmployeeId();\r\n    \r\n    this.getAttendeceForm();\r\n    //this.caldataJSON;\r\n\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      this.getEmployeeAttendenceData();\r\n     });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n\r\n    this.getEmployeeAttendenceData();\r\n    this.cd.detectChanges();\r\n  }\r\n  get f() {\r\n    return this.AttendanceForm.controls;\r\n  }\r\n  getAttendeceForm() {\r\n    this.AttendanceForm = this.formBuilder.group({\r\n      start_time: ['', [Validators.required]],\r\n      end_time: ['', [Validators.required]],\r\n      Status: ['', [Validators.required]],\r\n      //uploadDocument: [\"\"],\r\n\r\n    });\r\n\r\n  }\r\n  toggleVisible() {\r\n    this.calendarVisible = !this.calendarVisible;\r\n  }\r\n\r\n  toggleWeekends() {\r\n    this.calendarWeekends = !this.calendarWeekends;\r\n  }\r\n\r\n  gotoPast() {\r\n    let calendarApi = this.calendarComponent.getApi();\r\n    calendarApi.gotoDate('2000-01-01'); // call a method on the Calendar object\r\n  }\r\n\r\n  handleDateClick(arg) {\r\n    if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\r\n      this.calendarEvents = this.calendarEvents.concat({ // add new event data. must create new array\r\n        title: 'New Event',\r\n        start: arg.date,\r\n        allDay: arg.allDay\r\n      })\r\n    }\r\n  }\r\n  postAttendence() {\r\n    this.submitted = true;\r\n    if (this.AttendanceForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      console.log(this.AttendanceForm.controls.start_time.value , this.AttendanceForm.controls.end_time.value)\r\n      if (this.AttendanceForm.controls.start_time.value < this.AttendanceForm.controls.end_time.value) {\r\n        let Body = {\r\n          \"inTime\": this.AttendanceForm.controls.start_time.value,\r\n          \"outTime\": this.AttendanceForm.controls.end_time.value,\r\n          \"status\": this.AttendanceForm.controls.Status.value,\r\n          \"employeeId\": this.currentEmployee.id,\r\n          \"userId\": this.userId\r\n        }\r\n        this.EmployeeAttendenceService.addAttendenceDetails(Body).then((res: any) => {\r\n          if(res.success){\r\n            this.commonService.notifyDataAdded();\r\n            this.toastService.openSnackBar(\"Employee Attendence Added Successfully\");\r\n            this.AttendanceForm.reset();\r\n            this.submitted = false;\r\n          }\r\n          \r\n        }\r\n          , (err) => {\r\n            if (err.error.expose) {\r\n              this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n            }\r\n            else {\r\n              this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n            }\r\n          })\r\n\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"In time must be less than Out time!!!\");\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  getEmployeeByEmployeeId() {\r\n    this.rolesPermissionsService.getEmployeeById({}, this.currentEmployee.id).then((res) => {\r\n\r\n      //console.log(\"In Leave --> employee BY UDER Id\", res.data);\r\n      this.userId = res.data.parentId;\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n\r\n  }\r\n  getEmployeeAttendenceData() {\r\n    console.log(\"enter\")\r\n    this.EmployeeAttendenceService.getAttendenceDetails({}, this.currentEmployee.id).then((res: any) => {\r\n      //console.log(\"Attendece data\", res)\r\n      this.AttendeceData = res.data;\r\n      //console.log(\"Attendece data\", this.AttendeceData)\r\n      // this.calDataStatus=this.AttendeceData.map((p)=>{\r\n      //   return p.status\r\n      // })\r\n      // this.calDataDate=this.AttendeceData.map((p)=>{\r\n      //   return p.createdAt\r\n      // })\r\n      if (this.AttendeceData.length > 0) {\r\n        this.backenddate =  this.AttendeceData[this.AttendeceData.length - 1].createdAt;\r\n      } \r\n      console.log(\"this.backenddate\",this.backenddate)\r\n      this.caldata = this.AttendeceData.map((p) => {\r\n        return {\r\n          title: p.status,\r\n          start: this.datePipe.transform(p.createdAt, 'yyyy-MM-dd'),\r\n        };\r\n      })\r\n\r\n\r\n      console.log(\"calData\", this.caldata)\r\n      this.calenderdata = JSON.stringify({\r\n        events: this.caldata,\r\n      });\r\n\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  // caldataJSON() {\r\n  //   //this.getEmployeeAttendenceData()\r\n  //  // console.log(\"caldata enter\")\r\n  //   return JSON.stringify({\r\n  //     events: this.caldata,\r\n  //   });\r\n  // }\r\n\r\n}\r\n","<div class=\"card bg-white mb-3\">\r\n    <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: center;\">\r\n        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Today Date : {{this.today | date:\"dd MMM YYYY\"}}</div>\r\n        <hr>\r\n    </div>\r\n    <div class=\"card-body\" *ngIf=\"(today | date:'dd MMM yyyy') === (backenddate | date:'dd MMM yyyy')\">\r\n        <div class=\"container-fluid px-2 text-black\" style=\"font-weight:600;font-size:14px!important;\">\r\n            You Already Filled Your Daily Attendence Sheet.\r\n        </div>\r\n    </div>\r\n    <div class=\"card-body\" *ngIf=\"(today | date:'dd MMM yyyy') !== (backenddate | date:'dd MMM yyyy')\">\r\n        <div class=\"container-fluid px-2\">\r\n            <form [formGroup]=\"AttendanceForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-10 col-sm-10 col-md-10 col-lg-10\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-4\">\r\n                                <label class=\"form-label\">In Time<span class=\"error-asterisk\">*</span></label>\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <input type=\"time\" matInput placeholder=\"Start Time\" formControlName=\"start_time\"\r\n                                        [ngClass]=\"{ 'is-invalid': f.start_time.invalid && f.start_time.touched && submitted }\"\r\n                                        [value]=\"AttendanceForm.controls.start_time.value || null\">\r\n                                </mat-form-field>\r\n                                <mat-error class=\"text-danger mb-1\"\r\n                                    *ngIf=\"(submitted || f.start_time.touched) && f.start_time.errors?.required\">\r\n                                    Start Time Is Required!\r\n                                </mat-error>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-4\">\r\n                                <label class=\"form-label\">Out Time<span class=\"error-asterisk\">*</span></label>\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <input type=\"time\" matInput placeholder=\"End Time\" formControlName=\"end_time\"\r\n                                        [ngClass]=\"{ 'is-invalid': f.end_time.invalid && f.end_time.touched && submitted }\"\r\n                                        [value]=\"AttendanceForm.controls.end_time.value || null\">\r\n                                </mat-form-field>\r\n                                <mat-error class=\"text-danger mb-1\"\r\n                                    *ngIf=\"(submitted || f.end_time.touched) && f.end_time.errors?.required\">\r\n                                    End Time Is Required!\r\n                                </mat-error>\r\n\r\n                            </div>\r\n                            <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-4\">\r\n                                <label class=\"form-label\">Status<span class=\"error-asterisk\">*</span></label>\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <mat-select matNativeControl disableOptionCentering placeholder=\"Status\"\r\n                                        formControlName=\"Status\">\r\n                                        <mat-option value=\"Absent\">Absent</mat-option>\r\n                                        <mat-option value=\"Present\">Present</mat-option>\r\n\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                                <mat-error class=\"text-danger mb-1\"\r\n                                    *ngIf=\"(submitted || f.Status.touched) && f.Status.errors?.required\">\r\n                                     Status Is Required!\r\n                                </mat-error>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xs-2 col-sm-2 col-md-2 col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n            <button class=\"btn btn-save mt-5\" style=\"float: right;\" (click)=\"postAttendence()\">Save</button>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"card  bg-white p-6\">\r\n\r\n    <!-- <div data-calendar='{\"events\":[{\"title\":\"Bootcamp\",\"start\":\"2023-08-28\"},{\"title\":\"Present\",\"start\":\"2023-08-29\"}]}'></div> -->\r\n    <div [attr.data-calendar]=\"calenderdata\"></div>\r\n    <!-- <div data-calendar=\"{'events':caldata}\"></div>  -->\r\n    <!-- <div  data-calendar=\"caldata\"></div> -->\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmployeeAttendenceFromComponent } from './employee-attendence-from/employee-attendence-from.component';\r\nimport { EmployeeAttendenceComponent } from './employee-attendence/employee-attendence.component';\r\n\r\nconst routes: Routes = [{\r\n  path:'',\r\n  component:EmployeeAttendenceComponent,\r\n  children: [\r\n    {\r\n      path:'',\r\n      redirectTo: 'emp-attendence-form',\r\n      pathMatch: 'full'\r\n    },\r\n    {\r\n      path:'emp-attendence-form',\r\n      component:EmployeeAttendenceFromComponent,\r\n    },\r\n  ],\r\n  pathMatch: 'prefix',\r\n  data: {\r\n    routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n  }\r\n},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeeAttendenceRoutingModule { }\r\n","import { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EmployeeAttendenceRoutingModule } from './employee-attendence-routing.module';\r\nimport { EmployeeAttendenceFromComponent } from './employee-attendence-from/employee-attendence-from.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { EmployeeAttendenceComponent } from './employee-attendence/employee-attendence.component';\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nFullCalendarModule.registerPlugins([\r\n  dayGridPlugin,\r\n  interactionPlugin,\r\n  listPlugin\r\n]);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmployeeAttendenceFromComponent,\r\n    EmployeeAttendenceComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EmployeeAttendenceRoutingModule,\r\n    CommonModule,\r\n  \r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FullCalendarModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class EmployeeAttendenceModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee-attendence',\r\n  templateUrl: './employee-attendence.component.html',\r\n  styleUrls: ['./employee-attendence.component.scss']\r\n})\r\nexport class EmployeeAttendenceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-4\">\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"row mt-3 page-nav-link\">\r\n             <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\" id=\"productlistLink\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-attendence-form\" routerLinkActive='active' >Daily Attendance</a>\r\n              </div>\r\n              <div class=\"col-xxl-9 col-xl-9 col-lg-9 col-md-3 col-sm-0 col-xs-0\"></div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <hr  class = \"mt-1\" />\r\n    <div>\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n"]}