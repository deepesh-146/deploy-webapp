{"version":3,"file":"src_app_pages_warehouse_warehouse_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/warehouse/components/warehouse-components/add-warehouse/add-warehouse.component.ts","./src/app/pages/warehouse/components/warehouse-components/add-warehouse/add-warehouse.component.html","./src/app/pages/warehouse/components/warehouse-components/edit-warehouse/edit-warehouse.component.ts","./src/app/pages/warehouse/components/warehouse-components/edit-warehouse/edit-warehouse.component.html","./src/app/pages/warehouse/components/warehouse-components/warehouse-list/warehouse-list.component.ts","./src/app/pages/warehouse/components/warehouse-components/warehouse-list/warehouse-list.component.html","./src/app/pages/warehouse/warehouse-routing.module.ts","./src/app/pages/warehouse/warehouse.component.ts","./src/app/pages/warehouse/warehouse.component.html","./src/app/pages/warehouse/warehouse.module.ts"],"sourcesContent":["import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { PartyService } from 'src/app/core/services/party.service';\r\nimport { SignupService } from 'src/app/core/services/signup.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { WarehouseService } from 'src/app/core/services/warehouse.service';\r\nimport { debounceTime, map, startWith } from \"rxjs/operators\";\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-add-warehouse',\r\n  templateUrl: './add-warehouse.component.html',\r\n  styleUrls: ['./add-warehouse.component.scss']\r\n})\r\nexport class AddWarehouseComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public warehouseForm: any;\r\n  public submitted: boolean = false;\r\n  public today: Date;\r\n  countryList: any[];\r\n  private pincodeSubscription: Subscription;\r\n  pinDetails: any;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,public rolePermissionservice: RolesPermissionsService,\r\n    public router: Router, private commonService: CommonService,\r\n    private toastService: ToastNotificationService, public dialog: MatDialog,\r\n    private titleCasePipe: TitleCasePipe,\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddWarehouseComponent>,\r\n    private warehouseService: WarehouseService,\r\n    public signupService: SignupService,\r\n    private partyService: PartyService\r\n  ) {\r\n    this.today = new Date();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    try {\r\n      this.warehouseForm = this.formBuilder.group({\r\n          name: [null, Validators.required],\r\n          shortName: [null, Validators.required],\r\n          businessName: [null, Validators.required],\r\n          address: [null, Validators.required],\r\n          email: [null, Validators.required, Validators.pattern(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\")],\r\n          password: [null, Validators.required],\r\n          country: [102],\r\n          pincode: [null],\r\n          city: [null],\r\n          state: [null],\r\n          mobile: [null],\r\n          contactPerson: [null],\r\n      });\r\n      this.warehouseForm.get('pincode').valueChanges\r\n    .pipe(debounceTime(500)) // Add a debounce time to avoid making API calls on every keystroke\r\n    .subscribe((pincode) => {\r\n      this.getPincodeDetails(pincode);\r\n    });\r\n  \r\n\r\n      this.getAllCountries()\r\n      \r\n    } catch (error) {\r\n        this.toastService.toastMsg({\r\n          title: 'Error',\r\n          content: error\r\n        })\r\n    }\r\n  }  \r\n  \r\n  get f() {\r\n    return this.warehouseForm.controls;\r\n  }\r\n  \r\n  getPincodeDetails(pin) {\r\n    this.rolePermissionservice.getEmployeePincode({}, pin).then((res) => {\r\n      this.pinDetails = res;\r\n      this.warehouseForm.patchValue({\r\n        state: res.data.stateName,\r\n        city: res.data.districtName\r\n      });\r\n    });\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  numberDecimalOnly(event): boolean {\r\n    var charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode != 46 && charCode > 31\r\n      && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSave() {\r\n    this.submitted = true;\r\n    console.log(this.warehouseForm.value.country)\r\n    if (this.warehouseForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    } else {\r\n      // const data = {\r\n      //     // \"id\": \"4\", //optional\r\n      //     \"userId\": this.currentUser.id,\r\n      //     \"name\": this.warehouseForm.value.name,\r\n      //     \"shortName\": this.warehouseForm.value.shortName,\r\n      //     \"companyName\":this.warehouseForm.value.businessName,\r\n      //     \"address\": this.warehouseForm.value.address,\r\n      //     \"pincode\": this.warehouseForm.value.pincode,\r\n      //     \"city\": this.warehouseForm.value.city,\r\n      //     \"state\": this.warehouseForm.value.state,\r\n      //     \"isActive\":true,\r\n      //     \"countryId\": this.warehouseForm.value.country,\r\n      //     \"contactPerson\": this.warehouseForm.value.contactPerson,\r\n      //     \"mobile\": this.warehouseForm.value.mobile\r\n      // }\r\n      const data = {\r\n          // \"id\": \"4\", //optional\r\n          email: this.warehouseForm.value.email,\r\n          password: this.warehouseForm.value.password,\r\n          countryId: \"102\",\r\n          firstName: this.warehouseForm.value.name,\r\n          lastName: this.warehouseForm.value.shortName,\r\n          parentId: this.currentUser.id\r\n      }\r\n      this.signupService.warehouseRegister(data).then( res => {\r\n      // this.warehouseService.postWarehouse(data).then( res => {\r\n        if(res.success) {\r\n          this.dialogRef.close();\r\n          this.commonService.notifyDataAdded()\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Warehouse Addedd Successfully!!!\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getAllCountries() {\r\n    this.partyService.getAllCountries({}).then((res) => {\r\n      this.countryList = res.data;\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;margin-left: 5px;\" class=\"modal-title mb-0\">Add Warehouse</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" style=\"margin-right: 10px;\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save ms-2\" (click)=\"onSave()\">Save</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"warehouseForm\">\r\n        <div class=\"row mb-3\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n              <label class=\"form-label\">Name<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Name\" maxlength=\"50\" formControlName=\"name\" required>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.name.touched) && f.name.errors?.required\">\r\n                Name is required!\r\n              </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">Short Name<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Short Name\" maxlength=\"50\" formControlName=\"shortName\" required>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.shortName.touched) && f.shortName.errors?.required\">\r\n                Short Name is required!\r\n              </mat-error>\r\n            </div>\r\n        \r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">Business Name<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Business Name\" maxlength=\"50\" formControlName=\"businessName\" required>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.businessName.touched) && f.businessName.errors?.required\">\r\n                Business Name is required!\r\n              </mat-error>\r\n            </div>\r\n        </div> \r\n\r\n        <div class=\"row mb-3\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label ms-2\"> Email Address<span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"email\" matInput required formControlName=\"email\" pattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\r\n                        placeholder=\"Email\" [ngClass]=\"{'is-invalid': f.email.invalid && f.email.touched && submitted}\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\"\r\n                    *ngIf=\"(submitted || f.email.touched) &&f.email.errors?.pattern\">\r\n                    Enter a valid email id.\r\n                </mat-error>\r\n                <mat-error class=\"text-danger\"\r\n                    *ngIf=\"(submitted || f.email.touched) && f.email.errors?.required\">\r\n                    Email is required.\r\n                </mat-error>\r\n            </div>\r\n        \r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">Password<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Password\" maxlength=\"50\" formControlName=\"password\" required>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.password.touched) && f.password.errors?.required\">\r\n                Password is required!\r\n              </mat-error>\r\n            </div>\r\n        </div>  \r\n\r\n        <div class=\"row mb-3\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">Contact Person</label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Contact Person\" maxlength=\"50\" formControlName=\"contactPerson\">\r\n              </mat-form-field>\r\n            </div>\r\n        \r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                <label class=\"form-label\">Contact #</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input matInput placeholder=\"Contact #\" minlength=\"10\" maxLength=\"10\" (keypress)=\"numberOnly($event)\" formControlName=\"mobile\">\r\n                </mat-form-field>\r\n                <mat-error *ngIf=\"f.mobile.errors?.maxlength\">\r\n                    Enter a valid contact #.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"f.mobile.errors?.minlength\">\r\n                    Enter a valid contact #.\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-sm-12 col-lg-12\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"billingAddress\" class=\"form-label\">Address<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput id=\"address\" formControlName=\"address\" maxlength=\"100\" required rows=\"2\"\r\n                            placeholder=\"Billing Address\" [ngClass]=\"{\r\n                                            'is-invalid': f.address.invalid && f.address.touched && submitted\r\n                                        }\" autocomplete=\"off\"></textarea>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                        Enter a valid Address.\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 col-sm-12\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\" for=\"country\">Country</label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering formControlName=\"country\"\r\n                            placeholder=\"Country\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\">\r\n                            <mat-option *ngFor=\"let country of countryList\" [value]=\"country.id\" [matTooltip]=\"country.countryName\">{{country.countryName }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.country.touched) &&f.country.errors?.required\">\r\n                        Enter a valid Country.\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6 col-sm-12\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\" for=\"pincode\">Pincode</label>\r\n                    <mat-form-field class=\"mb-3 example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" id=\"pincode\" placeholder=\"Pincode\" maxlength=\"6\" formControlName=\"pincode\" \r\n                            autocomplete=\"off\" (keypress)=\"numberOnly($event)\">\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 col-sm-12\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\" for=\"city\">City</label>\r\n                    <mat-form-field class=\"mb-3\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" id=\"city\" formControlName=\"city\" placeholder=\"City\"\r\n                            autocomplete=\"off\"\r\n                            [ngClass]=\"{'is-invalid': f.city.invalid && f.city.touched && submitted}\" />\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6 col-sm-12\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\" for=\"state\">State</label>\r\n                    <mat-form-field class=\"mb-3\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" id=\"state\" formControlName=\"state\" placeholder=\"State\"\r\n                            autocomplete=\"off\"\r\n                            [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched && submitted}\" />\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { PartyService } from 'src/app/core/services/party.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { WarehouseService } from 'src/app/core/services/warehouse.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-warehouse',\r\n  templateUrl: './edit-warehouse.component.html',\r\n  styleUrls: ['./edit-warehouse.component.scss']\r\n})\r\nexport class EditWarehouseComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public warehouseForm: any;\r\n  public submitted: boolean = false;\r\n  public today: Date;\r\n  types: string[] = ['DISCOUNT', 'PRODUCT', 'FLAT'];  // ['DISCOUNT', 'PRODUCT', 'FLAT', 'COUPONS'];\r\n  productsIdList: any;\r\n  selectedProductIds: string[] = [];\r\n  countryList: any[];\r\n  warehouseId: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router, private commonService: CommonService,\r\n    private toastService: ToastNotificationService, public dialog: MatDialog,\r\n    private titleCasePipe: TitleCasePipe,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<EditWarehouseComponent>,\r\n    private warehouseService: WarehouseService,\r\n    private partyService: PartyService\r\n  ) {\r\n    this.today = new Date();\r\n    this.warehouseId = this.data.warehouseId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    try {\r\n      this.warehouseForm = this.formBuilder.group({\r\n          name: [null, Validators.required],\r\n          shortName: [null, Validators.required],\r\n          businessName: [null, Validators.required],\r\n          address: [null, Validators.required],\r\n          country: [null],\r\n          pincode: [null],\r\n          city: [null],\r\n          state: [null],\r\n          mobile: [null],\r\n          contactPerson: [null]\r\n      });\r\n      this.getAllCountries()\r\n      this.getById()\r\n      \r\n    } catch (error) {\r\n        this.toastService.toastMsg({\r\n          title: 'Error',\r\n          content: error\r\n        })\r\n    }\r\n  }  \r\n  \r\n  get f() {\r\n    return this.warehouseForm.controls;\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getById(){\r\n    this.warehouseService.getById({}, this.currentUser.id, this.warehouseId).then((res) => {\r\n      if(res.success) {\r\n        // this.warehouseList = res.data;\r\n        this.warehouseForm.patchValue({\r\n          name: res.data.data?.name,\r\n          businessName: res.data.data?.companyName,\r\n          shortName: res.data.data?.shortName,\r\n          address: res.data.data?.address,\r\n          country: res.data.data?.countryId,\r\n          pincode: res.data.data?.pincode,\r\n          city: res.data.data?.city,\r\n          state: res.data.data?.state,\r\n          mobile: res.data.data?.mobile,\r\n          contactPerson: res.data.data?.contactPerson,\r\n        })        \r\n      }\r\n      },(err) => {\r\n        if (err.error.status === 404) {\r\n            this.toastService.toastMsg({\r\n              title: 'Error',\r\n              content: \"Data Not Found!!!\"\r\n            })\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: 'Error',\r\n            content: this.titleCasePipe.transform(err.error.error_message)\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  numberDecimalOnly(event): boolean {\r\n    var charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode != 46 && charCode > 31\r\n      && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSave() {\r\n    this.submitted = true;\r\n    console.log(this.warehouseForm)\r\n    if (this.warehouseForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    } else {\r\n      const data = {\r\n          // \"id\": `${this.warehouseId}`,\r\n          \"userId\": this.currentUser.id,\r\n          \"name\": this.warehouseForm.value.name,\r\n          \"shortName\": this.warehouseForm.value.shortName,\r\n          \"companyName\":this.warehouseForm.value.businessName,\r\n          \"address\": this.warehouseForm.value.address,\r\n          \"pincode\": `${this.warehouseForm.value.pincode}`,\r\n          \"city\": this.warehouseForm.value.city,\r\n          \"state\": this.warehouseForm.value.state,\r\n          \"contactPerson\": this.warehouseForm.value.contactPerson,\r\n          \"mobile\": this.warehouseForm.value.mobile,\r\n          // \"isActive\": true,\r\n          \"countryId\": this.warehouseForm.value.country\r\n      }\r\n      this.warehouseService.updateWarehouse(data, this.warehouseId).then( res => {\r\n        if(res.success) {\r\n          this.dialogRef.close();\r\n          this.commonService.notifyDataAdded()\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Warehouse Updated Successfully!!!\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getAllCountries() {\r\n    this.partyService.getAllCountries({}).then((res) => {\r\n      this.countryList = res.data;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;margin-left: 5px;\" class=\"modal-title mb-0\">Update Warehouse</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" style=\"margin-right: 10px;\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save ms-2\" (click)=\"onSave()\">Save</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"warehouseForm\">\r\n        <div class=\"row mb-3\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n              <label class=\"form-label\">Name<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Name\" maxlength=\"50\" formControlName=\"name\" required>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.name.touched) && f.name.errors?.required\">\r\n                Name is required!\r\n              </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">Short Name<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Short Name\" maxlength=\"50\" formControlName=\"shortName\" required>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.shortName.touched) && f.shortName.errors?.required\">\r\n                Short Name is required!\r\n              </mat-error>\r\n            </div>\r\n        \r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">Business Name<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Business Name\" maxlength=\"50\" formControlName=\"businessName\" required>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.businessName.touched) && f.businessName.errors?.required\">\r\n                Business Name is required!\r\n              </mat-error>\r\n            </div>\r\n        </div>  \r\n\r\n        <div class=\"row mb-3\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">Contact Person</label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Contact Person\" maxlength=\"50\" formControlName=\"contactPerson\">\r\n              </mat-form-field>\r\n            </div>\r\n        \r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                <label class=\"form-label\">Contact Number</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input matInput placeholder=\"Contact Number\" minlength=\"9\" maxLength=\"9\" (keypress)=\"numberOnly($event)\" formControlName=\"mobile\">\r\n                </mat-form-field>\r\n                <mat-error *ngIf=\"f.mobile.errors?.maxlength\">\r\n                    Enter a valid contact number.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"f.mobile.errors?.minlength\">\r\n                    Enter a valid contact number.\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-sm-12 col-lg-12\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"billingAddress\" class=\"form-label\">Address<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput id=\"address\" formControlName=\"address\" maxlength=\"100\" required rows=\"2\"\r\n                            placeholder=\"Billing Address\" [ngClass]=\"{\r\n                                            'is-invalid': f.address.invalid && f.address.touched && submitted\r\n                                        }\" autocomplete=\"off\"></textarea>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                        Enter a valid Address.\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 col-sm-12\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\" for=\"country\">Country</label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering formControlName=\"country\"\r\n                            placeholder=\"Country\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\">\r\n                            <mat-option *ngFor=\"let country of countryList\" [value]=\"country.id\">{{\r\n                                country.countryName }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.country.touched) &&f.country.errors?.required\">\r\n                        Enter a valid Country.\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6 col-sm-12\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\" for=\"pincode\">Pincode</label>\r\n                    <mat-form-field class=\"mb-3 example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" id=\"pincode\" placeholder=\"Pincode\" maxlength=\"6\" formControlName=\"pincode\" \r\n                            autocomplete=\"off\" (keypress)=\"numberOnly($event)\">\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 col-sm-12\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\" for=\"city\">City</label>\r\n                    <mat-form-field class=\"mb-3\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" id=\"city\" formControlName=\"city\" placeholder=\"City\"\r\n                            autocomplete=\"off\"\r\n                            [ngClass]=\"{'is-invalid': f.city.invalid && f.city.touched && submitted}\" />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.city.touched) &&f.city.errors?.required\">\r\n                        Enter a valid City.\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6 col-sm-12\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\" for=\"state\">State</label>\r\n                    <mat-form-field class=\"mb-3\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" id=\"state\" formControlName=\"state\" placeholder=\"State\"\r\n                            autocomplete=\"off\"\r\n                            [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched && submitted}\" />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.state.touched) &&f.state.errors?.required\">\r\n                        Enter a valid State.\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { WarehouseService } from 'src/app/core/services/warehouse.service';\r\nimport { AddWarehouseComponent } from '../add-warehouse/add-warehouse.component';\r\nimport { EditWarehouseComponent } from '../edit-warehouse/edit-warehouse.component';\r\n\r\n@Component({\r\n  selector: 'app-warehouse-list',\r\n  templateUrl: './warehouse-list.component.html',\r\n  styleUrls: ['./warehouse-list.component.scss']\r\n})\r\nexport class WarehouseListComponent implements OnInit {\r\n\r\n  private searchSubject = new Subject<string>();\r\n  private searchSubscription: Subscription;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  warehouseList: any[] = [];\r\n  excelFileUpload: any;\r\n  public currentpage: any;\r\n  public totalrow: any;\r\n  public totalPages: any;\r\n  public currentPageNo: number = 1;\r\n  public partyPageSize: number = 5;\r\n  public pagesize: number = 1;\r\n  public count: number = 0;\r\n  warehouseIdList: any[] = [];\r\n  selectedIdList: any[] = [];\r\n\r\n  public archiveIconfalse: boolean = false;\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n\r\n  public checkSelectsingle: boolean = false;\r\n\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSelectsingletrue: boolean = false;\r\n  warehouseId: any;\r\n  pageNumberDisplay: any[];\r\n  isLoading: boolean;\r\n  archivedPartyIds: any[];\r\n  unarchivedPartyIds: any[];\r\n  showUnarchiveButton: boolean;\r\n  showDeleteButton: boolean;\r\n  isdeletedParty: boolean;\r\n  selectedTypeFilter: string | null = null;\r\n  isFilterVisible: any;\r\n  @ViewChild('dropdown') dropdown: ElementRef;\r\n  searchKey: string;\r\n\r\n  constructor(public router: Router, public dialog: MatDialog, private commonService: CommonService,\r\n    public route: ActivatedRoute, private warehouseService: WarehouseService,\r\n    public toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllWarehouse();\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getAllWarehouse();\r\n    });\r\n\r\n    this.searchSubscription = this.searchSubject\r\n      .pipe(debounceTime(800),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true; // Show the loader when the API call is initiated\r\n        })).subscribe(searchKey => {\r\n          // Call the API with the search key\r\n          if (searchKey.length >= 3) {\r\n            this.searchKey = searchKey;\r\n            this.searchWarehouse(searchKey.trim());\r\n          } else if (searchKey === '') {\r\n             this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n            this.getAllWarehouse()\r\n          } else {\r\n            this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n          }\r\n        });\r\n  }\r\n\r\n  getAllWarehouse(searchKey?) {\r\n    this.warehouseService.getAllWarehouse({data: {}, userId: this.currentUser.id, size: this.partyPageSize, page: this.currentPageNo, search: (searchKey || '')}).then((res) => {\r\n      if(res.success) {\r\n        this.warehouseList = res.data.pageData;\r\n        this.currentPageNo = res.data.currentPage;\r\n        this.totalrow = res.data.totalrows;\r\n        this.totalPages = res.data.totalPages\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n      \r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n\r\n    }) \r\n  }\r\n\r\n  archhiveWarehouse(warehouseId: string, isdeleted: boolean) {\r\n    this.warehouseId = warehouseId;\r\n    this.isdeletedParty = isdeleted;\r\n    this.selectedIdList.push(warehouseId);\r\n  }\r\n\r\n  archiveSignleWarehouse() {\r\n    // if (this.isdeletedParty) {\r\n    //   this.warehouseService.unArchiveMultiplewarehouses({data: { unArchivewarehouses: this.selectedIdList }, userId: this.currentUser.id}).then((res: any) => {\r\n    //     if (res.success) {\r\n    //       this.toastService.toastMsg({\r\n    //         title: 'Success',\r\n    //         content: \"warehouse Unarchived Successfully!!!\"\r\n    //       });\r\n\r\n    //       this.getAllWarehouse();\r\n    //     }\r\n    //   })\r\n    // }\r\n    // else {\r\n    //   this.warehouseService.deleteMultiplewarehouses({data: { archivewarehouses: this.selectedIdList }, userId: this.currentUser.id}).then((res: any) => {\r\n    //     if (res.success) {\r\n    //       this.toastService.toastMsg({\r\n    //         title: 'Success',\r\n    //         content: \"warehouse Archived Successfully!!!\"\r\n    //       });\r\n    //       this.getAllWarehouse();\r\n    //     }\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  onChekedsingleCheck(e, partyId) {\r\n    if (e.target.checked) {\r\n      this.warehouseIdList.push(partyId);\r\n      this.checkSingleArray.push(e.target.value);\r\n    } else {\r\n      const index = this.warehouseIdList.indexOf(partyId);\r\n      if (index !== -1) {\r\n        this.warehouseIdList.splice(index, 1);\r\n        this.checkSingleArray.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    // Clear the archived and unarchived party IDs\r\n    this.archivedPartyIds = [];\r\n    this.unarchivedPartyIds = [];\r\n\r\n    // Update the archived and unarchived party IDs based on the selected parties\r\n    this.warehouseIdList.forEach(partyId => {\r\n      const party = this.warehouseList.find(item => item.id === partyId);\r\n      if (party) {\r\n        if (party.isDeleted) {\r\n          this.archivedPartyIds.push(partyId);\r\n        } else {\r\n          this.unarchivedPartyIds.push(partyId);\r\n        }\r\n      }\r\n    })\r\n\r\n    // Check if all the selected parties are archived\r\n    const allArchived = this.warehouseIdList.every(partyId => {\r\n      const party = this.warehouseList.find(item => item.id === partyId);\r\n      return party && party.isDeleted;\r\n    });\r\n\r\n    // Check if all the selected parties are unarchived\r\n    const allUnarchived = this.warehouseIdList.every(partyId => {\r\n      const party = this.warehouseList.find(item => item.id === partyId);\r\n      return party && !party.isDeleted;\r\n    });\r\n\r\n    // if (allArchived && allUnarchived) {\r\n    if (this.archivedPartyIds.length > 0 && this.unarchivedPartyIds.length > 0) {\r\n      // Show an alert error message to the user\r\n      alert(\"Please select either archived or unarchived Warehouses.\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.warehouseIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n\r\n    } else if (allArchived) {\r\n      console.log('Archived');\r\n      // Show unarchive button\r\n      this.showUnarchiveButton = true;\r\n      this.showDeleteButton = false;\r\n    } else if (allUnarchived) {\r\n      console.log('Unarchived');\r\n      // Show archive button\r\n      this.showDeleteButton = true;\r\n      this.showUnarchiveButton = false;\r\n    } else {\r\n      // Show error message or handle the case when there are both archived and unarchived parties selected\r\n      alert(\"Please select either archived or unarchived Warehouses.\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.warehouseIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n      this.showDeleteButton = false;\r\n      this.showUnarchiveButton = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getSingleCheckedId(warehouseId) {\r\n    this.warehouseId = warehouseId;\r\n  }\r\n\r\n  onChekMultiple($event) {\r\n    const isChecked = $event.target.checked;\r\n    if (isChecked) {\r\n      this.warehouseIdList = this.warehouseList.map(item => item.id);\r\n    } else {\r\n      this.warehouseIdList = [];\r\n      this.showDeleteButton = false;\r\n      this.showUnarchiveButton = false\r\n    }\r\n    this.checkSelect = isChecked; // Update the checkbox state in the header\r\n\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    this.upiCheckedId = this.warehouseList.map((item) => {\r\n      if (id === -1) {\r\n        if (this.isChecked == true) {\r\n          this.checkSelectsingle = true;\r\n          return item.id;\r\n        }\r\n        else {\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n        }\r\n      }\r\n    })\r\n    // Clear the archived and unarchived party IDs\r\n    this.archivedPartyIds = [];\r\n    this.unarchivedPartyIds = [];\r\n\r\n    // Update the archived and unarchived party IDs based on the selected parties\r\n    this.warehouseIdList.forEach(partyId => {\r\n      const party = this.warehouseList.find(item => item.id === partyId);\r\n      if (party) {\r\n        if (party.isDeleted) {\r\n          this.archivedPartyIds.push(partyId);\r\n        } else {\r\n          this.unarchivedPartyIds.push(partyId);\r\n        }\r\n      }\r\n\r\n      // Check if all the selected parties are archived\r\n      const allArchived = this.warehouseIdList.every(partyId => {\r\n        const party = this.warehouseList.find(item => item.id === partyId);\r\n        return party && party.isDeleted;\r\n      });\r\n      // Check if all the selected parties are unarchived\r\n      const allUnarchived = this.warehouseIdList.every(partyId => {\r\n        const party = this.warehouseList.find(item => item.id === partyId);\r\n        return party && !party.isDeleted;\r\n      });\r\n\r\n      if (allArchived) {\r\n        // Show unarchive button\r\n        this.showUnarchiveButton = true\r\n        this.showDeleteButton = false;\r\n      } else if (allUnarchived) {\r\n        // Show archive button\r\n        this.showDeleteButton = true;\r\n        this.showUnarchiveButton = false\r\n      } else {\r\n        // Show error message or handle the case when there are both archived and unarchived parties selected\r\n      }\r\n    });\r\n\r\n    if (this.archivedPartyIds.length > 0 && this.unarchivedPartyIds.length > 0) {\r\n      alert(\"Please select either archived or unarchived Warehouses\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.warehouseIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n\r\n      // Throw an error to prevent further processing\r\n      this.toastService.toastMsg({\r\n        title: 'Warning',\r\n        content: 'Please select either archived or unarchived Warehouses'\r\n      })\r\n      throw new Error(\"Please select either archived or unarchived Warehouses\");\r\n    }\r\n  }\r\n\r\n  getUPIcheckId(warehouseId) {\r\n    this.warehouseId = warehouseId;\r\n  }\r\n\r\n  archiveMultipleWarehouse() {\r\n    if (this.currentPageNo === 1) {\r\n      this.currentPageNo = this.currentPageNo;\r\n    }\r\n    else {\r\n      if (this.totalPages > this.currentPageNo) {\r\n        this.currentPageNo = this.currentPageNo - 1;\r\n      }\r\n    }\r\n    const requestBody = {\r\n      archiveWarehouses: this.warehouseIdList\r\n    };\r\n\r\n    // this.warehouseService.deleteMultiplewarehouses({ data: requestBody, userId: this.currentUser.id }).then((result: any) => {\r\n    //   if (result.success) {\r\n    //     this.getAllWarehouse();\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Success',\r\n    //       content: \"warehouse Archived Successfully!!!\"\r\n    //     });\r\n\r\n    //     this.showDeleteButton = false;\r\n    //     this.showUnarchiveButton = false\r\n    //     this.warehouseIdList = []; // Clear the selected party IDs after deletion\r\n    //     this.checkSelect = false // Reset the checkbox state in the header\r\n    //   }\r\n    // }, (err) => {\r\n    //   if (err.error.expose) {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: this.titleCasePipe.transform(err.error.error_message)\r\n    //     });\r\n    //   } else {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: \"Something Went Wrong.\"\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  showDeleteButtonFunc(): boolean {\r\n    return this.unarchivedPartyIds.length > 0;\r\n  }\r\n\r\n  unArchiveMultipleWarehouse() {\r\n    const requestBody = {\r\n      unArchiveWarehouses: this.warehouseIdList\r\n    };\r\n    // this.warehouseService.unArchiveMultiplewarehouses({data: requestBody, userId: this.currentUser.id}).then((result: any) => {\r\n    //   if (result.success) {\r\n    //     this.getAllWarehouse();\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Success',\r\n    //       content: \"warehouse Unarchived Successfully!!!\"\r\n    //     });\r\n    //     this.showDeleteButton = false;\r\n    //     this.showUnarchiveButton = false\r\n    //     this.warehouseIdList = []; // Clear the selected party IDs after unarchiving\r\n    //     this.checkSelect = false; // Reset the checkbox state in the header\r\n    //   }\r\n    // }, (err) => {\r\n    //   if (err.error.expose) {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: this.titleCasePipe.transform(err.error.error_message)\r\n    //     });\r\n    //   } else {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: \"Something Went Wrong.\"\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  searchWarehouse(searchKey: string) {\r\n    setTimeout(() => {\r\n      if (searchKey.trim() === '') {\r\n        this.getAllWarehouse();\r\n        this.isLoading = false; \r\n      } else {\r\n        this.isLoading = false; \r\n        this.getAllWarehouse(searchKey)\r\n        if(this.warehouseList.length === 0){\r\n          this.isLoading = false; \r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: searchKey + \" Is Not Found\",\r\n          });\r\n        }\r\n      }\r\n    this.isLoading = false; // Hide the loader after the API call is completed\r\n    }, 500);\r\n  }\r\n\r\n\r\n  onSearchInputChange(searchKey: string) {\r\n    console.log(searchKey);\r\n    // Emit the search key to the searchSubject\r\n    this.searchSubject.next(searchKey.trim());\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.excelFileUpload = e.target.files[0];\r\n    const pattern = /\\.(xlsx|xls)$/i; // Pattern to match \".xlsx\" or \".xls\" extension\r\n    if (!pattern.test(this.excelFileUpload.name)) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Invalid Format. Please Select An Excel File.\",\r\n      });\r\n      return;\r\n    }\r\n    if (this.excelFileUpload) {\r\n      let formdata = new FormData();\r\n      formdata.set(\"file\", this.excelFileUpload)\r\n      // this.truckOwnerService.postBulkowner(formdata, this.currentUser.id).then((res) => {\r\n      //   this.toastService.toastMsg({\r\n      //     title: \"Success\",\r\n      //     content: \"Excel Uploaded Successfully\",\r\n      //   });\r\n      //   this.getAllWarehouse();\r\n      // }, (err) => {\r\n      //   if (err.error.expose) {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: this.titleCasePipe.transform(err.error.error_message),\r\n      //     });\r\n      //   }\r\n      //   else if (err.error.status == \"409\" && err.error.expose == false) {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: \"List Of Consignments Already Exists\",\r\n      //     });\r\n      //   }\r\n      //   else {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: \"Something Went Wrong.\",\r\n      //     });\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n\r\n  startUpload() {\r\n    var uploadInput = document.getElementById('uploadFile');\r\n    if (uploadInput) {\r\n      var event = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: false,\r\n        cancelable: true\r\n      });\r\n      uploadInput.dispatchEvent(event);\r\n    } else {\r\n      this.toastService.toastMsg({\r\n        title: 'Error',\r\n        content: \"Upload element not found\"\r\n      });\r\n    }\r\n  }\r\n\r\n  public handlePage(e: any) {\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n\r\n    if (this.warehouseList.length > 0) {\r\n      if (this.searchKey !== '') {\r\n        this.partyPageSize = e.pageSize;\r\n        this.searchWarehouse(this.searchKey);\r\n      } else {\r\n        this.partyPageSize = e.pageSize;\r\n        this.getAllWarehouse();\r\n      }\r\n    }\r\n  }\r\n\r\n  addWarehouseModal(): void {\r\n    const dialogRef: MatDialogRef<AddWarehouseComponent> = this.dialog.open(AddWarehouseComponent, {\r\n      width: '700px',\r\n      height: \"100vh\",\r\n      data: {},\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  editWarehouseModal(warehouseId) {\r\n    const dialogRef: MatDialogRef<EditWarehouseComponent> = this.dialog.open(EditWarehouseComponent, {\r\n      width: '700px',\r\n      height: '100vh',\r\n      data: { warehouseId: warehouseId },\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  isActive(warehouseId, isActive) {\r\n    const newStatus = !isActive; // Toggle between '1' and '0'\r\n    this.warehouseService.changeStatus({ isActive: newStatus}, warehouseId)\r\n      .then((res) => {\r\n        if (res.success) {\r\n              if (newStatus) {\r\n                this.toastService.toastMsg({\r\n                  title: \"Success\",\r\n                  content: \"Status Has Changed To Active\",\r\n                });\r\n                this.getAllWarehouse()\r\n              } else {\r\n                this.toastService.toastMsg({\r\n                  title: \"Success\",\r\n                  content: \"Status Has Changed To Inactive\",\r\n                });\r\n                this.getAllWarehouse()\r\n              }\r\n            }\r\n      })\r\n      .catch((error) => {\r\n        this.toastService.toastMsg({\r\n          title: 'Error',\r\n          content: this.titleCasePipe.transform(error.error.error_message)\r\n        })\r\n      });\r\n  }\r\n\r\n  // Add a method to update the filter value\r\n  updateTypeFilter(filterValue: string | null) {\r\n    if(filterValue === 'ALL') {\r\n      this.selectedTypeFilter = null;\r\n    } else {\r\n      this.selectedTypeFilter = filterValue;\r\n    }\r\n  }\r\n\r\n  toggleFilter() {\r\n    this.isFilterVisible = !this.isFilterVisible;\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.isFilterVisible = false;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoading\" class=\"loader-container\">\r\n    <div class=\"loader\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"container-fluid bg-white p-0\">\r\n    <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n        <div class=\"flex-item searchBar\">\r\n            <input type=\"search\" id=\"searchInput\" class=\"search-form-control pe-5 my-2\" placeholder=\"Search...\"\r\n                (input)=\"onSearchInputChange($event.target.value)\" />\r\n        </div>\r\n        <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n            <button id=\"saleButtonPrint1\" class=\"btn text-nowrap my-2\" type=\"button\" (click)=\"addWarehouseModal()\">\r\n                <i class=\"fas fa-plus me-2\"> </i>Add Warehouse&nbsp;&nbsp;&nbsp;\r\n            </button>            \r\n            <!-- <button id=\"saleButtonPrint1\" class=\"btn text-nowrap my-2\" type=\"button\"\r\n                onclick=\"location.href = '';\">\r\n                <i class=\"fas fa-download\"></i>\r\n            </button> -->\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"table-container overflow-visible\">\r\n        <div class=\"table-div\" style=\"overflow-x: scroll\">\r\n            <table class=\"table table-responsive\">\r\n                <thead>\r\n                    <tr>\r\n                        <th class=\"text-nowrap\" style=\"\r\n                display: flex;\r\n                justify-content: flex-start;\r\n                align-items: center;\r\n              \">\r\n                            <input type=\"checkbox\" class=\"form-check-input\" (change)=\"onChekMultiple($event)\"\r\n                                [value]=\"-1\" [checked]=\"\r\n                  warehouseIdList.length === warehouseList.length\r\n                \" [(ngModel)]=\"allSelect\" />\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <span *ngIf=\"showDeleteButton\">\r\n                                    <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                                        data-bs-toggle=\"modal\" data-bs-target=\"#errorArchiveSelect-modal\"\r\n                                        style=\"padding-top: 15px\">\r\n                                        <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                            class=\"material-icons icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                            style=\"color: #fc7643\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                            title=\"Archive\" (click)=\"\r\n                        upiCheckedId.length > 0\r\n                          ? getUPIcheckId(upiCheckedId)\r\n                          : getSingleCheckedId(checkSingleArray)\r\n                      \">archive\r\n                                        </span>\r\n                                    </button>\r\n                                </span>\r\n                                <span *ngIf=\"showUnarchiveButton\">\r\n                                    <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                                        data-bs-toggle=\"modal\" data-bs-target=\"#errorUnarchiveSelect-modal\"\r\n                                        style=\"padding-top: 15px\">\r\n                                        <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                            class=\"material-icons icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                            style=\"color: #fc7643\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                            title=\"Unrchive\" (click)=\"\r\n                        upiCheckedId.length > 0\r\n                          ? getUPIcheckId(upiCheckedId)\r\n                          : getSingleCheckedId(checkSingleArray)\r\n                      \">unarchive\r\n                                        </span>\r\n                                    </button>\r\n                                </span>\r\n                            </div>\r\n                        </th>\r\n                        <th class=\"text-nowrap\">Name</th>\r\n                        <th class=\"text-nowrap\">Short Name</th>\r\n                        <th class=\"text-nowrap\">Email</th>\r\n                        <th class=\"text-nowrap\">Address</th>\r\n                        <th class=\"text-nowrap\"></th>\r\n                        <th class=\"text-nowrap\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor=\"let item of warehouseList; let i = index\">\r\n                        <tr style=\"color: #676398 !important\"\r\n                            [ngStyle]=\"{ 'background-color': item.isDeleted ? '#c7c2de' : i % 2 === 0 ? '#ffffff' : '#f2f2f2' }\"\r\n                            *ngIf=\"selectedTypeFilter === null || item.type === selectedTypeFilter\">\r\n                            <td class=\"text-nowrap\" style=\"vertical-align: middle\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" [ngClass]=\"{\r\n                    'custom-checkbox': !item.isDeleted,\r\n                    'custom-checkbox deleted': item.isDeleted\r\n                    }\" [checked]=\"warehouseIdList.includes(item.id)\" (change)=\"onChekedsingleCheck($event, item.id)\"\r\n                                    [value]=\"item.id\" />\r\n                            </td>\r\n                            <td class=\"long-name\" style=\"vertical-align: middle\">\r\n                                {{ item?.firstName }}\r\n                            </td>\r\n                            <td class=\"long-name\" style=\"vertical-align: middle;\">\r\n                                {{ item?.lastName }}\r\n                            </td>\r\n                            <td class=\"long-name\" style=\"vertical-align: middle;\">\r\n                                {{ item?.email }}\r\n                            </td>\r\n                            <td class=\"long-address\" style=\"vertical-align: middle;\">\r\n                                {{ item?.address }}\r\n                            </td>\r\n                            <td class=\"text-nowrap varticalAlign\">\r\n                                <div class=\"\">\r\n                                    <button class=\"toggle-button\" (click)=\"isActive(item.id, item.isActive)\"\r\n                                        [ngClass]=\"{'active': item.isActive, 'inactive': !item.isActive}\" [disabled]=\"item.isDefault\">\r\n                                        <div class=\"toggle-slider\"></div>\r\n                                    </button>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"text-nowrap\" style=\"text-align: center; vertical-align: middle\">\r\n                                <div>\r\n                                    <!-- <button class=\"btn\">\r\n                                        <span class=\"bi bi-eye icon-color iconFontSize ps-2\" (click)=\"viewConsignmentModal(item.id)\" data-bs-toggle=\"tooltip\"\r\n                                        data-bs-placement=\"top\" title=\"View\"></span>\r\n                                    </button> -->\r\n\r\n                                    <!-- <button class=\"btn\">\r\n                                        <span class=\"bi-pencil-square icon-color iconFontSize ps-2\"\r\n                                            (click)=\"editWarehouseModal(item.id)\" data-bs-toggle=\"tooltip\"\r\n                                            data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                                    </button> -->\r\n\r\n                                    <button class=\"btn mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                                        <span class=\"material-icons icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                            style=\"color: #fc7643\" (click)=\"archhiveWarehouse(item.id, item.isDeleted)\"\r\n                                            data-bs-placement=\"top\" [title]=\"item.isDeleted ? 'Unarchive' : 'Archive'\">{{\r\n                                            item.isDeleted ? \"unarchive\" : \"archive\" }}</span>\r\n                                    </button>\r\n                                </div>\r\n                            </td>\r\n                            <!-- <td class=\"text-nowrap\" style=\"text-align: center; vertical-align: middle\"></td> -->\r\n\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n                <tbody *ngIf=\"warehouseList.length === 0\">\r\n                    <tr class=\"text-center\">\r\n                        <td colspan=\"10\">\r\n                            <img class=\"image-responsive\"\r\n                                src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\" alt=\"notfound1\"\r\n                                width=\"200\" height=\"150\" />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <!-- <mat-paginator sticky class=\"float-right mt-2\" *ngIf=\"warehouseList.length > 0\"\r\n                [pageSize]=\"partyPageSize\" [pageSizeOptions]=\"[5, 10, 20, 30]\" [length]=\"totalrow\"\r\n                [pageIndex]=\"currentPageNo\" showFirstLastButtons (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n            </mat-paginator> -->\r\n        </div>\r\n\r\n        <!-- Ṃultiple Unarchive -->\r\n        <div class=\"modal fade\" id=\"errorUnarchiveSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n                <div class=\"modal-content position-relative\">\r\n                    <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                        <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\"\r\n                            data-bs-dismiss=\"modal\" aria-label=\"Close\"></a>\r\n                    </div>\r\n                    <div class=\"modal-body p-0\">\r\n                        <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                            <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800\"\r\n                                id=\"modalExampleDemoLabel\">\r\n                                <i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> Unarchive\r\n                                Warehouse?\r\n                            </h2>\r\n                        </div>\r\n                        <h4 *ngIf=\"isChecked\" class=\"text-center\">\r\n                            Are you sure to unarchive all Warehouse?\r\n                        </h4>\r\n                        <h4 *ngIf=\"!isChecked\" class=\"text-center\">\r\n                            Are you sure to unarchive all selected Warehouse?\r\n                        </h4>\r\n                    </div>\r\n                    <div class=\"modal-footer justify-content-center\">\r\n                        <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                        <a *ngIf=\"isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                            (click)=\"unArchiveMultipleWarehouse()\">Unarchive</a>\r\n                        <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                            (click)=\"unArchiveMultipleWarehouse()\">Unarchive</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Ṃultiple Archive -->\r\n        <div class=\"modal fade\" id=\"errorArchiveSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n                <div class=\"modal-content position-relative\">\r\n                    <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                        <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\"\r\n                            data-bs-dismiss=\"modal\" aria-label=\"Close\"></a>\r\n                    </div>\r\n                    <div class=\"modal-body p-0\">\r\n                        <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                            <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800\"\r\n                                id=\"modalExampleDemoLabel\">\r\n                                <i class=\"fa fa-lock-alt\" aria-hidden=\"true\"></i> Archive\r\n                                Warehouse?\r\n                            </h2>\r\n                        </div>\r\n                        <h4 *ngIf=\"isChecked\" class=\"text-center\">\r\n                            Are you sure to archive all Warehouse?\r\n                        </h4>\r\n                        <h4 *ngIf=\"!isChecked\" class=\"text-center\">\r\n                            Are you sure to archive all selected Warehouse?\r\n                        </h4>\r\n                    </div>\r\n                    <div class=\"modal-footer justify-content-center\">\r\n                        <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                        <a *ngIf=\"isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                            (click)=\"archiveMultipleWarehouse()\">Archive</a>\r\n                        <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                            (click)=\"archiveMultipleWarehouse()\">Archive</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Signle archive  -->\r\n        <div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n                <div class=\"modal-content position-relative\">\r\n                    <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                        <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\"\r\n                            data-bs-dismiss=\"modal\" aria-label=\"Close\"></a>\r\n                    </div>\r\n                    <div class=\"modal-body p-0\">\r\n                        <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                            <h2 *ngIf=\"!isdeletedParty\" class=\"mb-1 text-center font-weight-bold\"\r\n                                style=\"font-weight: 800\" id=\"modalExampleDemoLabel\">\r\n                                Archive Warehouse?\r\n                            </h2>\r\n                            <h2 *ngIf=\"isdeletedParty\" class=\"mb-1 text-center font-weight-bold\"\r\n                                style=\"font-weight: 800\" id=\"modalExampleDemoLabel\">\r\n                                Unarchive Warehouse?\r\n                            </h2>\r\n                        </div>\r\n                        <h4 class=\"text-center\" *ngIf=\"!isdeletedParty\">\r\n                            Are You Sure To Archive Warehouse?\r\n                        </h4>\r\n                        <h4 class=\"text-center\" *ngIf=\"isdeletedParty\">\r\n                            Are You Sure To Unarchive Warehouse?\r\n                        </h4>\r\n                    </div>\r\n                    <div class=\"modal-footer justify-content-center\">\r\n                        <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                        <a class=\"btn btn-outline-danger\" *ngIf=\"!isdeletedParty\" (click)=\"archiveSignleWarehouse()\"\r\n                            data-bs-dismiss=\"modal\">Archive\r\n                        </a>\r\n                        <a *ngIf=\"isdeletedParty\" class=\"btn btn-outline-warning\" (click)=\"archiveSignleWarehouse()\"\r\n                            data-bs-dismiss=\"modal\">Unarchive\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { WarehouseComponent } from './warehouse.component';\r\nimport { WarehouseListComponent } from './components/warehouse-components/warehouse-list/warehouse-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: WarehouseComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'warehouse-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'warehouse-list',\r\n        component: WarehouseListComponent,\r\n      }, \r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WarehouseRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-warehouse',\r\n  templateUrl: './warehouse.component.html',\r\n  styleUrls: ['./warehouse.component.scss']\r\n})\r\nexport class WarehouseComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"component-container container-fluid bg-white p-4\">\r\n    <div id=\"navPanel\" class=\"row\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row page-nav-link mt-3\">\r\n          <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./warehouse-list\" routerLinkActive=\"active\">Warehouse</a>\r\n          </div>\r\n          <!-- <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./analysis-list\" routerLinkActive=\"active\">Analysis</a>\r\n          </div> -->\r\n          <div class=\"col-lg-6 \"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"mt-1\">\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WarehouseRoutingModule } from './warehouse-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { WarehouseComponent } from './warehouse.component';\r\nimport { AddWarehouseComponent } from './components/warehouse-components/add-warehouse/add-warehouse.component';\r\nimport { WarehouseListComponent } from './components/warehouse-components/warehouse-list/warehouse-list.component';\r\nimport { EditWarehouseComponent } from './components/warehouse-components/edit-warehouse/edit-warehouse.component';\r\nimport { WarehouseLayoutComponent } from './components/warehouse-layout/warehouse-layout.component';\r\nimport { WarehouseDashboardComponent } from './components/warehouse-dashboard/warehouse-dashboard.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WarehouseComponent,\r\n    AddWarehouseComponent,\r\n    WarehouseListComponent,\r\n    EditWarehouseComponent,\r\n    WarehouseLayoutComponent,\r\n    WarehouseDashboardComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    WarehouseRoutingModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,    \r\n    FormsModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class WarehouseModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}