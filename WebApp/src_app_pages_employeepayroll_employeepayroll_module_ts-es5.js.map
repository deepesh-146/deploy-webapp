{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_3__","AddbankemployeeComponent","formBuilder","router","toastService","bankService","http","titleCasePipe","dialog","dialogRef","JSON","parse","localStorage","getItem","bankForm","group","IFSC","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","AccountHolderName","BankName","AccountNumber","ConfirmAccountNumber","Branch","validator","submitted","close","controls","event","charCode","which","keyCode","ifscCode","console","log","body","value","getBankDetailsByIFSC","currentUser","id","then","res","patchValue","data","bankName","transform","branchCode","toastMsg","title","content","err","error","error_message","selectors","decls","vars","consts","template","ctx","BankAccountComponent","open","_addbankemployee_addbankemployee_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","disableClose","position","right","afterClosed","subscribe","result","_angular_core__WEBPACK_IMPORTED_MODULE_1__","routes","path","component","_main_payroll_main_payroll_component__WEBPACK_IMPORTED_MODULE_3__","children","redirectTo","pathMatch","_pay_slip_pay_slip_component__WEBPACK_IMPORTED_MODULE_0__","_salary_structure_salary_structure_component__WEBPACK_IMPORTED_MODULE_1__","_bank_account_bank_account_component__WEBPACK_IMPORTED_MODULE_2__","routerLinkActiveOptions","exact","EmployeepayrollRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","EmployeepayrollModule","_angular_common__WEBPACK_IMPORTED_MODULE_8__","_employeepayroll_routing_module__WEBPACK_IMPORTED_MODULE_0__","src_app_material_module__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_10__","declarations","_pay_slip_pay_slip_component__WEBPACK_IMPORTED_MODULE_1__","_salary_structure_salary_structure_component__WEBPACK_IMPORTED_MODULE_2__","_bank_account_bank_account_component__WEBPACK_IMPORTED_MODULE_3__","_main_payroll_main_payroll_component__WEBPACK_IMPORTED_MODULE_4__","_bank_account_addbankemployee_addbankemployee_component__WEBPACK_IMPORTED_MODULE_6__","MainPayrollComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","PaySlipComponent","cdr","createpayslipForm","addpayslipForm","year","month","SalaryStructureComponent"],"sources":["webpack:///src/app/pages/employeepayroll/bank-account/addbankemployee/addbankemployee.component.html","webpack:///src/app/pages/employeepayroll/bank-account/addbankemployee/addbankemployee.component.ts","webpack:///src/app/pages/employeepayroll/bank-account/bank-account.component.ts","webpack:///src/app/pages/employeepayroll/bank-account/bank-account.component.html","webpack:///src/app/pages/employeepayroll/employeepayroll-routing.module.ts","webpack:///src/app/pages/employeepayroll/employeepayroll.module.ts","webpack:///src/app/pages/employeepayroll/main-payroll/main-payroll.component.ts","webpack:///src/app/pages/employeepayroll/main-payroll/main-payroll.component.html","webpack:///src/app/pages/employeepayroll/pay-slip/pay-slip.component.ts","webpack:///src/app/pages/employeepayroll/pay-slip/pay-slip.component.html","webpack:///src/app/pages/employeepayroll/salary-structure/salary-structure.component.ts","webpack:///src/app/pages/employeepayroll/salary-structure/salary-structure.component.html"],"sourcesContent":["<div class=\"modal-header pt-0\">\r\n\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Bank</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"BankDatasave()\">Save</button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"bankForm\">\r\n            <div class=\"row mb-3 mt-2\">\r\n\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n                    <label class=\"form-label\">Account Holder Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-uppercase\" placeholder=\"Account Holder Name\" autocomplete=\"off\"\r\n                            formControlName=\"AccountHolderName\" />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n                    <label class=\"form-label\">IFSC<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-uppercase\" placeholder=\"IFSC\" formControlName=\"IFSC\"\r\n                            (change)=\"getIFSCCode($event.target.value)\" [ngClass]=\"{\r\n                  'is-invalid':\r\n                    f.IFSC.invalid && f.IFSC.touched && submitted\r\n                }\" autocomplete=\"new-password\" value=\"\" />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.IFSC.touched\">\r\n                        <mat-error *ngIf=\"f.IFSC.errors?.required\">\r\n                            IFSC Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.IFSC.errors?.pattern\">\r\n                            IFSC required only alphanumeric format!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mb-3\">\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n                    <label class=\"form-label\">Account Number<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input (keypress)=\"numberOnly($event)\" matInput [type]=\"hide ? 'password' : 'text'\"\r\n                            placeholder=\"Account Number\" formControlName=\"AccountNumber\" minlength=\"9\"\r\n                            autocomplete=\"new-password\" maxlength=\"19\"\r\n                            [ngClass]=\"{'is-invalid': f.AccountNumber.invalid && f.AccountNumber.touched && submitted }\"\r\n                            value=\"\" autocomplete=\"off\" />\r\n                        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? \"visibility_off\" : \"visibility\" }}\r\n                        </mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.AccountNumber.touched\">\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.required\">\r\n                            Account Number Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.pattern\">\r\n                            Account Number Required Numeric\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.minLength\">\r\n                            Account Number Required Min Length 9 !\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.maxLength\">\r\n                            Account Number Required Max Length 19!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n                    <label class=\"form-label\"> Re-Enter Account Number<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" placeholder=\"Re Enter Account Number\"\r\n                            formControlName=\"ConfirmAccountNumber\" minlength=\"9\" maxlength=\"19\"\r\n                            autocomplete=\"new-password\"\r\n                            [ngClass]=\"{ 'is-invalid': f.ConfirmAccountNumber.invalid && f.ConfirmAccountNumber.touched && submitted }\"\r\n                            value=\"\" />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.ConfirmAccountNumber.touched\">\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.required\">\r\n                            Confirm Account Number Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.pattern\">\r\n                            Confirm Account Number Required Numeric\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.minLength\">\r\n                            Confirm Account Number Required Min Length 9 !\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.maxLength\">\r\n                            Confirm Account Number Required Max Length 19!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mb-3\">\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n                    <label class=\"form-label\">Bank Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input type=\"text\" placeholder=\"Bank Name\" formControlName=\"BankName\"\r\n                            aria-label=\"Select Party Name\" matInput [matAutocomplete]=\"auto\" autocomplete=\"new-password\"\r\n                            [ngClass]=\"{'is-invalid': f.BankName.invalid && f.BankName.touched && submitted}\"\r\n                            readonly />\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.bankName\">\r\n                                {{ option.bankName }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.BankName.touched\">\r\n                        <mat-error *ngIf=\"f.BankName.errors?.required\">\r\n                            BankName Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n                    <label class=\"form-label\"> Branch Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-capitalize\" type=\"text\" placeholder=\"Branch\"\r\n                            formControlName=\"Branch\"\r\n                            [ngClass]=\"{'is-invalid': f.Branch.invalid && f.Branch.touched && submitted}\" value=\"\"\r\n                            readonly />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.Branch.touched\">\r\n                        <mat-error *ngIf=\"f.Branch.errors?.required\">\r\n                            Branch Name Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ConfirmedValidators } from 'src/app/_helpers/confirmed.validators';\r\nimport { Observable } from 'rxjs';\r\nimport { BankServiceService } from 'src/app/core/services/bank-service.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-addbankemployee',\r\n  templateUrl: './addbankemployee.component.html',\r\n  styleUrls: ['./addbankemployee.component.scss']\r\n})\r\nexport class AddbankemployeeComponent implements OnInit {\r\n  submitted: boolean;\r\n  isEdit: boolean;\r\n  public bankForm: FormGroup;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public hide: boolean = true;\r\n  public filteredOptions: Observable<string[]>;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private toastService: ToastNotificationService,\r\n    private bankService: BankServiceService,\r\n    private http: HttpClient,\r\n\r\n    private titleCasePipe: TitleCasePipe, private dialog: MatDialog , public dialogRef: MatDialogRef<AddbankemployeeComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bankForm = this.formBuilder.group({\r\n      IFSC: [\"\", [Validators.required, Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      AccountHolderName: [\"\", [Validators.required]],\r\n      BankName: [\"\", [Validators.required]],\r\n      AccountNumber: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(9), Validators.maxLength(19)]],\r\n      ConfirmAccountNumber: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(9), Validators.maxLength(19)]],\r\n      Branch: [\"\", [Validators.required]],\r\n    },\r\n      {\r\n        validator: ConfirmedValidators('AccountNumber', 'ConfirmAccountNumber')\r\n      });\r\n  }\r\n\r\n\r\n  BankDatasave() {\r\n    // this.submitted = true;\r\n    // this.isEdit = false;\r\n    // if (this.bankForm.invalid) {\r\n    //   this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n    //   return false;\r\n    // }\r\n    // else {\r\n    //   let body = {\r\n    //     \"bankDetails\": {\r\n    //       \"bankName\": this.bankForm.controls.BankName.value,\r\n    //       \"branchCode\": this.bankForm.controls.Branch.value,\r\n    //       \"accountNumber\": this.bankForm.controls.AccountNumber.value,\r\n    //       \"ifscCode\": this.bankForm.controls.IFSC.value.toUpperCase(),\r\n    //       \"accountHolderName\":this.bankForm.controls.AccountHolderName.value\r\n\r\n    //     }\r\n    //   }\r\n    //   if (this.bankForm.valid) {\r\n    //     this.bankService.postBankDetails(body, this.currentUser.id).then((res) => {\r\n    //       if (res) {\r\n    //         this.toastService.openSnackBar(\"Bank Record Added Successfully!!!\");\r\n    //         this.router.navigate([\"/pages/Bank-page\"]);\r\n    //         this.bankService.notifyPartyAdded();\r\n    //         this.dialogRef.close();\r\n    //       }\r\n    //     }, (err) => {\r\n    //       this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message))\r\n    //     });\r\n    //   }\r\n    // }\r\n  }\r\n  cancel() {\r\n     //this.bankForm.reset();\r\n     this.submitted = false;\r\n      this.dialogRef.close();\r\n    }\r\n    get f() {\r\n      return this.bankForm.controls;\r\n    }\r\n    numberOnly(event): boolean {\r\n      const charCode = (event.which) ? event.which : event.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n  getIFSCCode(ifscCode) {\r\n    console.log(\"ifscCode\",ifscCode)\r\n    if (ifscCode) {\r\n      let body =\r\n      {\r\n        \"bankDetails\": {\r\n          \"ifscCode\": this.bankForm.controls.IFSC.value\r\n        }\r\n      }\r\n      this.bankService.getBankDetailsByIFSC(body, this.currentUser.id).then((res) => {\r\n        this.bankForm.patchValue({\r\n            'BankName': res.data.bankName,\r\n            'Branch': this.titleCasePipe.transform(res.data.branchCode)\r\n            })\r\n            this.toastService.toastMsg({\r\n              title: \"Success\",\r\n              content: \"IFSC Code Validated Successfully!!!\",\r\n            });\r\n        // this.toastService.openSnackBar(\"IFSC Code Validated Successfully!!!\");\r\n      }, (err) => {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message))\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AddbankemployeeComponent } from './addbankemployee/addbankemployee.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-bank-account',\r\n  templateUrl: './bank-account.component.html',\r\n  styleUrls: ['./bank-account.component.scss']\r\n})\r\nexport class BankAccountComponent implements OnInit {\r\n\r\n  public bankDetails = {\r\n    \"accountholdername\": \"ashleah\",\r\n    \"accountnumber\":\"12345678910\",\r\n    \"bankname\":\"Bank of India\",\r\n    \"city\": \"Nagpur\",\r\n    \"ifsccode\": \"IFSC1234\",\r\n  }\r\n  public addressDetails = {\r\n    \"address\": \"pune\",\r\n    \"country\": \"India\",\r\n    \"State\": \"Maharashtra\",\r\n    \"city\": \"Pune\",\r\n    \"pincode\": \"411036\"\r\n  }\r\n  constructor(public dialog: MatDialog,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openADDBANK() {\r\n    const dialogRef: MatDialogRef<AddbankemployeeComponent> = this.dialog.open(AddbankemployeeComponent, {\r\n      width: '700px',\r\n      height: 'auto',\r\n      data: {  },\r\n      panelClass: 'custom-dialog-account-class',\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-body\">\r\n    <div class=\"row\">\r\n        <div class=\"mb-3 col-lg-1 col-md-1 col-xl-1 col-sm-12\">\r\n        </div>\r\n        <div class=\"mt-3 col-lg-8  col-md-8 col-xl-8 col-sm-12 \">\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white mb-3\">\r\n                    <div class=\"card-header\"\r\n                        style=\"justify-content: center; align-items: center; vertical-align: center;\">\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">ACCOUNT</div>\r\n                        <hr>\r\n                    </div>\r\n\r\n                    <div class=\"card-body\">\r\n                        <button class=\"delete-button p-3\" (click)=\"openADDBANK()\">\r\n                            <i class=\"fas fa-plus \" style=\"color:rgba(252, 118, 67, 1)\"></i>\r\n                        </button> <label class=\"text-black\" style=\"margin-left: 10px;\">ADD</label>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"mb-3 col-lg-3 col-md-3 col-xl-3 col-sm-12\">\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n        <div class=\"mb-3 col-lg-1 col-md-1 col-xl-1 col-sm-12\">\r\n        </div>\r\n        <div class=\"mt-3 col-lg-8  col-md-8 col-xl-8 col-sm-12 \">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white\">\r\n                    <div class=\"card-header\"\r\n                        style=\"justify-content: center; align-items: center; vertical-align: middle;\">\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Bank Details</div>\r\n                        <hr>\r\n                    </div>\r\n\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row mb-3\">\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"pHeading\">Account holder Name</p>\r\n                                <p>{{bankDetails.accountholdername}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"pHeading\">Account Number</p>\r\n                                <p>{{bankDetails.accountnumber}}</p>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"pHeading\">Bank Name</p>\r\n                                <p>{{bankDetails.bankname}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"pHeading\">City</p>\r\n                                <p>{{bankDetails.city}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"pHeading\">IFSC Code</p>\r\n                                <p>{{bankDetails.ifsccode}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\"></div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <div class=\"mb-3 col-lg-3 col-md-3 col-xl-3 col-sm-12\">\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PaySlipComponent } from './pay-slip/pay-slip.component';\r\nimport { SalaryStructureComponent } from './salary-structure/salary-structure.component';\r\nimport { BankAccountComponent } from './bank-account/bank-account.component';\r\nimport { MainPayrollComponent } from './main-payroll/main-payroll.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:MainPayrollComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'emp-payslip',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'emp-payslip',\r\n        component:PaySlipComponent,\r\n      },\r\n      {\r\n        path:'emp-salary',\r\n        component:SalaryStructureComponent,\r\n      },\r\n      {\r\n        path:'emp-account',\r\n        component:BankAccountComponent,\r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n]\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeepayrollRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EmployeepayrollRoutingModule } from './employeepayroll-routing.module';\r\nimport { PaySlipComponent } from './pay-slip/pay-slip.component';\r\nimport { SalaryStructureComponent } from './salary-structure/salary-structure.component';\r\nimport { BankAccountComponent } from './bank-account/bank-account.component';\r\nimport { MainPayrollComponent } from './main-payroll/main-payroll.component';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { AddbankemployeeComponent } from './bank-account/addbankemployee/addbankemployee.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PaySlipComponent,\r\n    SalaryStructureComponent,\r\n    BankAccountComponent,\r\n    MainPayrollComponent,\r\n    AddbankemployeeComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EmployeepayrollRoutingModule,\r\n    MaterialExampleModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class EmployeepayrollModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-payroll',\r\n  templateUrl: './main-payroll.component.html',\r\n  styleUrls: ['./main-payroll.component.scss']\r\n})\r\nexport class MainPayrollComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-4\">\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"row mt-3 page-nav-link\">\r\n             <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\" id=\"productlistLink\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-payslip\" routerLinkActive='active'>Pay Slip</a>\r\n              </div>\r\n              <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-salary\" routerLinkActive='active'>Salary Structure</a>\r\n              </div>\r\n             <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-account\" routerLinkActive='active'>Bank Account</a>\r\n              </div>\r\n              <div class=\"col-xxl-9 col-xl-9 col-lg-9 col-md-3 col-sm-0 col-xs-0\"></div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <hr  class = \"mt-1\" />\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n  ","import { TitleCasePipe } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-pay-slip',\r\n  templateUrl: './pay-slip.component.html',\r\n  styleUrls: ['./pay-slip.component.scss']\r\n})\r\nexport class PaySlipComponent implements OnInit {\r\n\r\n  public addpayslipForm: any;\r\n\r\n  constructor(private cdr: ChangeDetectorRef,private formBuilder: FormBuilder,private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.createpayslipForm();\r\n  }\r\n\r\n  createpayslipForm(){\r\n    this.addpayslipForm = this.formBuilder.group({\r\n      year : [\"\"],\r\n      month: [\"\"],   \r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"modal-body\">\r\n    <div class=\"row mt-3\">\r\n        <div class=\"mb-3 col-lg-1 col-md-1 col-xl-1 col-sm-12\">\r\n           \r\n        </div>\r\n        <div class=\"mt-3 col-lg-8  col-md-8 col-xl-8 col-sm-12 \">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white\">\r\n                    <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: middle;\" >\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">PAY SLIP</div>\r\n                        <hr>\r\n                    </div>\r\n                    \r\n                    <div class=\"card-body\">\r\n                        <form [formGroup]=\"addpayslipForm\">\r\n                            <div class=\"row\">\r\n                                <div  class=\"col-lg-4 col-md-4 col-xl-4 col-sm-4\">\r\n                                    <label class=\"form-label\">Year</label>\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Year\"\r\n                                            formControlName=\"year\">\r\n                                            <mat-option>1</mat-option>\r\n                                            <mat-option>2</mat-option>\r\n                                            <mat-option>3</mat-option>\r\n                                            <mat-option>4</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                \r\n                                </div>\r\n\r\n                                <div  class=\"col-lg-4 col-md-4 col-xl-4 col-sm-4\">\r\n                                    <label class=\"form-label\">Month</label>\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Type\"\r\n                                            formControlName=\"month\">\r\n                                            <mat-option>1</mat-option>\r\n                                            <mat-option>2</mat-option>\r\n                                            <mat-option>3</mat-option>\r\n                                            <mat-option>4</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                \r\n                                </div>\r\n\r\n                                <div class=\"col-lg-4 col-md-4 col-xl-4 col-sm-4\">\r\n                                 </div>   \r\n                            </div>\r\n\r\n                            <div class=\"row mt-3 flex d-flex flex-row\" style=\"justify-content:flex-end; align-items:end;\">\r\n                                <button type=\"button\" class=\"btn btn-save\" style=\"width:100px;\">Download</button>\r\n                            </div>\r\n                         </form>   \r\n                        \r\n                       \r\n                    </div>\r\n                </div>\r\n            \r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <div class=\"mb-3 col-lg-3 col-md-3 col-xl-3 col-sm-12\">\r\n           \r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-salary-structure',\r\n  templateUrl: './salary-structure.component.html',\r\n  styleUrls: ['./salary-structure.component.scss']\r\n})\r\nexport class SalaryStructureComponent implements OnInit {\r\n  public salary1={\r\n    \"Components\":\"CTC\",\r\n    \"Monthly\":66667,\r\n    \"Annual\":800000\r\n  }\r\n  public salary2=[\r\n    {\r\n      \"Components\":\"Basic\",\r\n      \"Monthly\":33333,\r\n      \"Annual\":400000\r\n  },\r\n  {\r\n    \"Components\":\"HRA\",\r\n    \"Monthly\":16666,\r\n    \"Annual\":200000\r\n},\r\n{\r\n  \"Components\":\"Special Allowance\",\r\n  \"Monthly\":17335,\r\n  \"Annual\":160000\r\n},\r\n{\r\n  \"Components\":\"Total\",\r\n  \"Monthly\":66667,\r\n  \"Annual\":800000,\r\n},\r\n{\r\n  \"Components\":\"Provident Fund (PF) Deduction\",\r\n  \"Monthly\":-3600,\r\n  \"Annual\":-43200,\r\n},\r\n{\r\n  \"Components\":\"Professional Tax\",\r\n  \"Monthly\":-200,\r\n  \"Annual\":-2400,\r\n},\r\n{\r\n  \"Components\":\"Total\",\r\n  \"Monthly\":62867,\r\n  \"Annual\":754400,\r\n},\r\n\r\n]\r\n\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n    <div class=\"card bg-white mb-3\">\r\n        <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: center;\">\r\n            <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Salary structure</div>\r\n            <hr>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <table class=\"table table-responsive table-bordered fs--1 mb-0 m-3\">\r\n                <thead class=\"text-600\" style=\"background-color: rgba(248, 248, 248, 1);\">\r\n                    <tr>\r\n                        <th class=\"col-5\">Components</th>\r\n                        <th class=\"text-center\">Monthly</th>\r\n                        <th class=\"text-center\">Annual</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td >{{salary1.Components}}</td>\r\n                            <td class=\"text-center\">{{salary1.Monthly}}</td>\r\n                            <td class=\"text-center\">{{salary1.Annual}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table class=\"table table-responsive table-bordered fs--1 mb-0 m-3\">\r\n                    <thead class=\"text-600\" style=\"background-color: rgba(248, 248, 248, 1);\">\r\n                        <tr>\r\n                            <th class=\"col-5\">Components</th>\r\n                            <th class=\"text-center\">Monthly</th>\r\n                            <th class=\"text-center\">Annual</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td >Basic</td>\r\n                                <td class=\"text-center\">33333</td>\r\n                                <td class=\"text-center\">400000</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td >HRA</td>\r\n                                <td class=\"text-center\">16666</td>\r\n                                <td class=\"text-center\">200000</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Special Allowance</td>\r\n                                <td class=\"text-center\">17335</td>\r\n                                <td class=\"text-center\">160000</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Adjustment Amount</td>\r\n                                <td class=\"text-center\">500</td>\r\n                                <td class=\"text-center\"> </td>\r\n                            </tr>\r\n                            <tr style=\"background-color: rgba(248, 248, 248, 1);\">\r\n                                <td class=\"fw-bold\">Total</td>\r\n                                <td class=\"fw-bold\"class=\"text-center\">66667</td>\r\n                                <td class=\"fw-bold\" class=\"text-center\">800000</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Provident Fund (PF) Deduction</td>\r\n                                <td class=\"text-center\">-3600</td>\r\n                                <td class=\"text-center\">43200</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Professional Tax</td>\r\n                                <td class=\"text-center\">-200</td>\r\n                                <td class=\"text-center\">-2400</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Adjustment Amount</td>\r\n                                <td class=\"text-center\">500</td>\r\n                                <td class=\"text-center\"></td>\r\n                            </tr>\r\n                            <tr style=\"background-color: rgba(248, 248, 248, 1);\">\r\n                                <td class=\"fw-bold\">Total</td>\r\n                                <td class=\"fw-bold\" class=\"text-center\">62867</td>\r\n                                <td class=\"fw-bold\"class=\"text-center\"> 754400</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n"]}