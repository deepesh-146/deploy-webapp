{"version":3,"file":"src_app_pages_warehouse_components_packages_packages_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/warehouse/components/packages/components/add-package/add-package.component.ts","./src/app/pages/warehouse/components/packages/components/add-package/add-package.component.html","./src/app/pages/warehouse/components/packages/components/package-list/package-list.component.ts","./src/app/pages/warehouse/components/packages/components/package-list/package-list.component.html","./src/app/pages/warehouse/components/packages/packages-routing.module.ts","./src/app/pages/warehouse/components/packages/packages.component.ts","./src/app/pages/warehouse/components/packages/packages.component.html","./src/app/pages/warehouse/components/packages/packages.module.ts"],"sourcesContent":["import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounceTime, filter, map, startWith, switchMap } from 'rxjs/operators';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { PartyService } from 'src/app/core/services/party.service';\r\nimport { SaleInvoiceService } from 'src/app/core/services/sale-invoice.service';\r\nimport { SaleOrderService } from 'src/app/core/services/sale-order.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { WarehouseService } from 'src/app/core/services/warehouse.service';\r\nimport lang from 'src/assets/langTranslation/language_translation';\r\nimport { from } from 'rxjs';\r\nimport { ContactlistModuleRoutingModule } from 'src/app/pages/contactlist-module/contactlist-module-routing.module';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-add-package',\r\n  templateUrl: './add-package.component.html',\r\n  styleUrls: ['./add-package.component.scss']\r\n})\r\nexport class AddPackageComponent implements OnInit {\r\n\r\n  public lang = lang.UAE;\r\n  public maxDate: Date;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public packageForm: any;\r\n  public submitted: boolean = false;\r\n  public today: Date;\r\n  countryList: any[];\r\n  invoiceId: any;\r\n  sales_products: any[];\r\n  selectedProducts: any;\r\n  partyId: any;\r\n  invoiceNo: any;\r\n  lastInvoiceNumber: any;\r\n  isPacked: any;\r\n  customerNames: Observable<any[]>;\r\n  saleOrderOptions: Observable<any[]> = of([]);\r\n  filteredCustomerNames: Observable<any[]>;  \r\n  public allPartyList: any = [];\r\n  searchedProduct: any;\r\n  selectAll: boolean = false;\r\n  isSaleInvocie: boolean = false;\r\n  packageData: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router, private commonService: CommonService,\r\n    private toastService: ToastNotificationService, public dialog: MatDialog,\r\n    private titleCasePipe: TitleCasePipe,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddPackageComponent>,\r\n    private warehouseService: WarehouseService,\r\n    private saleOrderService: SaleOrderService,\r\n    private partyService: PartyService,\r\n    private saleInvoiceService: SaleInvoiceService\r\n  ) {\r\n    this.today = new Date();\r\n    this.packageData = this.data.packageData\r\n    this.invoiceId = this.data.invoiceId;\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    try {\r\n      this.packageForm = this.formBuilder.group({\r\n        name: [null],\r\n        saleInvoice: [null],\r\n        customerName: [{value: null, disabled: true}],\r\n        billingAddress: [{value: null, disabled: true}],\r\n        shippingAddress: [{value: null, disabled: true}],\r\n        ewayBillNo: [{value: null, disabled: true}],\r\n        mobile: [{value: null, disabled: true}],\r\n        invoiceNo: [{value: null, disabled: true}],\r\n        invoiceDate: [{value: null, disabled: true}],\r\n        totalBillAmount: [{value: null, disabled: true}],\r\n        billGstAmount: [null],\r\n        warehouseName: [{value: null, disabled: true}],\r\n        subcheckbox: this.formBuilder.array([]),\r\n      });\r\n\r\n\r\n      if(this.packageData) {\r\n        this.isPacked = true;\r\n        this.packageForm.patchValue({\r\n          name: this.packageData?.customerName,\r\n          saleInvoice: this.packageData?.invoiceNo\r\n        })\r\n\r\n        await this.getReceiptById(this.invoiceId)\r\n      }\r\n\r\n      this.customerNames = await this.packageForm.controls.name.valueChanges.pipe(\r\n        startWith(''),\r\n        debounceTime(300),\r\n        switchMap(name => this.getContactName(name))\r\n      );\r\n      \r\n      this.saleOrderOptions = this.packageForm.controls.saleInvoice.valueChanges.pipe(\r\n        startWith(''),\r\n        debounceTime(300),\r\n        switchMap(saleInvoice => {\r\n          const selectedCustomerName = this.packageForm.value.name;\r\n          if (selectedCustomerName) {\r\n            return this.getSaleOrderOptions(saleInvoice, selectedCustomerName);\r\n          } else {\r\n            return of([]); // Empty array when no customer name is selected\r\n          }\r\n        })\r\n      );\r\n\r\n      this.packageForm.controls.saleInvoice.valueChanges.pipe(\r\n        debounceTime(300),\r\n        filter(selectedSaleInvoice => !!selectedSaleInvoice) // Only proceed if saleInvoice has a value\r\n      ).subscribe(async (selectedSaleInvoice) => {\r\n        const selectedCustomerName = this.packageForm.value.name;\r\n        let receiptId;\r\n\r\n        await new Promise<void>((resolve) => {\r\n          this.saleOrderOptions.subscribe(items => {\r\n            const selectedInvoice = items.find(invoice => invoice.invoiceNo === selectedSaleInvoice);\r\n            receiptId = selectedInvoice ? selectedInvoice.id : null;\r\n            resolve();\r\n          });\r\n        });\r\n\r\n        if (selectedCustomerName) {\r\n          await this.getReceiptById(receiptId);\r\n        }\r\n      });\r\n\r\n      this.getSaleInvoiceNumber()\r\n    } catch (error) {\r\n        this.toastService.toastMsg({\r\n          title: 'Error',\r\n          content: error\r\n        })\r\n    }\r\n  }  \r\n  \r\n  receiptId(receiptId: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  \r\n  getContactName(name): Observable<any[]> {\r\n    return from(this.partyService.getAllPartiesDetailsSearch({}, this.currentUser.parentId ? this.currentUser.parentId : this.currentUser.id, 500, 1, name.toLowerCase()))\r\n    .pipe(\r\n        map((res: any) => {\r\n          if (res.success) {\r\n            return res.data.pageData.map(item => item.partyName);\r\n          } else {\r\n            return [];\r\n          }\r\n        })\r\n      );\r\n  }\r\n  \r\n  get formArr() {\r\n    return this.packageForm.get(\"subcheckbox\") as FormArray;\r\n  }\r\n\r\n  addDetailsButtonClick(i): void {\r\n    const content = this.packageForm.get(\"subcheckbox\") as FormArray;\r\n    content.push(this.addRolesPermission(i));\r\n  }\r\n\r\n  addRolesPermission(id): FormGroup {\r\n    return new FormGroup({\r\n      read: new FormControl(false),\r\n    });\r\n  }\r\n  \r\n  get f() {\r\n    return this.packageForm.controls;\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  isAllProductsPacked(){\r\n    return this.sales_products.every(item => item.isPacked)\r\n  }\r\n\r\n  toggleSelectAll() {\r\n    // this.selectAll = !this.selectAll;\r\n    this.sales_products.forEach(item => item.checked = this.selectAll);\r\n  }\r\n  \r\n  updateSelectAllState() {\r\n    this.selectAll = this.sales_products.every(item => item.checked);\r\n  }\r\n  \r\n  getSaleOrderOptions(saleInvoice, name): Observable<any[]> {\r\n    // Implement the logic to fetch sale order options based on the selected customer and sale invoice\r\n      try {\r\n        return from(this.saleOrderService.getSaleOrderList({}, this.currentUser.id, 'SALEORDER', 500, 1, undefined, name))\r\n          .pipe(\r\n            map((res: any) => {\r\n              return res.data.pageData.map(item => ({ invoiceNo: item.invoiceNo, id: item.id }));\r\n            },\r\n              (err) => {\r\n                if (err.error.expose) {\r\n                  this.toastService.toastMsg({\r\n                    title: \"Error\",\r\n                    content: this.titleCasePipe.transform(err.error.error_message),\r\n                  });\r\n                  return of([]); // Return an empty array in case of an error\r\n                }\r\n                else {\r\n                  this.toastService.toastMsg({\r\n                    title: \"Error\",\r\n                    content: \"Something Went Wrong.\",\r\n                  });\r\n                  return of([]); // Return an empty array in case of an error\r\n                }\r\n              })\r\n          )\r\n      } catch (error) {\r\n        console.error('Error fetching sale order list:', error);\r\n        return of([]); // Return an empty array in case of an exception\r\n      }\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  numberDecimalOnly(event): boolean {\r\n    var charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode != 46 && charCode > 31\r\n      && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getReceiptById(receiptId) {\r\n    this.saleInvoiceService.getSaleInvoiceById({}, receiptId).then(async (res) => {\r\n      if(res.success) {\r\n        this.isSaleInvocie = true;\r\n        this.sales_products = await res.data?.sales_products?.map(product => ({\r\n          ...product,\r\n          checked: product.isPacked === true // Set checked based on isPacked value\r\n        })) || [];        \r\n        this.updateSelectAllState()\r\n        this.partyId = res.data.partyId;\r\n        this.packageForm.patchValue({\r\n          customerName : res.data?.customerName,\r\n          billingAddress: res.data?.billingAddress,\r\n          shippingAddress: res.data?.shippingAddress,\r\n          ewayBillNo: res.data?.ewayBillNo,\r\n          mobile: res.data?.mobile,\r\n          invoiceNo: res.data?.invoiceNo,\r\n          invoiceDate: res.data?.invoiceDate ? (moment(res.data?.invoiceDate).format(\"DD-MMM-YYYY\")) : (moment(this.maxDate).format(\"DD-MMM-YYYY\")),\r\n          totalBillAmount: res.data?.totalBillAmount,\r\n          billGstAmount: res.data?.billGstAmount,\r\n          warehouseName: res.data?.warehouse?.name,\r\n        })\r\n        // this.isPacked = res.data.sales_products?.isPacked\r\n      }\r\n    })\r\n  }\r\n  \r\n  getSaleInvoiceNumber() {\r\n    this.saleInvoiceService\r\n      .getSaleInvoiceNumber({}, this.currentUser.id)\r\n      .then((res) => {\r\n          this.invoiceNo = String(res.data.prefix).concat(String(res.data.suffix)),\r\n          this.lastInvoiceNumber = res.data.suffix;\r\n      });\r\n  }\r\n\r\n  saveSelectedProducts() {\r\n    // Filter the selected products and Filter out the already packed products\r\n    this.selectedProducts = this.sales_products.filter(product => !product.isPacked && product.checked);\r\n    // Check if any product is selected\r\n    if (this.selectedProducts.length === 0) {\r\n      // Handle the case when no product is selected\r\n      this.toastService.toastMsg({\r\n        title: 'Error',\r\n        content: 'No products selected.'\r\n      })\r\n    } else {\r\n      // Prepare the payload for the API call\r\n      const payload = {\r\n          invoiceDetails: {\r\n              \"saleOrderId\": this.invoiceId,\r\n              \"cashSale\": false,\r\n              \"userId\": this.currentUser.id,\r\n              \"partyId\": this.partyId,\r\n              \"invoiceNo\": this.invoiceNo,\r\n              \"lastInvoiceNumber\": this.lastInvoiceNumber,\r\n              \"partialPack\": this.selectAll ? false : true,\r\n              \"ewayBillNo\": \"1212\"\r\n          },\r\n        products: this.selectedProducts.map(product => ({\r\n          quantity: product.quantity,\r\n          barcode: product.barcode,\r\n          saleProductId: product.id,\r\n        })),\r\n      };\r\n      this.warehouseService.packProducts(payload).then(\r\n        (res) => {\r\n          if(res.success) {\r\n            this.dialogRef.close();\r\n            this.toastService.toastMsg({\r\n              title: 'Success',\r\n              content: 'Products sent to packaging successfully'\r\n            })\r\n            this.commonService.notifyDataAdded()\r\n          }\r\n        },\r\n        (error) => {\r\n          this.toastService.toastMsg({\r\n            title: 'Error',\r\n            content: 'Error sending products to packaging:' + `${error}`\r\n          })\r\n        }\r\n      );\r\n    }\r\n  }\r\n  \r\n  onSave() {\r\n    this.submitted = true;\r\n    if (this.packageForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    } else {\r\n      const data = {\r\n          // \"id\": \"4\", //optional\r\n          \"userId\": this.currentUser.id,\r\n          \"name\": this.packageForm.value.name,\r\n          \"saleInvoice\": this.packageForm.value.saleInvoice,\r\n      }\r\n      this.warehouseService.postWarehouse(data).then( res => {\r\n        if(res.success) {\r\n          this.dialogRef.close();\r\n          this.commonService.notifyDataAdded()\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Shipping Data Addedd Successfully!!!\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // getAllCountries() {\r\n  //   this.partyService.getAllCountries({}).then((res) => {\r\n  //     this.countryList = res.data;\r\n  //   });\r\n  // }\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;margin-left: 5px;\" class=\"modal-title mb-0\">Add Package</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" style=\"margin-right: 10px;\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save ms-2\" (click)=\"saveSelectedProducts()\">Packed</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"packageForm\">\r\n        <div class=\"row mb-3\">\r\n          <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n            <label class=\"form-label\">Customer Name</label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <input matInput placeholder=\"Customer Name\" formControlName=\"name\" [matAutocomplete]=\"customerAuto\">\r\n              <mat-autocomplete #customerAuto=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let name of customerNames | async\" [value]=\"name\">\r\n                  {{ name }}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n            <!-- <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.name.touched) && f.name.errors?.required\">\r\n              Customer Name is required!\r\n            </mat-error> -->\r\n          </div>          \r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">#Sale Order<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Sale Order\" formControlName=\"saleInvoice\" [matAutocomplete]=\"saleOrderAuto\">\r\n                <mat-autocomplete #saleOrderAuto=\"matAutocomplete\">\r\n                  <mat-option *ngFor=\"let option of saleOrderOptions | async\" [value]=\"option.invoiceNo\">\r\n                    <span style=\"font-size: 12px;\"> {{ option.invoiceNo }}\r\n                    </span>\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.saleInvoice.touched) && f.saleInvoice.errors?.required\">\r\n                Sale Order is required!\r\n              </mat-error>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"row mb-3\" *ngIf=\"isSaleInvocie\" [ngClass]=\"{ 'disabled': true }\">\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n              <label class=\"form-label\">mobile</label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"mobile\" maxlength=\"50\" formControlName=\"mobile\" readonly>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.required\">\r\n                mobile is required!\r\n              </mat-error>\r\n            </div>\r\n\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n              <label class=\"form-label\">Invoice Date</label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"invoiceDate\" maxlength=\"50\" formControlName=\"invoiceDate\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"isSaleInvocie\" [ngClass]=\"{ 'disabled': true }\">\r\n          <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n            <label class=\"form-label\">ewayBillNo</label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <input matInput placeholder=\"ewayBillNo\" maxlength=\"50\" formControlName=\"ewayBillNo\" readonly>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n            <label class=\"form-label\">totalBillAmount</label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <input matInput placeholder=\"totalBillAmount\" maxlength=\"50\" formControlName=\"totalBillAmount\" readonly>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>       \r\n        \r\n        \r\n        <div class=\"row mb-3\" *ngIf=\"isSaleInvocie\" [ngClass]=\"{ 'disabled': true }\">\r\n          <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n            <label class=\"form-label\">Billing Address</label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <input matInput placeholder=\"Billing Address\"formControlName=\"billingAddress\" readonly>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n            <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n              <label class=\"form-label\">Shipping Address</label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matInput placeholder=\"Shipping Address\" formControlName=\"shippingAddress\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <div class=\"table-responsive my-custom-scrollbar mb-3\" *ngIf=\"isSaleInvocie\">\r\n        <table class=\"table bg-white table-bordered table-stripped\">\r\n          <thead class=\"table inner-model-table-heading\">\r\n            <tr class=\"font_size font-weight-bold\">\r\n              <th scope=\"col\" style=\"width: 7%;\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"selectAll\" (change)=\"toggleSelectAll()\" [disabled]=\"isAllProductsPacked()\"/>\r\n              </th>\r\n              <th scope=\"col\" style=\"width: 10%;\">\r\n                SKU<span class=\"text-danger\"> *</span>\r\n              </th>\r\n              <th class=\"text-nowrap\" scope=\"col\">\r\n                SKU Description\r\n              </th>\r\n              <th>Unit</th>\r\n  \r\n              <th>Quantity</th>\r\n              <th scope=\"col\" class=\"text-nowrap\" colspan=\"2\">\r\n                {{ lang.Base_Price_In_Rs }}<span class=\"text-danger\"> *</span>\r\n              </th>\r\n  \r\n              <th class=\"text-center\" style=\"width: 14%;\" scope=\"col\" colspan=\"2\">\r\n                {{lang.GST}}<span class=\"text-danger\"> *</span>\r\n              </th>\r\n  \r\n              <th scope=\"col\" class=\"text-nowrap\">\r\n                {{lang.Total_In_Rs}}<span class=\"text-danger\"> *</span>\r\n              </th> \r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"mod\">\r\n        <ng-container *ngFor=\"let item of sales_products; let i = index\">\r\n              <tr>\r\n                <td style=\"vertical-align: middle;\">\r\n                  <input type=\"checkbox\" [(ngModel)]=\"item.checked\" (change)=\"updateSelectAllState()\" [disabled]=\"item.isPacked\"/>\r\n                </td>\r\n                <td>\r\n                  {{ item.barcode }}\r\n                </td>\r\n                <td>{{ item.itemName | titlecase}}</td>\r\n                <td class=\"text-center\">\r\n                  {{ item.unit }}\r\n                </td>\r\n                <td style=\"display:flex; flex-direction: row; justify-content: center; align-items: center;\">\r\n                    {{ item.quantity }}\r\n                </td>\r\n                <td colspan=\"1\">\r\n                  <p class=\"\">\r\n                    AED&nbsp;{{item.pricePerUnit | number:'1.2-2'}}\r\n                  </p>\r\n                </td>\r\n                <td colspan=\"1\">\r\n                  <p class=\"\">\r\n                    AED&nbsp;{{item.subTotal | number:'1.2-2'}}\r\n                  </p>\r\n                </td>\r\n                <td colspan=\"1\">\r\n                  <p class=\"\">\r\n                    {{ item.gst }}%\r\n                  </p>\r\n                </td>\r\n                <td colspan=\"1\" style=\"max-width: 150px;\">\r\n                  <p class=\"\">\r\n                    AED&nbsp;{{item.gstAmount | number:'1.2-2'}}\r\n                  </p>\r\n                </td>\r\n                <td>\r\n                  <p class=\"\" style=\"max-width: 150px;\">\r\n                    AED&nbsp;{{item.finalAmount | number:'1.2-2'}}\r\n                  </p>\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { WarehouseService } from 'src/app/core/services/warehouse.service';\r\nimport { AddPackageComponent } from '../add-package/add-package.component';\r\nimport { SaleOrderService } from 'src/app/core/services/sale-order.service';\r\nimport { EditShippingComponent } from '../../../shipping/components/edit-shipping/edit-shipping.component';\r\n\r\n@Component({\r\n  selector: 'app-package-list',\r\n  templateUrl: './package-list.component.html',\r\n  styleUrls: ['./package-list.component.scss']\r\n})\r\nexport class PackageListComponent implements OnInit {\r\n\r\n  dummyDate = '2024-02-16T10:27:00.000Z'\r\n  private searchSubject = new Subject<string>();\r\n  private searchSubscription: Subscription;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  warehouseList: any[] = [];\r\n  excelFileUpload: any;\r\n  public currentpage: any;\r\n  public totalrow: any;\r\n  public totalPages: any;\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  public pagesize: number = 1;\r\n  public count: number = 0;\r\n  warehouseIdList: any[] = [];\r\n  selectedIdList: any[] = [];\r\n\r\n  public archiveIconfalse: boolean = false;\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n\r\n  public checkSelectsingle: boolean = false;\r\n\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSelectsingletrue: boolean = false;\r\n  warehouseId: any;\r\n  pageNumberDisplay: any[];\r\n  isLoading: boolean;\r\n  archivedPartyIds: any[];\r\n  unarchivedPartyIds: any[];\r\n  showUnarchiveButton: boolean;\r\n  showDeleteButton: boolean;\r\n  isdeletedParty: boolean;\r\n  selectedTypeFilter: string | null = null;\r\n  isFilterVisible: any;\r\n  @ViewChild('dropdown') dropdown: ElementRef;\r\n  searchKey: string;\r\n \r\n  notShippedPackages = [];\r\n  shippedPackages = [];\r\n  deliveredPackages = [];\r\n  saleOrderList: any[];\r\n\r\n  constructor(public router: Router, public dialog: MatDialog, private commonService: CommonService,\r\n    public route: ActivatedRoute, private warehouseService: WarehouseService,\r\n    public toastService: ToastNotificationService,\r\n    private saleorderservice: SaleOrderService,\r\n    private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSaleOrder();\r\n    this.getAllPackagesByUser();\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getSaleOrder();\r\n      this.getAllPackagesByUser();\r\n    });\r\n\r\n    this.searchSubscription = this.searchSubject\r\n      .pipe(debounceTime(800),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true; // Show the loader when the API call is initiated\r\n        })).subscribe(searchKey => {\r\n          // Call the API with the search key\r\n          if (searchKey.length >= 3) {\r\n            this.searchKey = searchKey;\r\n            this.searchWarehouse(searchKey.trim());\r\n          } else if (searchKey === '') {\r\n             this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n            this.getSaleOrder()\r\n          } else {\r\n            this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n          }\r\n        });\r\n  }\r\n\r\n  getSaleOrder() {\r\n    this.saleorderservice.getSaleOrderList({}, this.currentUser.id, \"SALEORDER\", this.partyPageSize, (this.currentPageNo + 1), 'NOTPACKED', null, 'STOCKTRANSFER', 'PARTIALPACKED').then((res) => {\r\n      if(res.success) {\r\n        this.saleOrderList = res.data.pageData;\r\n        }\r\n      },\r\n    (err) => {\r\n      console.log(\"In the Error\", err)\r\n    })\r\n  }\r\n  \r\n  getAllPackagesByUser() {\r\n    this.warehouseService.getAllPackagesByUser({}, this.currentUser.id).then((res) => {\r\n      if(res.success) {\r\n        const packages = res.data;\r\n        // Filter packages based on packStatus\r\n        this.notShippedPackages = packages.filter((item) => item.packStatus === 'PACKED');\r\n\r\n        this.shippedPackages = packages.filter(item => item.packStatus === 'SHIPPED');\r\n\r\n        this.deliveredPackages = packages.filter(item => item.packStatus === 'DELIVERED');\r\n      }\r\n    },\r\n      (err) => {\r\n      })\r\n  }\r\n\r\n  archhiveWarehouse(warehouseId: string, isdeleted: boolean) {\r\n    this.warehouseId = warehouseId;\r\n    this.isdeletedParty = isdeleted;\r\n    this.selectedIdList.push(warehouseId);\r\n  }\r\n\r\n  archiveSignleWarehouse() {\r\n    // if (this.isdeletedParty) {\r\n    //   this.warehouseService.unArchiveMultiplewarehouses({data: { unArchivewarehouses: this.selectedIdList }, userId: this.currentUser.id}).then((res: any) => {\r\n    //     if (res.success) {\r\n    //       this.toastService.toastMsg({\r\n    //         title: 'Success',\r\n    //         content: \"warehouse Unarchived Successfully!!!\"\r\n    //       });\r\n\r\n    //       this.getAllWarehouse();\r\n    //     }\r\n    //   })\r\n    // }\r\n    // else {\r\n    //   this.warehouseService.deleteMultiplewarehouses({data: { archivewarehouses: this.selectedIdList }, userId: this.currentUser.id}).then((res: any) => {\r\n    //     if (res.success) {\r\n    //       this.toastService.toastMsg({\r\n    //         title: 'Success',\r\n    //         content: \"warehouse Archived Successfully!!!\"\r\n    //       });\r\n    //       this.getAllWarehouse();\r\n    //     }\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  onChekedsingleCheck(e, partyId) {\r\n    if (e.target.checked) {\r\n      this.warehouseIdList.push(partyId);\r\n      this.checkSingleArray.push(e.target.value);\r\n    } else {\r\n      const index = this.warehouseIdList.indexOf(partyId);\r\n      if (index !== -1) {\r\n        this.warehouseIdList.splice(index, 1);\r\n        this.checkSingleArray.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    // Clear the archived and unarchived party IDs\r\n    this.archivedPartyIds = [];\r\n    this.unarchivedPartyIds = [];\r\n\r\n    // Update the archived and unarchived party IDs based on the selected parties\r\n    this.warehouseIdList.forEach(partyId => {\r\n      const party = this.warehouseList.find(item => item.id === partyId);\r\n      if (party) {\r\n        if (party.isDeleted) {\r\n          this.archivedPartyIds.push(partyId);\r\n        } else {\r\n          this.unarchivedPartyIds.push(partyId);\r\n        }\r\n      }\r\n    })\r\n\r\n    // Check if all the selected parties are archived\r\n    const allArchived = this.warehouseIdList.every(partyId => {\r\n      const party = this.warehouseList.find(item => item.id === partyId);\r\n      return party && party.isDeleted;\r\n    });\r\n\r\n    // Check if all the selected parties are unarchived\r\n    const allUnarchived = this.warehouseIdList.every(partyId => {\r\n      const party = this.warehouseList.find(item => item.id === partyId);\r\n      return party && !party.isDeleted;\r\n    });\r\n\r\n    // if (allArchived && allUnarchived) {\r\n    if (this.archivedPartyIds.length > 0 && this.unarchivedPartyIds.length > 0) {\r\n      // Show an alert error message to the user\r\n      alert(\"Please select either archived or unarchived Warehouses.\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.warehouseIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n\r\n    } else if (allArchived) {\r\n      // Show unarchive button\r\n      this.showUnarchiveButton = true;\r\n      this.showDeleteButton = false;\r\n    } else if (allUnarchived) {\r\n      // Show archive button\r\n      this.showDeleteButton = true;\r\n      this.showUnarchiveButton = false;\r\n    } else {\r\n      // Show error message or handle the case when there are both archived and unarchived parties selected\r\n      alert(\"Please select either archived or unarchived Warehouses.\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.warehouseIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n      this.showDeleteButton = false;\r\n      this.showUnarchiveButton = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getSingleCheckedId(warehouseId) {\r\n    this.warehouseId = warehouseId;\r\n  }\r\n\r\n  onChekMultiple($event) {\r\n    const isChecked = $event.target.checked;\r\n    if (isChecked) {\r\n      this.warehouseIdList = this.warehouseList.map(item => item.id);\r\n    } else {\r\n      this.warehouseIdList = [];\r\n      this.showDeleteButton = false;\r\n      this.showUnarchiveButton = false\r\n    }\r\n    this.checkSelect = isChecked; // Update the checkbox state in the header\r\n\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    this.upiCheckedId = this.warehouseList.map((item) => {\r\n      if (id === -1) {\r\n        if (this.isChecked == true) {\r\n          this.checkSelectsingle = true;\r\n          return item.id;\r\n        }\r\n        else {\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n        }\r\n      }\r\n    })\r\n    // Clear the archived and unarchived party IDs\r\n    this.archivedPartyIds = [];\r\n    this.unarchivedPartyIds = [];\r\n\r\n    // Update the archived and unarchived party IDs based on the selected parties\r\n    this.warehouseIdList.forEach(partyId => {\r\n      const party = this.warehouseList.find(item => item.id === partyId);\r\n      if (party) {\r\n        if (party.isDeleted) {\r\n          this.archivedPartyIds.push(partyId);\r\n        } else {\r\n          this.unarchivedPartyIds.push(partyId);\r\n        }\r\n      }\r\n\r\n      // Check if all the selected parties are archived\r\n      const allArchived = this.warehouseIdList.every(partyId => {\r\n        const party = this.warehouseList.find(item => item.id === partyId);\r\n        return party && party.isDeleted;\r\n      });\r\n      // Check if all the selected parties are unarchived\r\n      const allUnarchived = this.warehouseIdList.every(partyId => {\r\n        const party = this.warehouseList.find(item => item.id === partyId);\r\n        return party && !party.isDeleted;\r\n      });\r\n\r\n      if (allArchived) {\r\n        // Show unarchive button\r\n        this.showUnarchiveButton = true\r\n        this.showDeleteButton = false;\r\n      } else if (allUnarchived) {\r\n        // Show archive button\r\n        this.showDeleteButton = true;\r\n        this.showUnarchiveButton = false\r\n      } else {\r\n        // Show error message or handle the case when there are both archived and unarchived parties selected\r\n      }\r\n    });\r\n\r\n    if (this.archivedPartyIds.length > 0 && this.unarchivedPartyIds.length > 0) {\r\n      alert(\"Please select either archived or unarchived Warehouses\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.warehouseIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n\r\n      // Throw an error to prevent further processing\r\n      this.toastService.toastMsg({\r\n        title: 'Warning',\r\n        content: 'Please select either archived or unarchived Warehouses'\r\n      })\r\n      throw new Error(\"Please select either archived or unarchived Warehouses\");\r\n    }\r\n  }\r\n\r\n  getUPIcheckId(warehouseId) {\r\n    this.warehouseId = warehouseId;\r\n  }\r\n\r\n  archiveMultipleWarehouse() {\r\n    if (this.currentPageNo === 1) {\r\n      this.currentPageNo = this.currentPageNo;\r\n    }\r\n    else {\r\n      if (this.totalPages > this.currentPageNo) {\r\n        this.currentPageNo = this.currentPageNo - 1;\r\n      }\r\n    }\r\n    const requestBody = {\r\n      archiveWarehouses: this.warehouseIdList\r\n    };\r\n\r\n    // this.warehouseService.deleteMultiplewarehouses({ data: requestBody, userId: this.currentUser.id }).then((result: any) => {\r\n    //   if (result.success) {\r\n    //     this.getAllWarehouse();\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Success',\r\n    //       content: \"warehouse Archived Successfully!!!\"\r\n    //     });\r\n\r\n    //     this.showDeleteButton = false;\r\n    //     this.showUnarchiveButton = false\r\n    //     this.warehouseIdList = []; // Clear the selected party IDs after deletion\r\n    //     this.checkSelect = false // Reset the checkbox state in the header\r\n    //   }\r\n    // }, (err) => {\r\n    //   if (err.error.expose) {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: this.titleCasePipe.transform(err.error.error_message)\r\n    //     });\r\n    //   } else {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: \"Something Went Wrong.\"\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  showDeleteButtonFunc(): boolean {\r\n    return this.unarchivedPartyIds.length > 0;\r\n  }\r\n\r\n  unArchiveMultipleWarehouse() {\r\n    const requestBody = {\r\n      unArchiveWarehouses: this.warehouseIdList\r\n    };\r\n    // this.warehouseService.unArchiveMultiplewarehouses({data: requestBody, userId: this.currentUser.id}).then((result: any) => {\r\n    //   if (result.success) {\r\n    //     this.getAllWarehouse();\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Success',\r\n    //       content: \"warehouse Unarchived Successfully!!!\"\r\n    //     });\r\n    //     this.showDeleteButton = false;\r\n    //     this.showUnarchiveButton = false\r\n    //     this.warehouseIdList = []; // Clear the selected party IDs after unarchiving\r\n    //     this.checkSelect = false; // Reset the checkbox state in the header\r\n    //   }\r\n    // }, (err) => {\r\n    //   if (err.error.expose) {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: this.titleCasePipe.transform(err.error.error_message)\r\n    //     });\r\n    //   } else {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: \"Something Went Wrong.\"\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  searchWarehouse(searchKey: string) {\r\n    setTimeout(() => {\r\n      if (searchKey.trim() === '') {\r\n        this.getSaleOrder();\r\n        this.isLoading = false; \r\n      } else {\r\n        this.isLoading = false; \r\n        // this.getSaleOrder(searchKey)\r\n        if(this.warehouseList.length === 0){\r\n          this.isLoading = false; \r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: searchKey + \" Is Not Found\",\r\n          });\r\n        }\r\n      }\r\n    this.isLoading = false; // Hide the loader after the API call is completed\r\n    }, 500);\r\n  }\r\n\r\n  onSearchInputChange(searchKey: string) {\r\n    // Emit the search key to the searchSubject\r\n    this.searchSubject.next(searchKey.trim());\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.excelFileUpload = e.target.files[0];\r\n    const pattern = /\\.(xlsx|xls)$/i; // Pattern to match \".xlsx\" or \".xls\" extension\r\n    if (!pattern.test(this.excelFileUpload.name)) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Invalid Format. Please Select An Excel File.\",\r\n      });\r\n      return;\r\n    }\r\n    if (this.excelFileUpload) {\r\n      let formdata = new FormData();\r\n      formdata.set(\"file\", this.excelFileUpload)\r\n      // this.truckOwnerService.postBulkowner(formdata, this.currentUser.id).then((res) => {\r\n      //   this.toastService.toastMsg({\r\n      //     title: \"Success\",\r\n      //     content: \"Excel Uploaded Successfully\",\r\n      //   });\r\n      //   this.getAllWarehouse();\r\n      // }, (err) => {\r\n      //   if (err.error.expose) {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: this.titleCasePipe.transform(err.error.error_message),\r\n      //     });\r\n      //   }\r\n      //   else if (err.error.status == \"409\" && err.error.expose == false) {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: \"List Of Consignments Already Exists\",\r\n      //     });\r\n      //   }\r\n      //   else {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: \"Something Went Wrong.\",\r\n      //     });\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n\r\n  startUpload() {\r\n    var uploadInput = document.getElementById('uploadFile');\r\n    if (uploadInput) {\r\n      var event = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: false,\r\n        cancelable: true\r\n      });\r\n      uploadInput.dispatchEvent(event);\r\n    } else {\r\n      this.toastService.toastMsg({\r\n        title: 'Error',\r\n        content: \"Upload element not found\"\r\n      });\r\n    }\r\n  }\r\n\r\n  public handlePage(e: any) {\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n\r\n    if (this.warehouseList.length > 0) {\r\n      if (this.searchKey !== '') {\r\n        this.partyPageSize = e.pageSize;\r\n        this.searchWarehouse(this.searchKey);\r\n      } else {\r\n        this.partyPageSize = e.pageSize;\r\n        this.getSaleOrder();\r\n      }\r\n    }\r\n  }\r\n\r\n  packageModal(invoiceId?, packageData?): void {\r\n    const dialogRef: MatDialogRef<AddPackageComponent> = this.dialog.open(AddPackageComponent, {\r\n      width: '900px',\r\n      height: \"100vh\",\r\n      // minWidth: '700px',\r\n      data: { invoiceId: invoiceId, packageData: packageData },\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  editShippingListModal(packageData) {\r\n    const dialogRef: MatDialogRef<EditShippingComponent> = this.dialog.open(EditShippingComponent, {\r\n      width: '700px',\r\n      height: '100vh',\r\n      data: { packageData: packageData },\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  // isActive(warehouseId, isActive) {\r\n  //   const newStatus = !isActive; // Toggle between '1' and '0'\r\n  //   const payload = {\r\n  //     warehouseId: warehouseId,        \r\n  //   };\r\n  //   this.warehouseService.warehouseToggle({ data: payload, userId: this.currentUser.id })\r\n  //     .then((res) => {\r\n  //       if (res.success) {\r\n  //             if (newStatus) {\r\n  //               this.toastService.toastMsg({\r\n  //                 title: \"Success\",\r\n  //                 content: \"Status Has Changed To Active\",\r\n  //               });\r\n  //               this.getAllWarehouse()\r\n  //             } else {\r\n  //               this.toastService.toastMsg({\r\n  //                 title: \"Success\",\r\n  //                 content: \"Status Has Changed To Inactive\",\r\n  //               });\r\n  //               this.getAllWarehouse()\r\n  //             }\r\n  //           }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       this.toastService.toastMsg({\r\n  //         title: 'Error',\r\n  //         content: this.titleCasePipe.transform(error.error.error_message)\r\n  //       })\r\n  //     });\r\n  // }\r\n\r\n  // Add a method to update the filter value\r\n  updateTypeFilter(filterValue: string | null) {\r\n    if(filterValue === 'ALL') {\r\n      this.selectedTypeFilter = null;\r\n    } else {\r\n      this.selectedTypeFilter = filterValue;\r\n    }\r\n  }\r\n\r\n  toggleFilter() {\r\n    this.isFilterVisible = !this.isFilterVisible;\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.isFilterVisible = false;\r\n  }\r\n\r\n  onStatusChange(cart: any): void {\r\n    // API call to update the status\r\n    this.warehouseService.changeStatusOfPackage({ packageId : cart.id, packStatus : cart.status.toUpperCase()})\r\n        .then((result) => {\r\n          if(result.success) {\r\n            this.toastService.toastMsg({\r\n              title: 'Success',\r\n              content: 'Package shipped successfully'\r\n            })\r\n            this.commonService.notifyDataAdded()\r\n          }\r\n        }, (error) => {\r\n            // Handle the error if needed\r\n            console.error('Error updating status:', error);\r\n        });\r\n  }\r\n}\r\n","<div *ngIf=\"isLoading\" class=\"loader-container\">\r\n    <div class=\"loader\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"container-fluid bg-white p-0\">\r\n    <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n        <div class=\"flex-item searchBar\">\r\n            <input type=\"search\" id=\"searchInput\" class=\"search-form-control pe-5 my-2\" placeholder=\"Search...\"\r\n                (input)=\"onSearchInputChange($event.target.value)\" />\r\n        </div>\r\n        <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n            <button id=\"saleButtonPrint1\" class=\"btn text-nowrap my-2\" type=\"button\" (click)=\"packageModal()\">\r\n                <i class=\"fas fa-plus me-2\"> </i>Add Packages&nbsp;\r\n            </button>            \r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class = \"container-fluid\">\r\n            <div class = \"row mb-4\">\r\n                <div class=\"col-3 column-header\">\r\n                    <div class=\"status-box ready-to-package\"></div>\r\n                    Ready To Package ▼\r\n                </div>\r\n                <div class=\"col-3 column-header\">\r\n                    <div class=\"status-box not-shipped\"></div>\r\n                    Not Shipped Package ▼\r\n                </div>\r\n                <div class=\"col-3 column-header\">\r\n                    <div class=\"status-box shipped\"></div>\r\n                    Shipped Package ▼\r\n                </div>\r\n                <div class=\"col-3 column-header\">\r\n                    <div class=\"status-box delivered\"></div>\r\n                    Delivered Package ▼\r\n                </div>\r\n            </div>\r\n            <div class = \"row\">\r\n                <div class = \"col-3\">\r\n                    <ng-container *ngFor=\"let item of saleOrderList\">\r\n                        <div class=\"package-card pb-0 mb-3\" (click)=\"packageModal(item.id, item)\">\r\n                            <div class=\"receipt-container\" style=\"display: flex; align-items: center; width: 100%\">\r\n                                <span class=\"receipt-indicator\" style=\"background-color: #34eb73;\">{{ item.receiptType.toUpperCase() }}</span>\r\n                            </div> \r\n                            <div class=\"card-header d-flex\" style=\"align-items: center;\">\r\n                                <!-- <input type=\"checkbox\" [(ngModel)]=\"item.selected\" /> -->\r\n                                <span>{{ item.party?.partyName }}</span>\r\n                                <div style=\"margin-left: auto\">\r\n                                    <span class=\"mr-2\"><b>AED {{ item?.totalBillAmount }}</b></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"sale-order-body card-body d-flex py-0\">\r\n                                <div>Invoice No: {{ item?.invoiceNo }}</div>\r\n                                <div>{{ item?.invoiceDate | date:\"dd MMM YYYY\" | uppercase }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class = \"col-3\">\r\n                    <ng-container *ngFor=\"let package of notShippedPackages\">\r\n                        <div class=\"package-card pb-0 mb-3\">\r\n                            <div class=\"status-container\" style=\"display: flex; align-items: center; width: 100%\">\r\n                                <span class=\"status-indicator\" style=\"background-color: #ffcc00;\">{{ package.packStatus.toUpperCase() }}</span>\r\n                            </div>                                \r\n                            <div class=\"card-header d-flex py-0 pt-1\" style=\"align-items: center;\">\r\n                                <!-- <input type=\"checkbox\" [(ngModel)]=\"package.selected\" /> -->\r\n                                <span>{{ package?.customerName }}</span>\r\n                                <div style=\"margin-left: auto; display: flex; align-items: center;\">\r\n                                    <span class=\"mr-2\"><b>AED {{ package?.totalAmount }}</b></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-body py-2\">\r\n                                <div>\r\n                                    <span>{{ package?.createdAt | date:\"dd MMM YYYY\" | uppercase }}</span>\r\n                                </div>\r\n                                <div class=\"invoice-package-row pt-2\">\r\n                                    <!-- <div class=\"invoice-id mb-2 me-2\">\r\n                                        <span class=\"capsule violet-background\">SHP - {{ package?.invoiceNo }}</span>\r\n                                    </div> -->\r\n                                    <div class=\"package-id mb-2 me-2\">\r\n                                        <span class=\"capsule greenish-background\">PKG - {{ package?.id }}</span>\r\n                                        <!-- <span class=\"capsule greenish-background\">PKG - {{ package?.id }}</span> -->\r\n                                    </div>\r\n                                    <div class=\"mb-2 me-2\">\r\n                                        <img src=\"assets/icons/edit-pencil.svg\" style=\"cursor: pointer;\" alt=\"Edit\" width=\"20\" height=\"20\" \r\n                                        matTooltip=\"Edit\" (click)=\"editShippingListModal(package)\" data-bs-toggle=\"tooltip\"\r\n                                        data-bs-placement=\"top\">\r\n                                    </div>\r\n                                </div>                                \r\n                            </div>\r\n                        </div>\r\n                    </ng-container>                                                           \r\n                </div>\r\n                <div class = \"col-3\">\r\n                    <ng-container *ngFor=\"let package of shippedPackages\">\r\n                        <div class=\"package-card pb-0 mb-3\">\r\n                            <div class=\"status-container\" style=\"display: flex; align-items: center;width: 100%\">\r\n                                <span class=\"status-indicator\" style=\"background-color: #3385ff;\">{{ package.packStatus.toUpperCase() }}</span>\r\n                            </div>                                \r\n                            <div class=\"card-header d-flex py-0 pt-1\" style=\"align-items: center;\">\r\n                                <!-- <input type=\"checkbox\" [(ngModel)]=\"package.selected\" /> -->\r\n                                <span>{{ package?.customerName }}</span>\r\n                                <div style=\"margin-left: auto; display: flex; align-items: center;\">\r\n                                    <span class=\"mr-2\"><b>AED {{ package?.totalAmount }}</b></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-body py-2 pt-1\">\r\n                                <div>\r\n                                    <span>{{ package?.createdAt | date:\"dd MMM YYYY\" | uppercase }}</span>\r\n                                </div>\r\n                                <div class=\"invoice-package-row pt-2\">\r\n                                    <!-- <div class=\"invoice-id mb-2 me-2\">\r\n                                        <span class=\"capsule violet-background\">SHP - {{ package?.invoiceNo }}</span>\r\n                                    </div> -->\r\n                                    <div class=\"package-id me-2\">\r\n                                        <span class=\"capsule greenish-background\">PKG - {{ package?.id }}</span>\r\n                                    </div>\r\n                                    <div class=\"mb-2 me-2\">\r\n                                        <img src=\"assets/icons/edit-pencil.svg\" style=\"cursor: pointer;\" alt=\"Edit\" width=\"20\" height=\"20\" \r\n                                        matTooltip=\"Edit\" (click)=\"editShippingListModal(package)\" data-bs-toggle=\"tooltip\"\r\n                                        data-bs-placement=\"top\">\r\n                                    </div>\r\n                                </div>                                \r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class = \"col-3\">\r\n                    <ng-container *ngFor=\"let package of deliveredPackages\">\r\n                        <div class=\"package-card pb-0 mb-3\">\r\n                            <!-- <div class=\"status-container\" style=\"align-items: center;\"> -->\r\n                                <div class=\"\" style=\"width: 100%; padding: 0px\">\r\n                                    <div class=\"status-indicator\" style=\"background-color: #4caf50;\">{{ package.packStatus.toUpperCase() }}</div>\r\n                                </div>\r\n                            <!-- </div>                                 -->\r\n                            <div class=\"card-header d-flex py-0 pt-1\" style=\"align-items: center;\">\r\n                                <!-- <input type=\"checkbox\" [(ngModel)]=\"package.selected\" /> -->\r\n                                <span>{{ package?.customerName }}</span>\r\n                                <div style=\"margin-left: auto; display: flex; align-items: center;\">\r\n                                    <span class=\"mr-2\"><b>AED {{ package?.totalAmount }}</b></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-body py-2\">\r\n                                <div>\r\n                                    <span>{{ package?.createdAt | date:\"dd MMM YYYY\" | uppercase }}</span>\r\n                                </div>\r\n                                <div class=\"invoice-package-row pt-2\">\r\n                                    <!-- <div class=\"invoice-id mb-2 me-2\">\r\n                                        <span class=\"capsule violet-background\">SHP - {{ package?.invoiceNo }}</span>\r\n                                    </div> -->\r\n                                    <div class=\"package-id me-2\">\r\n                                        <span class=\"capsule greenish-background\">PKG - {{ package?.id }}</span>\r\n                                    </div>\r\n                                    <div class=\"mb-2 me-2\">\r\n                                        <img src=\"assets/icons/edit-pencil.svg\" style=\"cursor: pointer;\" alt=\"Edit\" width=\"20\" height=\"20\" \r\n                                        matTooltip=\"Edit\" (click)=\"editShippingListModal(package)\" data-bs-toggle=\"tooltip\"\r\n                                        data-bs-placement=\"top\">\r\n                                    </div>\r\n                                </div>                                \r\n                            </div>\r\n                        </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n      \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PackagesComponent } from './packages.component';\r\nimport { PackageListComponent } from './components/package-list/package-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: PackagesComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'package-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'package-list',\r\n        component: PackageListComponent,\r\n      }, \r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PackagesRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-packages',\r\n  templateUrl: './packages.component.html',\r\n  styleUrls: ['./packages.component.scss']\r\n})\r\nexport class PackagesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"component-container container-fluid bg-white p-4\">\r\n    <div id=\"navPanel\" class=\"row\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row page-nav-link mt-3\">\r\n          <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./package-list\" routerLinkActive=\"active\">All Packages</a>\r\n          </div>\r\n          <div class=\"col-lg-6 \"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"mt-1\">\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PackagesRoutingModule } from './packages-routing.module';\r\nimport { PackagesComponent } from './packages.component';\r\nimport { PackageListComponent } from './components/package-list/package-list.component';\r\nimport { AddPackageComponent } from './components/add-package/add-package.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PackagesComponent,\r\n    PackageListComponent,\r\n    AddPackageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PackagesRoutingModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,    \r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class PackagesModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}