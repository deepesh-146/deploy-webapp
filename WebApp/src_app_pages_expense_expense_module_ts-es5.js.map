{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_3__","ExpenseEditComponent","cdr","expenseData","dialogRef","expenseservice","formBuilder","router","toastService","titleCasePipe","JSON","parse","localStorage","getItem","today","Date","expenseId","expenseForm","group","expenseType","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","expenseCategory","expenseDate","paymentMode","expenseNote","toatalAmount","addtionalDetails","additionalDetailsControls","valueChanges","subscribe","data","reduce","a","b","totalAmount","patchValue","getExpenseById","i","cur_obj","controls","value","quantity","pricePerUnit","toString","get","index","deletedata","expenseitemsId","deleteArray","push","removeAt","item","createaddtionalDetails","detectChanges","close","expeseType","callback","expenseListType","getExpenseCategory","then","res","expenseCategoryData","rows","temp","console","error","e","CategortType","filter","id","map","type","expensemodeFlag","expenseMode","GetExpenseBYId","getExpensecategory","expensecategory","date","moment__WEBPACK_IMPORTED_MODULE_0__","format","note","expenseitems","expenseitemslength","length","submitted","formArrayData","apiCallInProgress","invalid","toastMsg","title","content","body","currentUser","ExpneseUpdate","notifyPartyAdded","err","expose","transform","error_message","selectedDate","isNaN","getTime","setValue","event","charCode","which","keyCode","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_7__","ctx_r10","item_r12","ctx_r3","ExpenseListComponent","dialog","datePipe","partyAdded$","getAllExpense","form","checkArray","array","ranges","setDate","getDate","label","setMonth","getMonth","toDateString","getFullYear","getAllExpenseDetails","partyPageSize","currentPageNo","p","currentPage","expenseList","pageData","totalrow","totalrows","toatlPages","totalPages","pageIndex","pagesize","pageSize","request","deleteEpenseSingle","checkSelectsingle","upiCheckedId","checkSelect","allSelect","checkSingleArray","archiveIconfalse","checkSelectsinglefalse","isChecked","searchKey","SearchExpense","currentpage","open","_expense_add_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","disableClose","afterClosed","result","log","_expense_view_component__WEBPACK_IMPORTED_MODULE_1__","_expense_edit_component__WEBPACK_IMPORTED_MODULE_2__","partyId","target","checked","selectedExpenseId","indexOf","splice","$event","_e","getExcelData","downloadExcel","moment__WEBPACK_IMPORTED_MODULE_3__","dateRange","totalPagess","dataForExport","name","worksheet","xlsx__WEBPACK_IMPORTED_MODULE_8__","workbook","Sheets","SheetNames","excelBuffer","bookType","Blob","fileName","routes","path","component","_expense_component__WEBPACK_IMPORTED_MODULE_0__","children","redirectTo","pathMatch","_expense_list_component__WEBPACK_IMPORTED_MODULE_1__","ExpenseRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","imports","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ExpenseViewComponent","expensecategoryname","expensedate","totalamount","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_0__","ExpenseComponent","ExpenseModule","_angular_common__WEBPACK_IMPORTED_MODULE_8__","_expense_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_9__","src_app_material_module__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_11__","declarations","_expense_component__WEBPACK_IMPORTED_MODULE_1__","_expense_list_component__WEBPACK_IMPORTED_MODULE_2__","_expense_add_component__WEBPACK_IMPORTED_MODULE_3__","_expense_edit_component__WEBPACK_IMPORTED_MODULE_5__","_expense_view_component__WEBPACK_IMPORTED_MODULE_6__"],"sources":["webpack:///src/app/pages/expense/expense-edit.component.html","webpack:///src/app/pages/expense/expense-edit.component.ts","webpack:///src/app/pages/expense/expense-list.component.html","webpack:///src/app/pages/expense/expense-list.component.ts","webpack:///src/app/pages/expense/expense-routing.module.ts","webpack:///src/app/pages/expense/expense-view.component.html","webpack:///src/app/pages/expense/expense-view.component.ts","webpack:///src/app/pages/expense/expense.component.html","webpack:///src/app/pages/expense/expense.component.ts","webpack:///src/app/pages/expense/expense.module.ts"],"sourcesContent":["<div class=\"modal-header pt-0\">\r\n  <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Update Expense</h1>\r\n\r\n  <div class=\"addProductButtons\">\r\n\r\n    <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n      (click)=\"cancel()\">Cancel</button>\r\n    <button type=\"submit\" class=\"btn btn-save\"  (click)=\"ExpenseEditDetails()\">Save</button>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <div class=\"container-fluid px-2\">\r\n    <form [formGroup]=\"expenseForm\">\r\n\r\n      <div class=\"row  mt-2\">\r\n        <div class=\"col-sm-12 col-lg-6 col-md-12 col-xl-6\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Expense Type <span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field  class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-select matNativeControl disableOptionCentering placeholder=\"Expense Type\"\r\n                formControlName=\"expenseType\"  [ngClass]=\"{'is-invalid':f.expenseType.invalid && f.expenseType.touched && submitted}\">\r\n                <mat-option value=\"Operating Expenses\" (click)=\"getExpensecategoryBySelect('Operating Expenses')\">Operating Expense</mat-option>\r\n                <mat-option value=\"COGS\" (click)=\"getExpensecategoryBySelect('COGS')\">COGS</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"\r\n              (submitted || f.expenseType.touched) && f.expenseType.errors?.required\r\n            \">\r\n              Expense Type is Required\r\n            </mat-error>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-lg-6 col-md-12 col-xl-6\">\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-2\">\r\n        <div class=\"col-sm-12 col-lg-6 col-md-12 col-xl-6\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Expense Category <span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-select matNativeControl matInput disableOptionCentering  required placeholder=\"Expense Category\"\r\n                formControlName=\"expenseCategory\" (selectionChange)=\"SetExpenseNAture($event.value)\">\r\n                <mat-option *ngFor=\"let item of expenseCategoryData\" [value]=\"item.id\" class=\"text-capitalize\">{{item.name | titlecase}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"\r\n                (submitted || f.expenseCategory.touched) && f.expenseCategory.errors?.required\r\n              \">\r\n              Expense Category is Required\r\n            </mat-error>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-lg-6 col-md-12 col-xl-6 mt-2\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Date <span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <input matInput required bsDatepicker  placeholder=\"DD MMM YYYY\"  [maxDate]=\"today\"\r\n                style=\"text-transform:uppercase!important;\" id=\"datePicker\" bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue',\r\n                          dateInputFormat: 'DD MMM YYYY',\r\n                           showWeekNumbers:false\r\n                          }\" formControlName=\"expenseDate\" autocomplete=\"off\" (click)=\"openDatepicker()\">\r\n              <span>\r\n                <mat-icon class=\"iconcalender p-1\">date_range</mat-icon>\r\n              </span>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"\r\n                (submitted || f.expenseDate.touched) && f.expenseDate.errors?.required\r\n              \">\r\n              Date is Required\r\n            </mat-error>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12 col-md-12 col-xl-12 col-sm-12\">\r\n\r\n        </div>\r\n      </div>\r\n      <!-- For table row  -->\r\n      <div class=\"row mb-2\" *ngIf=\"expenseForm.get('expenseType').value === 'COGS'\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-bordered fs--1 mb-0\">\r\n            <thead class=\"bg-200 text-900 text-center\" style=\"background-color: #F7F7F7!important;\">\r\n              <tr>\r\n                <th class=\"p-2\" style=\"width:10% !important\">#</th>\r\n                <th class=\"p-2\" style=\"width:50% !important\">Item</th>\r\n                <th class=\"p-2\">Quantity </th>\r\n                <th class=\"p-2\">Price/Unit</th>\r\n                <th class=\"p-2\">Amount</th>\r\n                <th class=\"p-2\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <ng-container formArrayName=\"addtionalDetails\" *ngFor=\"\r\n                        let group of additionalDetailsControls.controls;\r\n                        let i = index\r\n                      \">\r\n                <tr [formGroupName]=\"i\">\r\n                  <td style=\"vertical-align:middle;\">{{i+1}}</td>\r\n                  <td style=\"vertical-align:middle;\"> <input matInput type=\"text\" formControlName=\"item\" /></td>\r\n                  <td style=\"vertical-align:middle;\"> <input (keyup)=\"setTotalValue(i)\" matInput type=\"text\"\r\n                      formControlName=\"quantity\" /></td>\r\n                  <td style=\"vertical-align:middle;\"> <input (keyup)=\"setTotalValue(i)\"\r\n                    (keyup.enter)=\"addAddtionalDetails()\"\r\n                     matInput type=\"text\"\r\n                      formControlName=\"pricePerUnit\" /></td>\r\n                  <td style=\"vertical-align:middle;\"> <input readonly matInput type=\"text\"\r\n                      formControlName=\"totalAmount\" /></td>\r\n                  <td class=\" Icons\">\r\n                    <button class=\"btn\"  type=\"button\" (click)=\"deleteaddAddtionalDetails(group,i)\">\r\n                      <span class=\"bi-trash icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                        title=\"Delete\" style=\"color: red;\"></span>\r\n                      <!-- Delete -->\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </ng-container>\r\n            </tbody>\r\n\r\n\r\n          </table>\r\n        </div>\r\n        <div *ngIf=\"!expenseitemslength || !formArrayData \" class=\"row d-flex justify-content-end mt-2\">\r\n          <div class=\"col-sm-12 col-md-6 col-lg-6 text-nowrap mb-1 d-grid\">\r\n          <a class=\"btn btn-outline-warning dash fs--1\" (click)=\"addAddtionalDetails()\">\r\n              <span id=\"boot-icon\" class=\"bi bi-plus-lg newrow\"></span>\r\n              <span class=\"me-2 fs--1 text-black newrow\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                title=\"Add Row\">\r\n                Add New Row</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Expense Mode -->\r\n      <div class=\"row\">\r\n\r\n        <div class=\"col-lg-6 col-md-6 col-xl-6 mt-2\">\r\n          <label class=\"form-label\">Payment Mode</label>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-select matNativeControl matInput disableOptionCentering   placeholder=\"Payment Mode\" formControlName=\"paymentMode\">\r\n              <mat-option value=\"UPI\">UPI</mat-option>\r\n              <mat-option value=\"CASH\">CASH</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-error class=\"text-danger\" *ngIf=\"\r\n          (submitted || f.paymentMode.touched) && f.paymentMode.errors?.required\r\n        \">\r\n         Payment Mode is Required\r\n        </mat-error>\r\n        </div>\r\n\r\n        <div class=\"col-lg-6 col-md-12 col-xl-6 mt-2\">\r\n          <label class=\"form-label\">Total Amount <span class=\"error-asterisk\">*</span></label>\r\n        <!-- </div>\r\n        <div class=\"col-lg-3 col-md-3 col-xl-3 mt-4\"> -->\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\"  *ngIf=\"expenseForm.get('expenseType').value !== 'COGS'\">\r\n            <input matNativeControl required type=\"text\"  placeholder=\"Total Amount\"\r\n            formControlName=\"toatalAmount\" />\r\n          </mat-form-field>\r\n          <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.toatalAmount.touched) && f.toatalAmount.errors?.required\r\n          \">\r\n            Total Amount is Required\r\n          </mat-error>\r\n\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\"  *ngIf=\"expenseForm.get('expenseType').value === 'COGS'\" >\r\n            <input matNativeControl type=\"text\" readonly placeholder=\"Total Amount\"\r\n            formControlName=\"toatalAmount\" />\r\n          </mat-form-field>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <!-- Note -->\r\n      <div class=\"row mt-2\">\r\n        <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Note</label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <input matNativeControl matInput placeholder=\"Note\" formControlName=\"expenseNote\" autocomplete=\"off\" />\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n</div>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ExpenseAddComponent } from './expense-add.component';\r\nimport { ExpenseServiceService } from 'src/app/core/services/expense-service.service';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport * as moment from 'moment';\r\nimport { async } from 'rxjs/internal/scheduler/async';\r\n\r\n\r\n@Component({\r\n  selector: 'app-expense-edit',\r\n  templateUrl: './expense-edit.component.html',\r\n  styleUrls: ['./expense-edit.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ExpenseEditComponent implements OnInit {\r\n  public expenseId: any = \"\"\r\n  public expenseForm: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public todaysDate: any;\r\n  public expenseCategoryData: any;\r\n  public fieldArray: Array<any> = [];\r\n  public newAttribute: any = {};\r\n  public formArrayData;\r\n  public submitted: boolean = false;\r\n  public expenseitems = []\r\n  public expenseitemslength: any;\r\n  public toatalAmount: any;\r\n  today: Date;\r\n  public deleteArray: any = [];\r\n  public expensemodeFlag: boolean = false;\r\n  expenseListType: any;\r\n  public apiCallInProgress:boolean=false;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef, @Inject(MAT_DIALOG_DATA) public expenseData: any, private dialogRef: MatDialogRef<ExpenseEditComponent>, private expenseservice: ExpenseServiceService,\r\n    private formBuilder: FormBuilder, public router: Router, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.today = new Date();\r\n    this.expenseId = this.expenseData.expenseId;\r\n    this.expenseForm = this.formBuilder.group({\r\n      expenseType: [\"\", [Validators.required]],\r\n      expenseCategory: [\"\", [Validators.required]],\r\n      expenseDate: [\"\", [Validators.required]],\r\n      paymentMode: [null],\r\n      expenseNote: [null],\r\n      toatalAmount: [\"\", [Validators.required]],\r\n      addtionalDetails: new FormArray([]),\r\n    });\r\n    this.additionalDetailsControls.valueChanges.subscribe(data => {\r\n      this.toatalAmount = data.reduce((a, b) => a + +b.totalAmount, 0)\r\n      this.expenseForm.patchValue({\r\n        toatalAmount: this.toatalAmount\r\n      })\r\n    })\r\n    this.getExpenseById();\r\n  }\r\n\r\n  //set value of total = price per unit * quantity\r\n  setTotalValue(i) {\r\n    let cur_obj = this.additionalDetailsControls.controls[i].value\r\n    cur_obj.totalAmount = cur_obj.quantity * cur_obj.pricePerUnit\r\n    cur_obj.totalAmount = cur_obj.totalAmount.toString();\r\n    this.additionalDetailsControls.controls[i].patchValue(cur_obj)\r\n  }\r\n\r\n  get additionalDetailsControls() {\r\n    return this.expenseForm.get('addtionalDetails') as FormArray;\r\n  }\r\n\r\n  deleteaddAddtionalDetails(index, i): void {\r\n    let deletedata = index.value.expenseitemsId\r\n    const data = this.expenseForm.get('addtionalDetails') as FormArray;\r\n    this.deleteArray.push(deletedata);\r\n    data.removeAt(i);\r\n  }\r\n\r\n  createaddtionalDetails(): FormGroup {\r\n    return new FormGroup({\r\n      expenseitemsId: new FormControl(),\r\n      item: new FormControl(\"\"),\r\n      quantity: new FormControl(\"\"),\r\n      pricePerUnit: new FormControl(\"\"),\r\n      totalAmount: new FormControl(\"\"),\r\n    });\r\n  }\r\n  addAddtionalDetails(): void {\r\n    const data = this.expenseForm.get('addtionalDetails') as FormArray;\r\n    data.push(this.createaddtionalDetails());\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  get f() {\r\n    return this.expenseForm.controls;\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async getExpensecategory(expeseType: string, callback) {\r\n    try {\r\n      this.expenseListType = expeseType;\r\n      const temp = await this.expenseservice.getExpenseCategory({}, this.expenseListType).then((res: any) => {\r\n        this.expenseCategoryData = res.data.rows;\r\n      })\r\n      // Call the callback function to continue with form updates\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  getExpensecategoryBySelect(expeseType: string) {\r\n    this.expenseListType = expeseType;\r\n    this.expenseservice.getExpenseCategory({}, this.expenseListType).then((res: any) => {\r\n      this.expenseCategoryData = res.data.rows;\r\n    })\r\n  }\r\n\r\n  SetExpenseNAture(e) {\r\n    const CategortType = this.expenseCategoryData.filter((res) => res.id === e).map(item => item.type);\r\n    this.expensemodeFlag = true\r\n    this.expenseForm.patchValue({\r\n      expenseMode: CategortType[0]\r\n    })\r\n  }\r\n\r\n  async getExpenseById() {\r\n    this.expenseservice.GetExpenseBYId({}, this.expenseId).then(async (res: any) => {\r\n      // Pass a callback function to getExpensecategory\r\n      this.getExpensecategory(res.data.expenseType, () => {\r\n        this.expenseForm.patchValue({\r\n          expenseType: res.data.expenseType,\r\n          expenseCategory: res.data.expensecategory.id,\r\n          expenseDate: res.data.date ? moment(res.data.date).format(\"DD-MMM-YYYY\") : moment(res.data.date).format(\"DD-MMM-YYYY\"),\r\n          paymentMode: res.data.paymentMode,\r\n          toatalAmount: res.data.totalAmount,\r\n          expenseNote: res.data.note\r\n        });\r\n       \r\n      });\r\n      this.expenseitems = res.data.expenseitems;\r\n      this.expenseitemslength = this.expenseitems.length;\r\n      if (this.expenseitemslength > 0) {\r\n        for (let i = 0; i < this.expenseitemslength; i++) {\r\n          if (this.expenseitems[i].id) {\r\n            this.additionalDetailsControls.push(\r\n              new FormGroup({\r\n                item: new FormControl(this.expenseitems[i].item.toString()),\r\n                quantity: new FormControl(this.expenseitems[i].quantity.toString()),\r\n                pricePerUnit: new FormControl(this.expenseitems[i].pricePerUnit.toString()),\r\n                totalAmount: new FormControl(this.expenseitems[i].totalAmount.toString()),\r\n                expenseitemsId: new FormControl(this.expenseitems[i].id),\r\n              })\r\n            )\r\n          }\r\n          else {\r\n            this.additionalDetailsControls.push(\r\n              new FormGroup({\r\n                item: new FormControl(this.expenseitems[i].item.toString()),\r\n                quantity: new FormControl(this.expenseitems[i].quantity.toString()),\r\n                pricePerUnit: new FormControl(this.expenseitems[i].pricePerUnit.toString()),\r\n                totalAmount: new FormControl(this.expenseitems[i].totalAmount.toString()),\r\n              })\r\n            )\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n  ExpenseEditDetails() {\r\n    this.submitted = true;\r\n    this.formArrayData = this.additionalDetailsControls.value;\r\n    if (this.apiCallInProgress) {\r\n      return;\r\n    }\r\n  \r\n    // Disable the \"Save\" button to prevent multiple clicks\r\n    this.apiCallInProgress = true;\r\n    if (this.expenseListType === 'COGS') {\r\n      if (this.expenseForm.invalid) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Fill All Required Fields.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n        this.apiCallInProgress = false;\r\n        return false;\r\n      }\r\n      else {\r\n        if (this.formArrayData.length < 1) {\r\n          // this.toastService.openErrorSnackBar(\r\n          //   \"Please Add At Least One Expense Item To Proceed!!!\"\r\n           \r\n          // );\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Please Add At Least One Expense Item To Proceed!!!\",\r\n          });\r\n          this.apiCallInProgress = false;\r\n          return false;\r\n        }\r\n        let body =\r\n        {\r\n          \"userId\": this.currentUser.id,\r\n          \"expenseData\": {\r\n            \"date\": moment(this.expenseForm.controls.expenseDate.value, 'DD-MMM-YYYY').format('YYYY-MM-DD'),\r\n            \"expensecategoryId\": this.expenseForm.controls.expenseCategory.value,\r\n            \"paymentMode\": this.expenseForm.controls.paymentMode.value,\r\n            \"expenseType\": this.expenseForm.controls.expenseType.value,\r\n            \"totalAmount\": this.expenseForm.controls.toatalAmount.value,\r\n            \"note\": this.expenseForm.controls.expenseNote.value,\r\n          },\r\n          \"expenseItems\": this.formArrayData,\r\n          \"expenseDelete\": this.deleteArray\r\n        }\r\n        this.expenseservice.ExpneseUpdate(body, this.expenseId).then((res) => {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: 'Expense Updated Successfully!!!',\r\n          });\r\n          // this.toastService.openSnackBar(\"Expense Updated Successfully!!!\");\r\n\r\n          this.expenseservice.notifyPartyAdded()\r\n          this.dialogRef.close();\r\n        }\r\n          , (err) => {\r\n            this.apiCallInProgress = false;\r\n            if (err.error.expose) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: this.titleCasePipe.transform(err.error.error_message),\r\n              });\r\n              // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n            }\r\n            else {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Something Went Wrong.\",\r\n              });\r\n              // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n            }\r\n          }\r\n        )\r\n      }\r\n    }\r\n    else {\r\n      if (this.expenseForm.invalid) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Fill All Required Fields.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n        this.apiCallInProgress = false;\r\n        return false;\r\n      }\r\n    \r\n      let body =\r\n      {\r\n        \"userId\": this.currentUser.id,\r\n        \"expenseData\": {\r\n          \"date\": moment(this.expenseForm.controls.expenseDate.value, 'DD-MMM-YYYY').format('YYYY-MM-DD'),\r\n          \"expensecategoryId\": this.expenseForm.controls.expenseCategory.value,\r\n          \"paymentMode\": this.expenseForm.controls.paymentMode.value,\r\n          \"expenseType\": this.expenseForm.controls.expenseType.value,\r\n          \"totalAmount\": this.expenseForm.controls.toatalAmount.value,\r\n          \"note\": this.expenseForm.controls.expenseNote.value,\r\n        },\r\n        \"expenseItems\": [],\r\n        \"expenseDelete\": []\r\n      }\r\n      this.expenseservice.ExpneseUpdate(body, this.expenseId).then((res) => {\r\n        // this.toastService.openSnackBar(\"Expense Updated Successfully!!!\");\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: 'Expense Updated Successfully!!!',\r\n        });\r\n        this.expenseservice.notifyPartyAdded()\r\n        this.dialogRef.close();\r\n      }\r\n        , (err) => {\r\n          this.apiCallInProgress = false;\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n            // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n            // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.expenseForm.get('expenseDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.expenseForm.get('expenseDate').setValue(new Date());\r\n    }\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n}\r\n","<div class=\"container-fluid \">\r\n\r\n\r\n    <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n        <div class=\"flex-item expenseOptions\">\r\n            <div class=\"expenseDate\">\r\n                <label for=\"Date Range\" class=\"form-label\">Date</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input class=\"uppercase-date-range\" matInput placeholder=\"Date\" id=\"Date Range\" type=\"text\" autocomplete=\"off\"\r\n                        [outsideClick]=\"true\" ngModel bsDaterangepicker [maxDate]=\"today\" [(ngModel)]=\"dateRange\"\r\n                        (ngModelChange)=\"changeDate($event)\" [bsConfig]=\"{ ranges: ranges,\r\n                                  showWeekNumbers:false,\r\n                                  showNextMonth: false,\r\n                                  rangeInputFormat : 'DD MMM YYYY',\r\n                                  containerClass: 'theme-dark-blue',\r\n                                    displayOneMonthRange: true\r\n                                     }\">\r\n                    <span>\r\n                        <mat-icon class=\"iconcalender p-1\">date_range</mat-icon>\r\n                    </span>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n            <button class=\"btn  my-2\" type=\"button\" (click)=\"openDialog()\"><i class=\"fas fa-plus\"> </i> Add Expenses\r\n            </button>\r\n\r\n            <button class=\"btn  my-2\" (click)=\"ExcelDownlod()\">\r\n                <i class=\"fas fa-download\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <hr class=\"m-0\"> -->\r\n    <div style=\"width:100% ; overflow-x: auto;\" style=\"overflow-x: auto;\">\r\n        <table class=\"table table-responsive table-bordered fs--1 mb-0\" id=\"excel-table\">\r\n            <thead class=\"text-600\">\r\n                <tr>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align: middle;width:100px;height:50px;display:flex;align-items: center;\">\r\n\r\n                        <!-- <th class=\"text-nowrap col-1\" style=\"vertical-align: middle;width:5%\"> -->\r\n                        <div style=\"display: flex; align-items: center;\">\r\n                            <div>\r\n                                <input type=\"checkbox\" class=\"form-check-input\" (change)=\"onChekMultiple($event)\"\r\n                                    [value]=\"-1\" [checked]=\"selectedExpenseId.length === expenseList.length\"\r\n                                    [(ngModel)]=\"allSelect\" />\r\n                            </div>\r\n\r\n                            <!-- <span *ngIf=\"checkSingleArray.length > 0 || isChecked\" >\r\n                                    <button   style=\"padding: 0px!important;\" *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn ms-3\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                                        <span  *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"bi-trash icon-color fs-1 text-red\"  style=\"color: red;\" data-bs-toggle=\"tooltip\"\r\n                                                        data-bs-placement=\"top\" title=\"Delete\"\r\n                                                        (click)=\" upiCheckedId.length > 0? getUPIcheckId(upiCheckedId):getSingleCheckedId(checkSingleArray)\"></span>\r\n                                    </button>\r\n                                </span> -->\r\n                            <div style=\"margin-left: 5px;\">\r\n                                <span *ngIf=\"showDeleteButton()\">\r\n                                    <button style=\"padding-top: 6px;\" *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                        class=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                                        <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                            class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                            style=\"color : red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                            title=\"Delete\"\r\n                                            (click)=\" upiCheckedId.length > 0? getUPIcheckId(upiCheckedId):getSingleCheckedId(checkSingleArray)\">\r\n                                        </span>\r\n                                    </button>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align: middle;width:200px;\">Date</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align: middle;width:200px;\">Category</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align: middle;width:200px;\">Expense Type</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align: middle;width:120px;\">Payment Mode</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align: middle;text-align: right;width:150px;\">Amount</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align: middle;width:20%;\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                <tr class=\"btn-reveal-trigger text-left \" *ngFor=\"let item of expenseList\"\r\n                    style=\"color: #676398!important;\">\r\n                    <!-- <td class=\"checkbox\" style = \"vertical-align: middle;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"checkSelectsingle\"\r\n                        (change)=\"onChekedsingleCheck($event)\" [value]=\"item.id\" />\r\n                    </td> -->\r\n                    <td scope=\"row\" style=\"vertical-align:middle;width:100px;\">\r\n                        <input class=\"form-check-input mt-3\" type=\"checkbox\"\r\n                            [checked]=\"selectedExpenseId.includes(item.id)\"\r\n                            (change)=\"onChekedsingleCheck($event, item.id)\" [value]=\"item.id\" />\r\n                    </td>\r\n                    <td class=\"text-nowrap date\" style=\"vertical-align: middle;\">{{item.date| date:\"dd MMM YYYY\"|\r\n                        uppercase}}</td>\r\n                    <td class=\"text-nowrap category\" style=\"vertical-align: middle;\">{{item.expensecategory.name |\r\n                        titlecase}}</td>\r\n                    <td class=\"expense mode\" style=\"vertical-align: middle;\">{{item.expenseType}}</td>\r\n                    <td class=\"paymentMode\" style=\"vertical-align: middle;\">{{item.paymentMode}}</td>\r\n                    <th class=\"text-nowrap totalAmount\" style=\"vertical-align: middle;text-align: right;\">\r\n                        ₹&nbsp;{{item.totalAmount | number:'1.2-2' }}</th>\r\n                    <!-- <td class=\"text-nowrap\" style=\"text-align:right !important;vertical-align: middle;\"> -->\r\n                    <td class=\"text-nowrap\" style=\"text-align:center !important;width:20%;\">\r\n                        <div class=\"flex\">\r\n                            <button class=\"btn\" (click)=\"openViewModal(item.id)\">\r\n                                <span class=\"bi bi-eye icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"View\"></span>\r\n\r\n                            </button>\r\n                            <button class=\"btn \" (click)=\"openEditModel(item.id)\">\r\n                                <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Edit\"></span>\r\n\r\n                            </button>\r\n\r\n                            <button class=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                                <span class=\"bi-trash icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" (click)=\"getExpenseId(item.id)\" title=\"Delete\"\r\n                                    style=\"color: red;\"></span>\r\n                                <!-- Delete -->\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n\r\n            <tbody *ngIf=\"expenseList.length == 0\">\r\n                <tr class=\"text-center\">\r\n                  <td style=\"width:100px;\">&nbsp;</td>\r\n                  <td colspan=\"6\">\r\n                      <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                          alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                  </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <mat-paginator class=\"float-right mt-2\" *ngIf=\"expenseList\" [pageSize]=\"partyPageSize\" showFirstLastButtons\r\n            [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\"\r\n            (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n        </mat-paginator>\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- Delete Popup  for expense  -->\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Expense? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are You Sure To Delete Expense?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" (click)=\"deletExpenseById()\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Expense? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are You Sure To Delete Expense?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" (click)=\"deletExpenseById()\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Expense? </h2>\r\n                </div>\r\n                <!-- <h4   *ngIf=\"!isChecked  && !checkSingleArray \"class=\"text-center \">Are you sure to delete this UPI?</h4> -->\r\n                <h4 *ngIf=\"isChecked \" class=\"text-center \">Are You Sure To Delete All Expense?</h4>\r\n                <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are You Sure To Delete Selected Expense?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <!-- <a   *ngIf=\"!isChecked  && !checkSingleArray \" class=\"btn btn-outline-primary\" data-bs-dismiss=\"modal\" (click)=\"deletExpenseById()\">Delete\r\n                </a> -->\r\n                <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deletExpenseById()\">Delete All\r\n                </a>\r\n                <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deletExpenseById()\">Delete Selected\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { TitleCasePipe, UpperCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ExpenseServiceService } from 'src/app/core/services/expense-service.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ExpenseAddComponent } from './expense-add.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ExpenseViewComponent } from './expense-view.component';\r\nimport { ExpenseEditComponent } from './expense-edit.component';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\nimport { X } from '@angular/cdk/keycodes';\r\nimport { elementAt } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as ExcelJS from 'exceljs';\r\nimport { saveAs } from 'file-saver';\r\ninterface IRange {\r\n  value: Date[];\r\n  label: string;\r\n}\r\n@Component({\r\n  selector: 'app-expense-list',\r\n  templateUrl: './expense-list.component.html',\r\n  styleUrls: ['./expense-list.component.scss']\r\n})\r\nexport class ExpenseListComponent implements OnInit {\r\n  public expenseList: any[] = [];\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  public p = 1;\r\n  public totalrow: any;\r\n  public toatlPages: any;\r\n  public pagesize: number = 1;\r\n  public expenseId: any;\r\n  public searchKey: any = \"\";\r\n  public form: FormGroup;\r\n  public archiveIconfalse: boolean = false;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public selectedExpenseId: any[] = [];\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  public checkSelectsingle: boolean = false;\r\n  public ranges: IRange[];\r\n  public dateRange: Date[];\r\n  public today: Date;\r\n  fileName = 'expense.xlsx';\r\n  public selectType = ['DIRECT', 'INDIRECT']\r\n  constructor(private expenseservice: ExpenseServiceService, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private dialog: MatDialog, private formBuilder: FormBuilder, private datePipe: DatePipe) {\r\n    this.today = new Date();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.expenseservice.partyAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getAllExpense();\r\n    });\r\n    this.getAllExpense();\r\n    this.form = this.formBuilder.group({\r\n      checkArray: this.formBuilder.array([]),\r\n    });\r\n    this.ranges = [\r\n      {\r\n        value: [new Date(new Date().setDate(new Date().getDate() - 7)), new Date(new Date().setDate(new Date().getDate() - 1))],\r\n        label: 'Last 7 Days'\r\n      },\r\n      {\r\n        value: [new Date(new Date().setDate(new Date().getDate() - 30)), new Date(new Date().setDate(new Date().getDate() - 1))],\r\n        label: 'Last 30 Days'\r\n      },\r\n      {\r\n        value: [new Date(new Date(new Date(new Date().setMonth(new Date().getMonth() - 1)).setDate(1)).toDateString()), new Date(new Date(new Date().setDate(0)).toDateString())],\r\n        label: 'Last Month'\r\n\r\n      },\r\n      {\r\n        value: [new Date(new Date(new Date().getFullYear() - 1, 3, 1).toDateString()), new Date(new Date(new Date().getFullYear(), 2, 31).toDateString())],\r\n        label: 'Last Financial Year'\r\n\r\n      },\r\n      {\r\n        value: [new Date(new Date(new Date().getFullYear(), 3, 1).toDateString()), new Date(new Date().setDate(new Date().getDate() - 1))],\r\n        label: 'This Financial Year'\r\n\r\n      },\r\n      {\r\n        value: [],\r\n        label: 'Custom Range'\r\n      }];\r\n  }\r\n\r\n  getAllExpense() {\r\n    this.expenseservice.getAllExpenseDetails({}, this.currentUser.id, this.partyPageSize, (this.currentPageNo + 1)).then((res) => {\r\n      this.p = res.data.currentPage;\r\n      this.expenseList = res.data.pageData;\r\n      this.totalrow = res.data.totalrows;\r\n      this.toatlPages = res.data.totalPages\r\n    }\r\n      , (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n\r\n      })\r\n  }\r\n  handlePage(e) {\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n    if (this.expenseList.length > 0) {\r\n      this.partyPageSize = e.pageSize;\r\n      this.getAllExpense();\r\n    }\r\n  }\r\n  getExpenseId(expenseId) {\r\n    this.expenseId = expenseId\r\n\r\n  }\r\n  deletExpenseById() {\r\n    let request = {\r\n      \"deleteArray\": this.expenseId\r\n\r\n    }\r\n    this.expenseservice.deleteEpenseSingle(request, this.currentUser.id).then((res) => {\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Expense Deleted Successfully!!!\",\r\n      });\r\n      this.getAllExpense()\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.checkSelect = false;\r\n      this.allSelect = false;\r\n      this.checkSingleArray = [];\r\n      this.archiveIconfalse = false;\r\n      this.allSelect = false;\r\n      this.checkSelectsinglefalse = false;\r\n      this.isChecked=false;\r\n      this.checkSingleArray = [];\r\n    }\r\n      , (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n  }\r\n  getSearchByExpenseNature(searchKey) {\r\n    if (searchKey) {\r\n      this.expenseservice.SearchExpense({}, this.currentUser.id, this.partyPageSize, (this.currentPageNo + 1), searchKey).then((res: any) => {\r\n        this.p = res.data.currentpage;\r\n        this.expenseList = res.data.pageData;\r\n        this.totalrow = res.data.totalrows;\r\n        this.toatlPages = res.data.totalPages;\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n  openDialog(): void {\r\n    const dialogRef: MatDialogRef<ExpenseAddComponent> = this.dialog.open(ExpenseAddComponent, {\r\n      width: 'auto',\r\n      height: '700px',\r\n      data: {},\r\n      panelClass: 'custom-dialog-expense-class',\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n  openViewModal(expenseId: string): void {\r\n    const dialogRef = this.dialog.open(ExpenseViewComponent, {\r\n      width: '1000px', // Adjust the width as per your requirement\r\n      height: '600px', // Adjust the height as per your requirement\r\n      data: { expenseId: expenseId },\r\n      panelClass: 'custom-dialog-expense-class',\r\n      //   disableClose:true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n  openEditModel(expenseId: string) {\r\n    const dialogRef = this.dialog.open(ExpenseEditComponent, {\r\n      width: '1000px', // Adjust the width as per your requirement\r\n      height: '600px', // Adjust the height as per your requirement\r\n      data: { expenseId: expenseId },\r\n      panelClass: 'custom-dialog-expense-class',\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  onChekedsingleCheck(e, partyId){\r\n    if (e.target.checked) {\r\n      this.selectedExpenseId.push(partyId);\r\n    } else {\r\n      const index = this.selectedExpenseId.indexOf(partyId);\r\n      if (index !== -1) {\r\n        this.selectedExpenseId.splice(index, 1);\r\n      }\r\n    }\r\n    if (e.target.checked) {\r\n      this.checkSingleArray.push(e.target.value);\r\n    }\r\n    else {\r\n      this.checkSingleArray = [];\r\n    }\r\n \r\n  }\r\n\r\n  getSingleCheckedId(expenseId) {\r\n    this.expenseId = expenseId;\r\n  }\r\n  onChekMultiple($event){\r\n    const isChecked = $event.target.checked;\r\n    if (isChecked) {\r\n      this.selectedExpenseId = this.expenseList.map(item => item.id);\r\n    } else {\r\n      this.selectedExpenseId = [];\r\n    }\r\n    this.checkSelect = isChecked; // Update the checkbox state in the header\r\n\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    this.upiCheckedId = this.expenseList.map((item) => {\r\n      if (id == -1) {\r\n        if (this.isChecked == true) {\r\n          this.checkSelectsingle = true;\r\n          return item.id;\r\n        }\r\n        else {\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n        }\r\n      }\r\n    })\r\n  }\r\n  showDeleteButton(): boolean {\r\n    return this.selectedExpenseId.length > 0;\r\n  }\r\n  getUPIcheckId(expenseId) {\r\n    this.expenseId = expenseId;\r\n\r\n  }\r\n  changeDate(_e: any) {\r\n    this.getExcelData();\r\n  }\r\n  \r\n  getExcelData() {\r\n    this.expenseservice.downloadExcel({}, this.currentUser.id, moment(this.dateRange[0], 'DD-MMM-YYYY').format('YYYY-MM-DD'), moment(this.dateRange[1], 'DD-MMM-YYYY').format('YYYY-MM-DD')).then((res: any) => {\r\n      this.p = res.data.currentPage;\r\n      this.expenseList = res.data.pageData;\r\n      this.totalrow = res.data.totalrows;\r\n      this.toatlPages = res.data.totalPagess\r\n\r\n    }\r\n      , (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n  }\r\n\r\n  ExcelDownlod() {\r\n    const dataForExport = this.expenseList.map((item,index )=> {\r\n      return {\r\n        'Sr. No': index + 1, \r\n        'Date': item.date, // Date in \"YYYY-MM-DD\" format\r\n        'Category': item.expensecategory.name,\r\n        'Expense Type':item.expenseType,\r\n        'Payment mode': item.paymentMode,\r\n        'Amount': item.totalAmount\r\n      };\r\n    });\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(dataForExport);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n    saveAs(data, this.fileName);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ExpenseComponent } from './expense.component';\r\nimport { ExpenseListComponent } from './expense-list.component';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: '',\r\n    component : ExpenseComponent,\r\n    children : [\r\n      { \r\n        path: '', \r\n        redirectTo: 'expense-list',\r\n        pathMatch: 'full'\r\n      },\r\n      { \r\n        path: \"expense-list\",\r\n        component: ExpenseListComponent\r\n      },\r\n     \r\n    ]\r\n  }\r\n]\r\n  \r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forChild(routes),CommonModule],\r\n})\r\nexport class ExpenseRoutingModule { }\r\n","<div class=\"modal-header row\" id=\"Add-Party-modal\">\r\n    <div class=\"col-lg-6 col-sm-12 col-md-4\">\r\n        <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">View Expense</h1>\r\n    </div>\r\n    <div class=\"col-lg-2 col-sm-12 col-md-1\"></div>\r\n    <div class=\"col-lg-2 col-sm-12 col-md-3  mb-2\">\r\n        <button type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-sm-12 col-lg-6 col-md-12 col-xl-6\">\r\n                <label class=\"form-label fw-bolder \">Expense Category</label>\r\n                <h3 class=\"text-capitalize\">{{expensecategoryname}}</h3>\r\n\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-6 col-md-12 col-xl-6\">\r\n                <label class=\"form-label fw-bolder \">Date</label>\r\n                <h3>{{expensedate|date:\"dd MMM YYYY\"| uppercase}}</h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div style=\"width:100% ; overflow-x: scroll;\" class=\"mb-3\" *ngIf=\"expenseType ==='COGS'\">\r\n            <table class=\"table table-responsive table-bordered fs--1 mb-0\">\r\n                <thead class=\"text-600\" style=\"background-color: #F7F7F7!important;\">\r\n                    <tr>\r\n                        <th style=\"width:10% !important\">#</th>\r\n                        <th style=\"width:50% !important\">ITEM</th>\r\n                        <th>Quantity </th>\r\n                        <th>PRICE/UNIT</th>\r\n                        <th>AMOUNT</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr class=\"btn-reveal-trigger text-left\" *ngFor=\"let item of expenseitems;let i=index\"\r\n                        style=\"color: #676398!important;\">\r\n                        <td>{{i+1}}</td>\r\n                        <td>{{item.item}}</td>\r\n                        <td>{{item.quantity}}</td>\r\n                        <td>{{item.pricePerUnit}}</td>\r\n                        <td>{{item.totalAmount}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tbody *ngIf=\"expenseitems == 0\">\r\n                    <tr class=\"text-center\">\r\n                        <td colspan=\"10\">\r\n                            <h5 class=\"text-nowrap\">No Expence Items Details Added . <span>\r\n                                </span></h5>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n\r\n        <!-- for expense mode  -->\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-sm-12 col-lg-3 col-md-3 col-xl-3\">\r\n                <label class=\"form-label fw-bolder \">Payment Mode</label>\r\n                <h3>{{paymentMode ? paymentMode :'NA'}}</h3>\r\n                <!-- <h3>{{ note ? note : 'NA' }}</h3> -->\r\n\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-3 col-md-3 col-xl-3\">\r\n                <label class=\"form-label fw-bolder \">Expense Type</label>\r\n                <h3>{{expenseType}}</h3>\r\n            </div>\r\n            <!-- <div class=\"col-sm-12 col-lg-1 col-md-1 col-xl-1\"></div> -->\r\n            <div class=\"col-sm-12 col-lg-3 col-md-3 col-xl-3\" *ngIf=\"expenseType ==='COGS'\">\r\n                <label class=\" fw-bolder  form-label\">Total Amount</label>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-2 col-md-2 col-xl-2 px-4\" *ngIf=\"expenseType ==='COGS'\">\r\n                <h3>₹&nbsp;{{totalamount | number:'1.2-2'}}</h3>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-3 col-md-3 col-xl-3\" *ngIf=\"expenseType !=='COGS'\">\r\n                <label class=\" fw-bolder  form-label\">Total Amount</label>\r\n                <h3>₹&nbsp;{{totalamount | number:'1.2-2'}}</h3>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <!-- for Note -->\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-sm-12 col-lg-8 col-md-12 col-xl-8\">\r\n                <label class=\"fw-bolder form-label\">Note</label>\r\n                <h3>{{ note ? note : 'NA' }}</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ExpenseServiceService } from 'src/app/core/services/expense-service.service';\r\n\r\n@Component({\r\n  selector: 'app-expense-view',\r\n  templateUrl: './expense-view.component.html',\r\n  styleUrls: ['./expense-view.component.scss']\r\n})\r\nexport class ExpenseViewComponent implements OnInit {\r\n  public expenseId:any=\"\"\r\n  public expenseDataId:any;\r\n  public expensecategoryname:any\r\n  public expensedate:any;\r\n  public note:any;\r\n  public paymentMode:any;\r\n  public expenseType:any;\r\n  public totalamount:any;\r\n  public expenseitems:any;\r\n\r\n  constructor(\r\n   private expenseservice: ExpenseServiceService,@Inject(MAT_DIALOG_DATA) public expenseData: any,public dialogRef: MatDialogRef<ExpenseViewComponent>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.expenseId = this.expenseData.expenseId;\r\n    this.getExpenseById();\r\n  }\r\n  getExpenseById(){\r\n    this.expenseservice.GetExpenseBYId({},this.expenseId).then((res:any)=>{\r\n     \r\n     this.expensecategoryname=res.data.expensecategory.name;\r\n     this.expensedate=res.data.date;\r\n     this.paymentMode=res.data.paymentMode;\r\n     this.expenseType=res.data.expenseType;\r\n     this.totalamount=res.data.totalAmount\r\n     this.note =res.data.note;\r\n\r\n     this.expenseitems=res.data.expenseitems;\r\n     \r\n    })\r\n    \r\n\r\n  }\r\n  cancel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"component-container container-fluid px-3 pt-3\">\r\n    <div id=\"navPanel\" class=\"row px-3 pt-3\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n  <div class=\"row  mt-3 page-nav-link\" style=\"z-index: 1;\">\r\n          <div class=\"col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 text-nowrap \" routerLink=\"./expense-list\"  routerLinkActive=\"active\">Expense List</a>\r\n          </div>\r\n          <div class=\"col-lg-6 \"></div>\r\n        </div>\r\n      </div>\r\n   \r\n  </div>\r\n  <hr class = \"mt-1\" >\r\n  <div >\r\n \r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n\r\n  <ng-template #modalContent>\r\n    <div>\r\n  </div>\r\n  </ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-expense',\r\n  templateUrl: './expense.component.html',\r\n  styleUrls: ['./expense.component.scss']\r\n})\r\nexport class ExpenseComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ExpenseRoutingModule } from './expense-routing.module';\r\nimport { ExpenseComponent } from './expense.component';\r\nimport { ExpenseListComponent } from './expense-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ExpenseAddComponent } from './expense-add.component';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { ExpenseEditComponent } from './expense-edit.component';\r\nimport { ExpenseViewComponent } from './expense-view.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExpenseComponent,\r\n    ExpenseListComponent,\r\n    ExpenseAddComponent,\r\n    ExpenseEditComponent,\r\n    ExpenseViewComponent,\r\n \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ExpenseRoutingModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class ExpenseModule { }\r\n"]}