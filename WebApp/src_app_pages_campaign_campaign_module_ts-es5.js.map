{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_7__","ctx_r9","item_r11","ActivePageComponent","formBuilder","router","dialog","commonService","route","campService","toastService","titleCasePipe","JSON","parse","localStorage","getItem","getAllCampaigns","rowAdded$","subscribe","currentUser","id","then","res","campList","data","filter","campaign","status","err","error","searchTerm","trim","item","name","toLowerCase","includes","description","length","openErrorSnackBar","campaignId","campIdList","push","deleteCampaigns","success","openSnackBar","e","currentPageNo","pageIndex","campPageSize","pageSize","document","getElementById","click","dialogRef","open","_add_campaign_add_campaign_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","disableClose","position","right","afterClosed","result","console","log","productId","checkSelect","archiveIconfalse","allSelect","checkSelectsinglefalse","isChecked","upiCheckedId","checkSingleArray","expose","transform","error_message","isActive","selectedCampaign","find","_id","requestData","sendDate","email","sms","notification","whatsapp","updateCampaign","_clone_cammpaigncomponnet_clone_cammpaigncomponnet_component__WEBPACK_IMPORTED_MODULE_1__","_update_campaign_update_campaign_component__WEBPACK_IMPORTED_MODULE_2__","_view_campaign_component_view_campaign_component_component__WEBPACK_IMPORTED_MODULE_3__","target","checked","value","index1","indexOf","splice","index","$event","upiCheckedId1","map","i","selectors","decls","vars","consts","template","ctx","CampaignRouterComponentComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_campaign_router_component_campaign_router_component_component__WEBPACK_IMPORTED_MODULE_0__","children","redirectTo","pathMatch","_active_page_active_page_component__WEBPACK_IMPORTED_MODULE_1__","_draft_page_draft_page_component__WEBPACK_IMPORTED_MODULE_2__","_ended_page_ended_page_component__WEBPACK_IMPORTED_MODULE_3__","routerLinkActiveOptions","exact","CampaignRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","CampaignModule","_angular_common__WEBPACK_IMPORTED_MODULE_12__","_campaign_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_13__","src_app_material_module__WEBPACK_IMPORTED_MODULE_5__","_angular_material_input__WEBPACK_IMPORTED_MODULE_14__","_angular_material_button__WEBPACK_IMPORTED_MODULE_15__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_16__","_angular_material_core__WEBPACK_IMPORTED_MODULE_17__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_19__","_angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_20__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_21__","ngx_bootstrap_timepicker__WEBPACK_IMPORTED_MODULE_22__","declarations","_campaign_router_component_campaign_router_component_component__WEBPACK_IMPORTED_MODULE_1__","_active_page_active_page_component__WEBPACK_IMPORTED_MODULE_2__","_draft_page_draft_page_component__WEBPACK_IMPORTED_MODULE_3__","_ended_page_ended_page_component__WEBPACK_IMPORTED_MODULE_4__","_add_campaign_add_campaign_component__WEBPACK_IMPORTED_MODULE_6__","_clone_cammpaigncomponnet_clone_cammpaigncomponnet_component__WEBPACK_IMPORTED_MODULE_7__","_update_campaign_update_campaign_component__WEBPACK_IMPORTED_MODULE_8__","_view_campaign_component_view_campaign_component_component__WEBPACK_IMPORTED_MODULE_9__","_user_list_names_user_list_names_component__WEBPACK_IMPORTED_MODULE_10__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","CloneCammpaigncomponnetComponent","crmservice","partyService","campaignData","Date","hour","minute","getCampaignDataByCampaignId","todaysDate","minDate","getFullYear","getMonth","getAllParties","campForm","group","campaignName","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","campaignDescription","partySelection","sendEmail","sendSMS","sendNotification","sendWhatsappMsg","selectedTime","selectedDate","intervalId","setInterval","today","setSeconds","getSeconds","hours","getHours","toString","padStart","minutes","getMinutes","seconds","currentTime","onTimeChange","getCampaignBycampId","patchValue","get","split","Number","setHours","setMinutes","setValue","clearInterval","getAllPartiesDetails","partyResponse","partyList","pageData","party","mobile","partyName","getAllLeadList","leadResponse","leadList","lead","toList","selectAllParties","selectedParties","updatePartySelection","findIndex","selectedParty","timeParts","parseInt","selectedDateTime","toISOString","updateSelectedDateTime","submitted","invalid","formData","campaignsData","note","campaignsUsers","userId","addCampaign","close","notifyDataAdded","isNaN","getTime","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__","DraftPageComponent","campId","selectedCampIds","checkSelectsingle","_update_campaign_update_campaign_component__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_4__","EndedPageComponent","UpdateCampaignComponent","partyList1","campaignUsers","pdata","toggleSelect","campaignsUserId","UserListNamesComponent","campaignUser","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__","ViewCampaignComponentComponent","whatsApp","campaignDate","createdAt","_user_list_names_user_list_names_component__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__"],"sources":["webpack:///src/app/pages/campaign/active-page/active-page.component.html","webpack:///src/app/pages/campaign/active-page/active-page.component.ts","webpack:///src/app/pages/campaign/campaign-router-component/campaign-router-component.component.ts","webpack:///src/app/pages/campaign/campaign-router-component/campaign-router-component.component.html","webpack:///src/app/pages/campaign/campaign-routing.module.ts","webpack:///src/app/pages/campaign/campaign.module.ts","webpack:///src/app/pages/campaign/clone-cammpaigncomponnet/clone-cammpaigncomponnet.component.html","webpack:///src/app/pages/campaign/clone-cammpaigncomponnet/clone-cammpaigncomponnet.component.ts","webpack:///src/app/pages/campaign/draft-page/draft-page.component.html","webpack:///src/app/pages/campaign/draft-page/draft-page.component.ts","webpack:///src/app/pages/campaign/ended-page/ended-page.component.html","webpack:///src/app/pages/campaign/ended-page/ended-page.component.ts","webpack:///src/app/pages/campaign/update-campaign/update-campaign.component.html","webpack:///src/app/pages/campaign/update-campaign/update-campaign.component.ts","webpack:///src/app/pages/campaign/user-list-names/user-list-names.component.html","webpack:///src/app/pages/campaign/user-list-names/user-list-names.component.ts","webpack:///src/app/pages/campaign/view-campaign-component/view-campaign-component.component.ts","webpack:///src/app/pages/campaign/view-campaign-component/view-campaign-component.component.html"],"sourcesContent":["<!-- <div class=\"row d-flex flex-center\">\r\n    <div class=\"col-md-1 col-lg-7 col-xl-7\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\" [(ngModel)]=\"searchTerm\"\r\n            (ngModelChange)=\"searchFunc()\">\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-2 col-lg-2 col-xl-2 mt-2\"\r\n        style=\"display:flex;justify-content: space-around !important;\">\r\n        <button class=\"btn ms-2 text-nowrap\" (click)=\"openCampModal()\"><i class=\"fas fa-plus\"></i> Create\r\n            Campaign</button>\r\n    </div>\r\n</div> -->\r\n\r\n<div class=\"container-fluid bg-white p-0\">\r\n  <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n      <div class=\"flex-item searchBar\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\"\r\n        [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchFunc()\">\r\n      </div>\r\n      <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n        <button class=\"btn text-nowrap my-2\" (click)=\"openCampModal()\"><i class=\"fas fa-plus\"></i> Create Campaign</button>\r\n      </div>\r\n  </div>\r\n\r\n<!-- <hr class=\"mb-1\"> -->\r\n\r\n<div class=\"table-container overflow-auto\">\r\n\r\n    <div class=\"table-div\" style=\"width:100%;overflow-x: auto;\">\r\n        <table class=\"table table-responsive\">\r\n            <thead>\r\n                <tr class=\"row \">\r\n                    <th class=\"text-nowrap col-1\" style=\"vertical-align:middle;\">\r\n                        <input  type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\"\r\n                            (change)=\"onChekMultiple($event)\" [value]=\"-1\" [checked]=\"checkSelect\" [(ngModel)]=\"allSelect\"/>\r\n\r\n                            <span *ngIf=\"archiveIconfalse\">\r\n                                <button   style=\"padding: 0px!important;\" *ngIf=\"checkSingleArray.length > 0 || upiCheckedId.length > 0\" class=\"btn ms-3\" data-bs-toggle=\"modal\" data-bs-target=\"#mutipleDelete_modal\">\r\n                                    <span  *ngIf=\"checkSingleArray.length > 0 || upiCheckedId.length > 0\" class=\"bi-trash icon-color fs-1\" style=\"color: red;\" data-bs-toggle=\"tooltip\"\r\n                                                    data-bs-placement=\"top\" title=\"Archive\"\r\n                                                    (click)=\" upiCheckedId.length > 0? getUPIcheckId($event,upiCheckedId):getSingleCheckedId($event,checkSingleArray)\"></span>\r\n                                </button>\r\n                            </span>\r\n                    </th>\r\n                    <th class=\"col-2 text-nowrap d-flex align-items-center\">Name</th>\r\n                    <th class=\"col-2 text-nowrap d-flex align-items-center\">Date</th>\r\n                    <th class=\"col-2 text-nowrap d-flex align-items-center\">Descriptions</th>\r\n                    <th class=\"col-1 text-nowrap d-flex align-items-center\">Active</th>\r\n                    <th class=\"col-2 text-nowrap d-flex align-items-center\"></th>\r\n                    <th class=\"col-2 text-nowrap d-flex align-items-center\"></th>\r\n                </tr>\r\n                <!-- <hr style=\"margin-top: 0px; margin-bottom: 0px;\"> -->\r\n            </thead>\r\n            <tbody>\r\n                <tr class=\"row\" *ngFor=\"let item of campList;let i = index\">\r\n                    <td class=\"col-1 d-flex align-items-center\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"checkSelectsinglefalse\"\r\n                            (change)=\"onChekedsingleCheckfalse($event,item._id)\" [value]=\"item._id\" />\r\n                    </td>\r\n                    <td class=\"col-2 d-flex align-items-center\">{{ item.name }}</td>\r\n                    <td class=\"col-2 d-flex align-items-center\">{{item.sendDate | date:\"dd MMM YYYY\"| uppercase }}</td>\r\n                    <td class=\"col-2 d-flex align-items-center\">{{ item.description }}</td>\r\n                    <td class=\"col-1 d-flex align-items-center\">\r\n                        <button class=\"toggle-button\" (click)=\"toggleActiveState(item.isActive, item._id)\"\r\n                        [ngClass]=\"{ 'active': item.isActive , 'inactive': !item.isActive}\">\r\n                        <div class=\"toggle-slider\"></div>\r\n                    </button>\r\n                    </td>\r\n                    <td class=\"col-1 d-flex align-items-center\"></td>\r\n                    <td class=\"col-1 text-nowrap\" style=\"text-align:center !important;vertical-align: middle;\">\r\n                        <div>\r\n                            <button class=\"btn\" (click)=\"viewCampaign(item._id)\">\r\n                                <span class=\"bi bi-eye icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"View\"></span>\r\n\r\n                            </button>\r\n\r\n                            <button class=\"btn mt-2\" (click)=\"CloneCampaign(item._id)\">\r\n                                <span class=\"material-icons icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Clone\">content_copy</span>\r\n\r\n                            </button>\r\n                            <button class=\"btn\" (click)=\"editCampaign(item._id)\">\r\n                                <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Edit\"></span>\r\n\r\n                            </button>\r\n\r\n                            <button class=\"btn\" (click)=\"deleteCamp(item._id)\" data-bs-toggle=\"modal\"\r\n                                data-bs-target=\"#errorDelete-modal\">\r\n                                <span class=\"bi-trash icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Delete\" style=\"color: red;\"></span>\r\n                                <!-- Delete -->\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody *ngIf=\"campList.length === 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <!-- Single Delete -->\r\n    <div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n            <div class=\"modal-content position-relative\">\r\n                <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                    <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\"\r\n                        data-bs-dismiss=\"modal\" aria-label=\"Close\"></a>\r\n                </div>\r\n                <div class=\"modal-body p-0\">\r\n                    <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                        <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \"\r\n                            id=\"modalExampleDemoLabel\">\r\n                            Delete Campaign? </h2>\r\n                    </div>\r\n                    <h4 class=\"text-center \">Are you sure to delete this Campaign?</h4>\r\n\r\n                </div>\r\n                <div class=\"modal-footer justify-content-center\">\r\n                    <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                    <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"deleteCampaigns()\">Delete\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Multiple Delete -->\r\n    <div class=\"modal\" id=\"mutipleDelete_modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n            <div class=\"modal-content position-relative\">\r\n                <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                    <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\"\r\n                        data-bs-dismiss=\"modal\" aria-label=\"Close\"></a>\r\n                </div>\r\n                <div class=\"modal-body p-0\">\r\n                    <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                        <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \">\r\n                            Delete Campaign? </h2>\r\n                    </div>\r\n                    <h4 *ngIf=\"isChecked \" class=\"text-center \">Are you sure to delete all campaigns?</h4>\r\n                    <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are you sure to delete all selected campaigns?</h4>\r\n\r\n                </div>\r\n                <div class=\"modal-footer justify-content-center\">\r\n                    <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                    <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                        (click)=\"deletMultipleCampaigns()\">Continue</a>\r\n                    <a *ngIf=\"!isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                        (click)=\"deletMultipleCampaigns()\">Continue</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PartyService } from 'src/app/core/services/party.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { Workbook } from 'exceljs';\r\nimport * as fs from 'file-saver';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { CampaignServiceService } from 'src/app/core/services/campaign-service.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { AddCampaignComponent } from '../add-campaign/add-campaign.component';\r\nimport { CloneCammpaigncomponnetComponent } from '../clone-cammpaigncomponnet/clone-cammpaigncomponnet.component';\r\nimport { UpdateCampaignComponent } from '../update-campaign/update-campaign.component';\r\nimport { ViewCampaignComponentComponent } from '../view-campaign-component/view-campaign-component.component';\r\n@Component({\r\n  selector: 'app-active-page',\r\n  templateUrl: './active-page.component.html',\r\n  styleUrls: ['./active-page.component.scss']\r\n})\r\nexport class ActivePageComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public p = 1;\r\n  public currentpage: any;\r\n  public totalrow: any;\r\n  public toatlPages: any;\r\n  public currentPageNo: number = 0;\r\n  public campPageSize: number = 5;\r\n  public count: number = 0;\r\n  public searchKey: string;\r\n  campList: any[] = [];\r\n  campIdList: string[] = [];\r\n  searchTerm: string = '';\r\n  //public checkSingleArray: any[] = [];\r\n  //public isChecked: boolean = false;\r\n  //public upiCheckedId : string[] = [];\r\n  //public allSelect: boolean = false;\r\n // public checkSelect: boolean = false;\r\n  public checkSelectsingle:boolean =false;\r\n  campaignId : any;\r\n  selectedCampIds: any[] = [];\r\n  isActive: boolean;\r\n\r\n  public archiveIconfalse: boolean = false;\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSelectsingletrue: boolean = false;\r\n  public productId: any;\r\n  \r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router, public dialog: MatDialog, private commonService: CommonService,\r\n    public route: ActivatedRoute, private campService : CampaignServiceService,\r\n    public toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCampaigns();\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      this.getAllCampaigns();\r\n     });\r\n  }\r\n\r\n  getAllCampaigns() {\r\n    this.campService.getAllCampaigns({}, this.currentUser.id).then((res) => {\r\n      this.campList = res.data.filter(campaign => campaign.status !== 'COMPLETE');\r\n    }, (err) => {\r\n      if (err.error.status == 404) {\r\n        this.campList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  searchFunc(){\r\n    if (this.searchTerm.trim() === '') {\r\n      this.getAllCampaigns();\r\n    } else {\r\n      // this.campService.getAllCampaigns({}, this.currentUser.id).then((res:any) => {\r\n        this.campList = this.campList.filter(item => {\r\n          return (\r\n            (item.name && item.name.toLowerCase().includes(this.searchTerm.toLowerCase())) ||\r\n            (item.description && item.description.toLowerCase().includes(this.searchTerm.toLowerCase()))\r\n          );\r\n        });\r\n      // });\r\n      if(this.campList.length === 0){\r\n        this.toastService.openErrorSnackBar(this.searchTerm + \" is not found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteCamp(campaignId : string){\r\n    this.campIdList.push(campaignId);\r\n  }\r\n\r\n  deleteCampaigns() {\r\n    this.campService.deleteCampaigns({ \"deleteArray\": this.campIdList }, this.currentUser.id).then((res) => {\r\n      if(res.success){\r\n        this.getAllCampaigns()\r\n        this.toastService.openSnackBar('Campaign deleted successfully');\r\n      }\r\n    }, (err) => {\r\n      if (err.error.status == 404) {\r\n        this.campList = [];\r\n      }\r\n    })\r\n  }\r\n \r\n  // for pagination\r\n  public handlePage(e: any) {\r\n    this.currentPageNo = e.pageIndex;\r\n    this.campPageSize = e.pageSize;\r\n    this.getAllCampaigns();\r\n  }\r\n\r\n  handleInputChange(e){\r\n    // this.excelFileUpload= e.target.files[0];\r\n    // const pattern = /\\.(xlsx|xls)$/i; // Pattern to match \".xlsx\" or \".xls\" extension\r\n    // if (!pattern.test(this.excelFileUpload.name)) {\r\n    //   this.toastService.openErrorSnackBar(\"Invalid format. Please select an Excel file.\");\r\n    //   return;\r\n    // }\r\n    // if(this.excelFileUpload){\r\n    //   let formdata = new FormData();\r\n    //   formdata.set(\"file\", this.excelFileUpload)\r\n    //   this.partyService.postBulkParty(formdata, this.currentUser.id).then((res) => {\r\n    //     this.toastService.openSnackBar(\"Excel Uploaded Successfully\")\r\n    //     this.getAllParties();\r\n    //     // window.location.reload() \r\n    //   },(err) => {\r\n    //     if (err.error.expose) {\r\n    //       this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n    //     }\r\n    //     else if(err.error.status == \"409\" && err.error.expose == false){\r\n    //       this.toastService.openErrorSnackBar(\"List Of Parties Already Exists\");\r\n    //     }\r\n    //     // else{\r\n    //     //   this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n    //     // }   \r\n    //   });\r\n    // }\r\n    }\r\n\r\n    startUpload(){\r\n      document.getElementById('uploadFile').click();\r\n    }\r\n\r\n    openCampModal(): void {\r\n      const dialogRef: MatDialogRef<AddCampaignComponent> = this.dialog.open(AddCampaignComponent, {\r\n        width: '700px', // Adjust the width as per your requirement\r\n        height : '100vh',\r\n        data: { },\r\n        panelClass: 'custom-dialog-Camp-class',\r\n        disableClose:true,\r\n        position: {\r\n          right: '0',\r\n        },\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe((result) => {\r\n        console.log(`Dialog result: ${result}`);\r\n      });\r\n    }\r\n\r\n    // onChekedsingleCheck(e, campId){\r\n    //   if (e.target.checked) {\r\n    //     this.selectedCampIds.push(campId);\r\n    //   } else {\r\n    //     const index = this.selectedCampIds.indexOf(campId);\r\n    //     if (index !== -1) {\r\n    //       this.selectedCampIds.splice(index, 1);\r\n    //     }\r\n    //   }\r\n    //   // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n    //   if (e.target.checked) {\r\n    //     this.checkSingleArray.push(e.target.value);\r\n    //   }\r\n    //   else {\r\n    //     this.checkSingleArray = [];\r\n    //   }\r\n    //   // console.log(this.checkSingleArray)\r\n    // }\r\n    \r\n    // getSingleCheckedId(campId){\r\n    //   this.campaignId = campId;\r\n    // }\r\n    \r\n    // onChekMultiple($event){\r\n    //   const isChecked = $event.target.checked;\r\n    //   if (isChecked) {\r\n    //     this.selectedCampIds = this.campList.map(item => item._id);\r\n    //     console.log(this.selectedCampIds)\r\n    //   } else {\r\n    //     this.selectedCampIds = [];\r\n    //   }\r\n    //   this.checkSelect = isChecked; // Update the checkbox state in the header\r\n\r\n    //   let id = $event.target.value;\r\n    //   this.isChecked = $event.target.checked;\r\n    //   this.upiCheckedId = this.campList.map((item) => {\r\n    //     if (id == -1) {\r\n    //       if (this.isChecked == true) {\r\n    //         this.checkSelectsingle = true;\r\n    //         return item._id;\r\n    //       }\r\n    //       else {\r\n    //         this.checkSelectsingle = false;\r\n    //         this.upiCheckedId = [];\r\n    //       }\r\n    //     }\r\n    //   })\r\n    // }\r\n    \r\n    // getUPIcheckId(campId){\r\n    //   this.campaignId = campId;\r\n    // }  \r\n\r\n    // showDeleteButton(): boolean {\r\n    //   return this.selectedCampIds.length > 0;\r\n    // }\r\n  \r\n    deletMultipleCampaigns(){\r\n      console.log(this.campList)\r\n      this.campService.deleteCampaigns({ \"deleteArray\": this.productId }, this.currentUser.id).then((res:any)=>{\r\n        this.getAllCampaigns() \r\n        this.toastService.openSnackBar(\"Campaigns deleted successfully!!!\");\r\n        this.checkSelect=false;\r\n        this.archiveIconfalse = false;\r\n        this.allSelect = false;\r\n        this.checkSelectsinglefalse = false;\r\n        this.isChecked=false;\r\n        this.upiCheckedId = [];\r\n        this.checkSingleArray = [];\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      })\r\n    }\r\n  \r\n    toggleActiveState(isActive: boolean, campaignId) {\r\n      this.isActive = !isActive;\r\n      const selectedCampaign = this.campList.find(campaign => campaign._id === campaignId);\r\n      const requestData = {\r\n        \"userId\": this.currentUser.id,\r\n        \"campaignsData\": {\r\n            \"name\" : selectedCampaign.name,\r\n            \"isActive\": this.isActive,\r\n            \"description\": selectedCampaign.description,\r\n            \"sendDate\": selectedCampaign.sendDate,\r\n            \"email\": selectedCampaign.email,\r\n            \"sms\": selectedCampaign.sms,\r\n            \"notification\": selectedCampaign.notification,\r\n            \"whatsapp\": selectedCampaign.whatsapp,\r\n          },\r\n          \"campaignsUsers\": [ ],\r\n          // \"campaignsUsers\": [ {...selectedCampaign.campaignusers} ],\r\n          \"campaignDelete\":[]\r\n        }\r\n      this.campService.updateCampaign(requestData, campaignId).then((res: any) => {\r\n        if (res.success) {\r\n          if (isActive) {\r\n             this.toastService.openSnackBar(\"Campaign status changed to active\")\r\n            this.getAllCampaigns()\r\n          } else {\r\n             this.toastService.openSnackBar(\"Campaign status changed to inactive\")\r\n            this.getAllCampaigns()\r\n          }\r\n        }\r\n      })\r\n    }\r\n    CloneCampaign(campaignId){\r\n      const dialogRef = this.dialog.open(CloneCammpaigncomponnetComponent, {\r\n        width: '700px',\r\n        height: '100vh',\r\n        data: { campaignId: campaignId },\r\n        panelClass: 'custom-dialog-clone-class',\r\n        disableClose: true,\r\n        position: {\r\n          right: '0',\r\n        },\r\n  \r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n  \r\n      });\r\n\r\n    }\r\n\r\n    editCampaign(campaignId){\r\n      const dialogRef = this.dialog.open(UpdateCampaignComponent, {\r\n        width: '700px',\r\n        height: '100vh',\r\n        data: { campaignId: campaignId },\r\n        panelClass: 'custom-dialog-editcampaign-class',\r\n        disableClose: true,\r\n        position: {\r\n          right: '0',\r\n        },\r\n  \r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n  \r\n      });\r\n\r\n    }\r\n    viewCampaign(campaignId){\r\n      const dialogRef = this.dialog.open(ViewCampaignComponentComponent, {\r\n        width: '35%',\r\n        height: 'auto',\r\n        data: { campaignId: campaignId },\r\n        panelClass: 'custom-dialog-editcampaign-class',\r\n        disableClose: true,\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n  \r\n      });\r\n\r\n    }\r\n\r\n    getUPIcheckId(e, productId) {\r\n      this.productId = productId;\r\n      console.log(\"this.productId\",this.productId)\r\n    }\r\n  \r\n    getSingleCheckedId(e, productId) {\r\n      this.productId = productId;\r\n  \r\n    }\r\n\r\n    onChekedsingleCheckfalse(e, id) {\r\n      console.log(\"checked\", e.target.checked)\r\n  \r\n      if (e.target.checked == true) {\r\n        this.archiveIconfalse = true;\r\n        this.checkSingleArray.push(e.target.value);\r\n        console.log(\"checkSingleArray\",this.checkSingleArray)\r\n  \r\n      }\r\n      else {\r\n        if (this.upiCheckedId.length > this.checkSingleArray.length) {\r\n  \r\n          var index1 = this.upiCheckedId.indexOf(id);\r\n          console.log(index1)\r\n          this.upiCheckedId.splice(index1, 1);\r\n          console.log(\"after single click upiCheckedId\", this.upiCheckedId)\r\n  \r\n          if (this.upiCheckedId.length > 0) {\r\n            this.archiveIconfalse = true;\r\n            this.checkSelect = false;\r\n            this.isChecked=false;\r\n          }\r\n          else {\r\n            this.archiveIconfalse = false;\r\n            this.upiCheckedId = [];\r\n          }\r\n  \r\n        }\r\n        else {\r\n          var index = this.checkSingleArray.indexOf(id);\r\n          console.log(index)\r\n          this.checkSingleArray.splice(index, 1);\r\n          console.log(\"this.checkSingleArray\", this.checkSingleArray)\r\n  \r\n          if (this.checkSingleArray.length > 0) {\r\n            this.archiveIconfalse = true;\r\n          }\r\n          else {\r\n            this.archiveIconfalse = false;\r\n            this.checkSingleArray = [];\r\n          }\r\n  \r\n        }\r\n      }\r\n    }\r\n  \r\n    onChekMultiple($event) {\r\n      let id = $event.target.value;\r\n      this.isChecked = $event.target.checked;\r\n      console.log(\"this.isChecked\", this.isChecked)\r\n      this.upiCheckedId1 = this.campList.map((item) => {\r\n        if (id == -1) {\r\n          if (this.isChecked == true) {\r\n            this.archiveIconfalse = true;\r\n            this.checkSelectsinglefalse = true;\r\n            return item;\r\n          }\r\n          else {\r\n            this.archiveIconfalse = false;\r\n            this.checkSelectsinglefalse = false;\r\n            this.upiCheckedId = [];\r\n            this.upiCheckedId1=[];\r\n          }\r\n        }\r\n      })\r\n      console.log(\"multiple click\", this.upiCheckedId1)\r\n      for (var i = 0; i < this.upiCheckedId1.length; i++) {\r\n          this.upiCheckedId.push(this.upiCheckedId1[i]._id);\r\n      }\r\n      console.log(\"multiple click\", this.upiCheckedId)\r\n  \r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-campaign-router-component',\r\n  templateUrl: './campaign-router-component.component.html',\r\n  styleUrls: ['./campaign-router-component.component.scss']\r\n})\r\nexport class CampaignRouterComponentComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  isLinkActive(route: string): boolean {\r\n    return this.router.isActive(route, true);\r\n  }\r\n}\r\n","<div class=\"component-container container-fluid p-4 bg-white\">\r\n    <div id=\"navPanel\" class=\"row\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row page-nav-link mt-3\">\r\n          <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./active-page\" routerLinkActive=\"active\">Active</a>\r\n          </div>\r\n   \r\n          <div class=\"col-xxl-2 col-xl-2 col-lg-3 col-md-4 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./ended-page\" routerLinkActive=\"active\">Ended</a>\r\n          </div>\r\n          <div class=\"col-lg-5\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"mt-1\">\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CampaignRouterComponentComponent } from './campaign-router-component/campaign-router-component.component';\r\nimport { ActivePageComponent } from './active-page/active-page.component';\r\nimport { DraftPageComponent } from './draft-page/draft-page.component';\r\nimport { EndedPageComponent } from './ended-page/ended-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CampaignRouterComponentComponent,\r\n    children: [\r\n      {\r\n        path: '', \r\n        redirectTo: 'active-page',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: \"active-page\",\r\n        component: ActivePageComponent,\r\n      },\r\n      {\r\n        path: \"draft-page\",\r\n        component: DraftPageComponent,\r\n      },\r\n      {\r\n        path: \"ended-page\",\r\n        component: EndedPageComponent,\r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CampaignRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CampaignRoutingModule } from './campaign-routing.module';\r\nimport { CampaignRouterComponentComponent } from './campaign-router-component/campaign-router-component.component';\r\nimport { ActivePageComponent } from './active-page/active-page.component';\r\nimport { DraftPageComponent } from './draft-page/draft-page.component';\r\nimport { EndedPageComponent } from './ended-page/ended-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { AddCampaignComponent } from './add-campaign/add-campaign.component';\r\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\r\nimport { CloneCammpaigncomponnetComponent } from './clone-cammpaigncomponnet/clone-cammpaigncomponnet.component';\r\nimport { UpdateCampaignComponent } from './update-campaign/update-campaign.component';\r\nimport { ViewCampaignComponentComponent } from './view-campaign-component/view-campaign-component.component';\r\nimport { UserListNamesComponent } from './user-list-names/user-list-names.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CampaignRouterComponentComponent,\r\n    ActivePageComponent,\r\n    DraftPageComponent,\r\n    EndedPageComponent,\r\n    AddCampaignComponent,\r\n    CloneCammpaigncomponnetComponent,\r\n    UpdateCampaignComponent,\r\n    ViewCampaignComponentComponent,\r\n    UserListNamesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CampaignRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialExampleModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,\r\n    BsDatepickerModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class CampaignModule { }\r\n","\r\n\r\n<div class=\"modal-header pt-0\">\r\n  <h1 style=\"color: #EB8B3F; font-weight: 500;\" class=\"modal-title mb-0 ms-2\">Clone Campaign</h1>\r\n\r\n  <div class=\"addProductButtons\">\r\n\r\n    <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n\r\n    <button type=\"button\" class=\"btn btn-save\" (click)=\"submitForm()\">Save</button>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"campForm\">\r\n        <div style=\"display: flex; justify-content: end;\">\r\n            <label class=\"form-label me-3\"><b style = \"font-weight: 500;\">{{ isActive ? 'Active' : 'Inactive' }}</b></label>\r\n            <button class=\"toggle-button\" (click)=\"toggleActiveState()\" [ngClass]=\"{ 'active': isActive , 'inactive': !isActive}\">\r\n                <div class=\"toggle-slider\"></div>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 mb-3\">\r\n                <label class=\"form-label\">Campaign Name <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input matInput formControlName=\"campaignName\" required placeholder=\"Campaign Name\"\r\n                [ngClass]=\"{'is-invalid': (campForm.get('campaignName').invalid && campForm.get('campaignName').touched) && submitted }\"/>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || campForm.get('campaignName').touched) && campForm.get('campaignName').errors?.required\">\r\n                        Campaign Name is required\r\n            </mat-error>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 mb-3\">\r\n                <label class=\"form-label\">Campaign Description <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <textarea matInput formControlName=\"campaignDescription\" row=\"3\" placeholder=\"Description\"\r\n                    [ngClass]=\"{'is-invalid': (campForm.get('campaignDescription').invalid && campForm.get('campaignDescription').touched) && submitted }\">\r\n                    </textarea>\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || campForm.get('campaignDescription').touched) && campForm.get('campaignDescription').errors?.required\">\r\n                    Description is required!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 mb-3\">\r\n                <label class=\"form-label\">To <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select formControlName=\"partySelection\" multiple placeholder=\"To\"\r\n                    [ngClass]=\"{'is-invalid': (campForm.get('partySelection').invalid && campForm.get('partySelection').touched) && submitted }\">\r\n                        <option (click)=\"toggleSelectAllParties()\" class=\"select-all\" [value]=\"'all'\">Select All</option>\r\n                        <mat-option *ngFor=\"let item of toList\" [value]=\"item.id\" (click)=\"togglePartySelection(item)\">\r\n                            {{ item.name }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || campForm.get('partySelection').touched) && campForm.get('partySelection').errors?.required\">\r\n                    Select whom you want to sent!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-6 col-md-6 mb-3\">\r\n                <label class=\"form-label\">Select Date <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                    <input matInput formControlName=\"selectedDate\" placeholder=\"DD MMM YYYY\" [(ngModel)]=\"todaysDate\"\r\n                        autocomplete=\"off\" [outsideClick]=\"true\" style=\"text-transform: uppercase !important\"\r\n                        id=\"As On Date\" bsDatepicker [bsConfig]=\"{\r\n                                            dateInputFormat: 'DD MMM YYYY',\r\n                                            containerClass: 'theme-dark-blue',\r\n                                            showWeekNumbers: false,\r\n                                            displayOneMonthRange: true\r\n                                        }\"\r\n                        [minDate]=\"todaysDate\" (click)=\"openDatepicker()\"\r\n                        [ngClass]=\"{'is-invalid': (campForm.get('selectedDate').invalid && campForm.get('selectedDate').touched) && submitted }\"/>\r\n                    <span>\r\n                        <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                    </span>\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || campForm.get('selectedDate').touched) && campForm.get('selectedDate').errors?.required\">\r\n                    Select Date is required!\r\n                </mat-error>\r\n            </div>\r\n\r\n            <!-- Do not remove this commented code need to customise this after some time -->\r\n            <!-- <div class=\"col-sm-12 col-lg-6 col-md-6 mb-3\">\r\n                <label class=\"form-label\">Select Time</label>\r\n                <timepicker formControlName=\"selectedTime\" #timepicker></timepicker>\r\n            </div> -->\r\n\r\n            <div class=\"col-sm-12 col-lg-6 col-md-6\">\r\n                <label class=\"form-label\">Select Time <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"time\" matInput placeholder=\"Select Time\" formControlName=\"selectedTime\" [(ngModel)]=\"currentTime\"\r\n                    [ngClass]=\"{'is-invalid': (campForm.get('selectedTime').invalid && campForm.get('selectedTime').touched) && submitted }\"\r\n                    (change)=\"onTimeChange()\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || campForm.get('selectedTime').touched) && campForm.get('selectedTime').errors?.required\">\r\n                    Select Date is required!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12 col-md-6 my-3\" style = \"padding-left: 15px;\">\r\n            <mat-checkbox formControlName=\"sendSMS\">\r\n              <span style = \"font-size: 14px !important;font-weight: 500;\">Send SMS</span></mat-checkbox>\r\n          </div>\r\n          <div class=\"col-sm-12 col-md-6 my-3\" style = \"padding-left: 15px;\">\r\n            <mat-checkbox formControlName=\"sendNotification\">\r\n              <span style = \"font-size: 14px !important;font-weight: 500;\">Send Notification</span></mat-checkbox>\r\n          </div>\r\n          <div class=\"col-sm-12 col-md-6 my-3\" style = \"padding-left: 15px;\">\r\n            <mat-checkbox formControlName=\"sendEmail\">\r\n              <span style = \"font-size: 14px !important;font-weight: 500;\">Send Email</span></mat-checkbox>\r\n          </div>\r\n          <div class=\"col-sm-12 col-md-6 my-3\" style = \"padding-left: 15px;\">\r\n            <mat-checkbox formControlName=\"sendWhatsappMsg\">\r\n              <span style = \"font-size: 14px !important;font-weight: 500;\">Send WhatsApp Message</span></mat-checkbox>\r\n          </div>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { CampaignServiceService } from 'src/app/core/services/campaign-service.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { CrmService } from 'src/app/core/services/crm.service';\r\nimport { PartyService } from 'src/app/core/services/party.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-clone-cammpaigncomponnet',\r\n  templateUrl: './clone-cammpaigncomponnet.component.html',\r\n  styleUrls: ['./clone-cammpaigncomponnet.component.scss']\r\n})\r\nexport class CloneCammpaigncomponnetComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  campForm: FormGroup;\r\n  public submitted: boolean;\r\n  partyList: any[] = [];\r\n  selectAllParties: boolean = false;\r\n  selectedParties: any[] = []; // Array to store selected parties\r\n  public todaysDate;\r\n  public today: Date;\r\n  public maxDate: Date;\r\n  minDate: Date = new Date();  // Define minDate as today's date\r\n  date = new Date();\r\n  public selectedYear: number;\r\n  public years: number[] = [];\r\n  selectedTime: { hour: number; minute: number } = { hour: 0, minute: 0 };\r\n  selectedDateTime: any;\r\n  isActive: boolean = true;\r\n  toList: any[] = [];\r\n  currentTime: string;\r\n  public campaignId: any;\r\n  intervalId: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder, private crmservice: CrmService,\r\n    public router: Router, private commonService: CommonService,\r\n    private partyService: PartyService,\r\n    public campService: CampaignServiceService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    @Inject(MAT_DIALOG_DATA) public campaignData: any,\r\n    public dialogRef: MatDialogRef<CloneCammpaigncomponnetComponent>,\r\n    private dialog: MatDialog\r\n  ) {\r\n    // this.today = new Date();\r\n    // this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 25);\r\n    // const hours = this.today.getHours().toString().padStart(2, '0');\r\n    // const minutes = this.today.getMinutes().toString().padStart(2, '0');\r\n    // this.currentTime = `${hours}:${minutes}`;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"campain Data\", this.campaignData)\r\n    this.campaignId = this.campaignData.campaignId\r\n    console.log(\"CampaignId\", this.campaignId)\r\n    this.getCampaignDataByCampaignId();\r\n\r\n    this.todaysDate = new Date();\r\n    this.minDate = new Date(this.todaysDate.getFullYear(), this.todaysDate.getMonth(), 25);\r\n    this.getAllParties();\r\n    this.campForm = this.formBuilder.group({\r\n      campaignName: [\"\", [Validators.required]],\r\n      campaignDescription: [\"\", [Validators.required]],\r\n      partySelection: [[], Validators.required],\r\n      sendEmail: [false],\r\n      sendSMS: [false],\r\n      sendNotification: [false],\r\n      sendWhatsappMsg: [false],\r\n      selectedTime: [, Validators.required],\r\n      selectedDate: [, Validators.required],\r\n    });\r\n\r\n    this.intervalId = setInterval(() => {\r\n      this.today = new Date();\r\n      //this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 25);\r\n      this.today.setSeconds(this.today.getSeconds() + 40);\r\n      const hours = this.today.getHours().toString().padStart(2, '0');\r\n      const minutes = this.today.getMinutes().toString().padStart(2, '0');\r\n      const seconds = this.today.getSeconds().toString().padStart(2, '0');\r\n      this.currentTime = `${hours}:${minutes}`;\r\n      this.onTimeChange() ;\r\n    }, 1000);\r\n  }\r\n  getCampaignDataByCampaignId() {\r\n    this.campService.getCampaignBycampId({}, this.campaignId).then((res) => {\r\n      console.log(\"capaignDATA ___\", res);\r\n      this.campForm.patchValue({\r\n        campaignName: res.data[0].name,\r\n        campaignDescription: res.data[0].description\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  onTimeChange() {\r\n    const selectedTime = this.campForm.get('selectedTime').value;\r\n    if (selectedTime) {\r\n        const [hours, minutes] = selectedTime.split(':').map(Number);\r\n        const selectedDate = new Date();\r\n        selectedDate.setHours(hours);\r\n        selectedDate.setMinutes(minutes);\r\n        const currentTime = new Date();\r\n\r\n        if (selectedDate <= currentTime) {\r\n            // The selected time is not at least 3 minutes in the future.\r\n            // Keep the previous valid time (this.currentTime).\r\n            this.campForm.get('selectedTime').setValue(this.currentTime);\r\n        } else {\r\n            // Update the currentTime when a valid time is selected.\r\n            this.currentTime = selectedTime;\r\n        }\r\n    }\r\n}\r\n\r\n  ngOnDestroy(): void {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n\r\n  async getAllParties() {\r\n    try {\r\n      const partyResponse = await this.partyService.getAllPartiesDetails({}, this.currentUser.id, 1000, 1);\r\n      if (partyResponse.success) {\r\n        this.partyList = partyResponse.data.pageData.map((party) => ({\r\n          id: party.id,\r\n          email: party.email,\r\n          mobile: party.mobile,\r\n          name: party.partyName,\r\n        }));\r\n      }\r\n    } catch (partyError) {\r\n      if (partyError.error.status == 404) {\r\n        this.partyList = [];\r\n      }\r\n    }\r\n\r\n    try {\r\n      const leadResponse = await this.crmservice.getAllLeadList({}, this.currentUser.id, 1000, 1);\r\n      if (leadResponse.success) {\r\n        const leadList = leadResponse.data.pageData.map((lead) => ({\r\n          id: lead.id.toString(),\r\n          email: lead.email,\r\n          mobile: lead.mobile,\r\n          name: lead.name,\r\n        }));\r\n        // Assuming this.partyList was populated with party data previously.\r\n        this.toList = [...this.partyList, ...leadList];\r\n      }\r\n    } catch (leadError) {\r\n      // Handle error for lead data fetch.\r\n    }\r\n  }\r\n\r\n  toggleSelectAllParties() {\r\n    this.selectAllParties = !this.selectAllParties;\r\n\r\n    if (this.selectAllParties) {\r\n      this.selectedParties = [...this.toList];\r\n    } else {\r\n      this.selectedParties = [];\r\n    }\r\n    this.updatePartySelection();\r\n  }\r\n\r\n  togglePartySelection(party) {\r\n    const index = this.selectedParties.findIndex(selectedParty => selectedParty.id === party.id);\r\n\r\n    if (index === -1) {\r\n      this.selectedParties.push(party);\r\n    } else {\r\n      this.selectedParties.splice(index, 1);\r\n    }\r\n    this.updatePartySelection();\r\n  }\r\n\r\n  updatePartySelection() {\r\n    this.campForm.get(\"partySelection\").setValue(this.selectedParties.map(party => party.id));\r\n  }\r\n\r\n  updateSelectedDateTime() {\r\n    if (this.todaysDate && this.campForm.get('selectedTime').value) {\r\n      const timeParts = this.campForm.get('selectedTime').value.split(':');\r\n      const selectedDate = new Date(this.todaysDate);\r\n      selectedDate.setHours(parseInt(timeParts[0], 10));\r\n      selectedDate.setMinutes(parseInt(timeParts[1], 10));\r\n      // Convert to UTC\r\n      console.log(selectedDate);\r\n      // const utcTimestamp = selectedDate.getTime() - selectedDate.getTimezoneOffset() * 60000;\r\n      // this.selectedDateTime = new Date(utcTimestamp).toISOString();\r\n      // const utcTimestamp = selectedDate.getTime() - selectedDate.getTimezoneOffset() * 60000;\r\n      this.selectedDateTime = new Date(selectedDate).toISOString();\r\n    } else {\r\n      this.selectedDateTime = null;\r\n    }\r\n    console.log(this.selectedDateTime)\r\n  }\r\n\r\n  toggleActiveState() {\r\n    this.isActive = !this.isActive;\r\n  }\r\n\r\n  submitForm() {\r\n    this.updateSelectedDateTime()\r\n    this.submitted = true;\r\n    console.log(this.campForm);\r\n    if (this.campForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      if ((this.campForm.value.sendEmail || this.campForm.value.sendSMS || this.campForm.value.sendNotification || this.campForm.value.sendWhatsappMsg) === false) {\r\n        this.toastService.openErrorSnackBar(\"Please Select at List One!!!\");\r\n        return false;\r\n      }\r\n      const formData = {\r\n        campaignsData: {\r\n          name: this.campForm.value.campaignName,\r\n          isActive: this.isActive,\r\n          description: this.campForm.value.campaignDescription,\r\n          sendDate: this.selectedDateTime,\r\n          email: this.campForm.value.sendEmail,\r\n          sms: this.campForm.value.sendSMS,\r\n          notification: this.campForm.value.sendNotification,\r\n          whatsapp: this.campForm.value.sendWhatsappMsg,\r\n          note: \"Project deadline approaching\",\r\n        },\r\n        campaignsUsers: this.selectedParties.map((item) => ({\r\n          userId: item.id,\r\n          email: item.email,\r\n          mobile: item.mobile,\r\n          name: item.name,\r\n        }))\r\n      };\r\n      console.log(formData);\r\n      this.campService\r\n        .addCampaign(formData, this.currentUser.id)\r\n        .then((res) => {\r\n          if (res.success) {\r\n            this.dialogRef.close();\r\n            this.commonService.notifyDataAdded()\r\n            this.toastService.openSnackBar(\r\n              \"You have successfully cloned the campaign\"\r\n            );\r\n          }\r\n        }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  cancel() {\r\n    this.submitted = false;\r\n    this.dialogRef.close();\r\n  }\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.campForm.get('selectedDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.campForm.get('selectedDate').setValue(new Date());\r\n    }\r\n  }\r\n}\r\n","<div class=\"row d-flex flex-center\">\r\n    <div class=\"col-md-1 col-lg-7 col-xl-7\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\" [(ngModel)]=\"searchTerm\"\r\n            (ngModelChange)=\"searchFunc()\">\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-2 col-lg-2 col-xl-2 mt-2\"\r\n        style=\"display:flex;justify-content: space-around !important;\">\r\n        <button class=\"btn ms-2 text-nowrap\" (click)=\"openCampModal()\"><i class=\"fas fa-plus\"></i> Create\r\n            Campaign</button>\r\n    </div>\r\n</div>\r\n<!-- <hr class=\"mb-1\"> -->\r\n\r\n<div class=\"table-container overflow-auto\">\r\n\r\n    <div class=\"table-div\" style=\"overflow-x: auto;\">\r\n        <table class=\"table table-responsive\">\r\n            <thead>\r\n                <tr class=\"row \">\r\n                    <th class=\"col-1 d-flex align-items-center\">\r\n                        <div class=\"container px-0\">\r\n                            <input type=\"checkbox\" class=\"form-check-input\" class=\"mt-3\"\r\n                                (change)=\"onChekMultiple($event)\" [value]=\"-1\"\r\n                                [checked]=\"selectedCampIds.length === campList.length\" [(ngModel)]=\"allSelect\" />\r\n                            <span *ngIf=\"showDeleteButton()\">\r\n                                <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                                    <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                        class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                        style=\"color : red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                        title=\"Delete\"\r\n                                        (click)=\" upiCheckedId.length > 0? getUPIcheckId(upiCheckedId):getSingleCheckedId(checkSingleArray)\">\r\n                                    </span>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                    </th>\r\n                    <th class=\"col-2 text-nowrap d-flex align-items-center\">Name</th>\r\n                    <th class=\"col-1 text-nowrap d-flex align-items-center\">Date</th>\r\n                    <th class=\"col-3 text-nowrap d-flex align-items-center\">Descriptions</th>\r\n                    <th class=\"col-1 text-nowrap d-flex align-items-center\">Active</th>\r\n                    <th class=\"col-2 text-nowrap d-flex align-items-center\"></th>\r\n                    <th class=\"col-2 text-nowrap d-flex align-items-center\"></th>\r\n                </tr>\r\n                <!-- <hr style=\"margin-top: 0px; margin-bottom: 0px;\"> -->\r\n            </thead>\r\n            <tbody>\r\n                <tr class=\"row\" *ngFor=\"let item of campList;let i = index\">\r\n                    <td class=\"col-1 d-flex align-items-center\">\r\n                        <input class=\"form-check-input mt-3\" type=\"checkbox\"\r\n                            [checked]=\"selectedCampIds.includes(item._id)\"\r\n                            (change)=\"onChekedsingleCheck($event, item._id)\" [value]=\"item._id\" />\r\n                    </td>\r\n                    <td class=\"col-2 d-flex align-items-center\">{{ item.name }}</td>\r\n                    <td class=\"col-1 d-flex align-items-center\">{{item.sendDate | date:\"dd MMM YYYY\"| uppercase }}</td>\r\n                    <td class=\"col-3 d-flex align-items-center\">{{ item.description }}</td>\r\n                    <td class=\"col-1 d-flex align-items-center\">\r\n                        <button class=\"toggle-button\" (click)=\"toggleActiveState(item.isActive, item._id)\"\r\n                            [ngClass]=\"{ 'active': item.isActive , 'inactive': !item.isActive}\">\r\n                            <div class=\"toggle-slider\"></div>\r\n                        </button>\r\n                    </td>\r\n                    <td class=\"col-2 d-flex align-items-center\"></td>\r\n                    <td class=\"col-2 d-flex align-items-center\">\r\n                        <!-- <button class=\"btn col-4\">\r\n                                  <span class=\"bi bi-eye icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                     data-bs-placement=\"top\" title=\"View\"></span>\r\n                              </button> -->\r\n                        <button class=\"btn\" (click)=\"editCampaign(item._id)\">\r\n                            <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n\r\n                        </button>\r\n                        <button class=\"btn ps-1\" type=\"button\" (click)=\"deleteCamp(item._id)\" data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#errorDelete-modal\">\r\n                            <span class=\"bi-trash iconFontSize\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                title=\"Delete\" style=\"color: red;\"></span>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody *ngIf=\"campList.length === 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n\r\n                        <!-- <h5 class=\"text-nowrap\">No Campaign Details Added.Please Add Campaign Details To Be Displayed\r\n                            Here.<span>\r\n                                <a class=\"nav-link\" style=\"cursor: pointer;\" (click)=\"openCampModal()\">Create New\r\n                                    Campaign</a>\r\n                            </span></h5> -->\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Campaign? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are you sure to delete this Campaign?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"deleteCampaigns()\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Multiple Delete -->\r\n<div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Campaign? </h2>\r\n                </div>\r\n                <h4 *ngIf=\"isChecked \" class=\"text-center \">Are you sure to delete all campaigns?</h4>\r\n                <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are you sure to delete all selected campaigns?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deletMultipleCampaigns()\">Continue</a>\r\n                <a *ngIf=\"!isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deletMultipleCampaigns()\">Continue</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n  import { FormGroup, FormBuilder, FormArray } from '@angular/forms';\r\n  import { Router, ActivatedRoute } from '@angular/router';\r\n  import { PartyService } from 'src/app/core/services/party.service';\r\n  import { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n  import { Workbook } from 'exceljs';\r\n  import * as fs from 'file-saver';\r\n  import { TitleCasePipe } from '@angular/common';\r\n  import { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n  \r\n  import { MatPaginator, PageEvent } from '@angular/material/paginator';\r\n  import { Subject, Subscription } from 'rxjs';\r\n  import { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\n  import { CampaignServiceService } from 'src/app/core/services/campaign-service.service';\r\n  import { CommonService } from 'src/app/core/services/common.service';\r\nimport { AddCampaignComponent } from '../add-campaign/add-campaign.component';\r\nimport { UpdateCampaignComponent } from '../update-campaign/update-campaign.component';\r\n\r\n@Component({\r\n  selector: 'app-draft-page',\r\n  templateUrl: './draft-page.component.html',\r\n  styleUrls: ['./draft-page.component.scss']\r\n})\r\nexport class DraftPageComponent implements OnInit {\r\n    public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    public p = 1;\r\n    public currentpage: any;\r\n    public totalrow: any;\r\n    public toatlPages: any;\r\n    public currentPageNo: number = 0;\r\n    public campPageSize: number = 5;\r\n    public count: number = 0;\r\n    public searchKey: string;\r\n    campList: any[] = [];\r\n    campIdList: string[] = [];\r\n    searchTerm: string = '';\r\n    public checkSingleArray: any[] = [];\r\n    public isChecked: boolean = false;\r\n    public upiCheckedId : string[] = [];\r\n    public allSelect: boolean = false;\r\n    public checkSelect: boolean = false;\r\n    public checkSelectsingle:boolean =false;\r\n    campaignId : any;\r\n    selectedCampIds: any[] = [];\r\n    isActive: boolean;\r\n    \r\n    constructor(private formBuilder: FormBuilder,\r\n      public router: Router, public dialog: MatDialog, private commonService: CommonService,\r\n      public route: ActivatedRoute, private campService : CampaignServiceService,\r\n      public toastService: ToastNotificationService,\r\n      private titleCasePipe: TitleCasePipe) { }\r\n  \r\n    ngOnInit(): void {\r\n      this.getAllCampaigns();\r\n      this.commonService.rowAdded$.subscribe(() => {\r\n        this.getAllCampaigns();\r\n       });\r\n    }\r\n  \r\n    getAllCampaigns() {\r\n      this.campService.getAllCampaigns({}, this.currentUser.id).then((res) => {\r\n        this.campList = res.data.filter(campaign => !campaign.isActive && campaign.status !== 'COMPLETE');\r\n      }, (err) => {\r\n        if (err.error.status == 404) {\r\n          this.campList = [];\r\n        }\r\n      })\r\n    }\r\n\r\n    searchFunc(){\r\n      if (this.searchTerm.trim() === '') {\r\n        this.getAllCampaigns();\r\n      } else {\r\n        // this.campService.getAllCampaigns({}, this.currentUser.id).then((res:any) => {\r\n          this.campList = this.campList.filter(item => {\r\n            return (\r\n              (item.name && item.name.toLowerCase().includes(this.searchTerm.toLowerCase())) ||\r\n              (item.description && item.description.toLowerCase().includes(this.searchTerm.toLowerCase()))\r\n            );\r\n          });\r\n        // });\r\n        if(this.campList.length === 0){\r\n          this.toastService.openErrorSnackBar(this.searchTerm + \" is not found\");\r\n        }\r\n      }\r\n    }\r\n\r\n    deleteCamp(campaignId : string){\r\n      this.campIdList.push(campaignId);\r\n    }\r\n  \r\n    deleteCampaigns() {\r\n      this.campService.deleteCampaigns({ \"deleteArray\": this.campIdList }, this.currentUser.id).then((res) => {\r\n        if(res.success){\r\n          this.getAllCampaigns()\r\n          this.toastService.openSnackBar('Campaign deleted successfully');\r\n        }\r\n      }, (err) => {\r\n        if (err.error.status == 404) {\r\n          this.campList = [];\r\n        }\r\n      })\r\n    }\r\n   \r\n    // for pagination\r\n    public handlePage(e: any) {\r\n      this.currentPageNo = e.pageIndex;\r\n      this.campPageSize = e.pageSize;\r\n      this.getAllCampaigns();\r\n    }\r\n  \r\n    handleInputChange(e){\r\n      // this.excelFileUpload= e.target.files[0];\r\n      // const pattern = /\\.(xlsx|xls)$/i; // Pattern to match \".xlsx\" or \".xls\" extension\r\n      // if (!pattern.test(this.excelFileUpload.name)) {\r\n      //   this.toastService.openErrorSnackBar(\"Invalid format. Please select an Excel file.\");\r\n      //   return;\r\n      // }\r\n      // if(this.excelFileUpload){\r\n      //   let formdata = new FormData();\r\n      //   formdata.set(\"file\", this.excelFileUpload)\r\n      //   this.partyService.postBulkParty(formdata, this.currentUser.id).then((res) => {\r\n      //     this.toastService.openSnackBar(\"Excel Uploaded Successfully\")\r\n      //     this.getAllParties();\r\n      //     // window.location.reload() \r\n      //   },(err) => {\r\n      //     if (err.error.expose) {\r\n      //       this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      //     }\r\n      //     else if(err.error.status == \"409\" && err.error.expose == false){\r\n      //       this.toastService.openErrorSnackBar(\"List Of Parties Already Exists\");\r\n      //     }\r\n      //     // else{\r\n      //     //   this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      //     // }   \r\n      //   });\r\n      // }\r\n      }\r\n  \r\n      startUpload(){\r\n        document.getElementById('uploadFile').click();\r\n      }\r\n\r\n      openCampModal(): void {\r\n        const dialogRef: MatDialogRef<AddCampaignComponent> = this.dialog.open(AddCampaignComponent, {\r\n          width: '700px', // Adjust the width as per your requirement\r\n          height : '100vh',\r\n          data: { },\r\n          panelClass: 'custom-dialog-Camp-class',\r\n          disableClose:true,\r\n          position: {\r\n            right: '0',\r\n          },\r\n        });\r\n    \r\n        dialogRef.afterClosed().subscribe((result) => {\r\n          console.log(`Dialog result: ${result}`);\r\n        });\r\n      }\r\n\r\n      onChekedsingleCheck(e, campId){\r\n        if (e.target.checked) {\r\n          this.selectedCampIds.push(campId);\r\n        } else {\r\n          const index = this.selectedCampIds.indexOf(campId);\r\n          if (index !== -1) {\r\n            this.selectedCampIds.splice(index, 1);\r\n          }\r\n        }\r\n        // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n        if (e.target.checked) {\r\n          this.checkSingleArray.push(e.target.value);\r\n        }\r\n        else {\r\n          this.checkSingleArray = [];\r\n        }\r\n        // console.log(this.checkSingleArray)\r\n      }\r\n      \r\n      getSingleCheckedId(campId){\r\n        this.campaignId = campId;\r\n      }\r\n      \r\n      onChekMultiple($event){\r\n        const isChecked = $event.target.checked;\r\n        if (isChecked) {\r\n          this.selectedCampIds = this.campList.map(item => item._id);\r\n        } else {\r\n          this.selectedCampIds = [];\r\n        }\r\n        this.checkSelect = isChecked; // Update the checkbox state in the header\r\n  \r\n        let id = $event.target.value;\r\n        this.isChecked = $event.target.checked;\r\n        this.upiCheckedId = this.campList.map((item) => {\r\n          if (id == -1) {\r\n            if (this.isChecked == true) {\r\n              this.checkSelectsingle = true;\r\n              return item._id;\r\n            }\r\n            else {\r\n              this.checkSelectsingle = false;\r\n              this.upiCheckedId = [];\r\n            }\r\n          }\r\n        })\r\n      }\r\n      \r\n      getUPIcheckId(campId){\r\n        this.campaignId = campId;\r\n      }  \r\n  \r\n      showDeleteButton(): boolean {\r\n        return this.selectedCampIds.length > 0;\r\n      }\r\n    \r\n      deletMultipleCampaigns(){\r\n        console.log(this.campList)\r\n        this.campService.deleteCampaigns({ \"deleteArray\": this.selectedCampIds }, this.currentUser.id).then((res:any)=>{\r\n          this.getAllCampaigns() \r\n          this.toastService.openSnackBar(\"Campaigns deleted successfully!!!\");\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n          this.checkSelect=false;\r\n          this.allSelect=false;\r\n          this.isChecked=false;\r\n          this.checkSingleArray= [];\r\n        }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        })\r\n      }\r\n      \r\n      toggleActiveState(isActive: boolean, campaignId) {\r\n        this.isActive = !isActive;\r\n        const selectedCampaign = this.campList.find(campaign => campaign._id === campaignId);\r\n        // const requestData = {\r\n        //   ...selectedCampaign,\r\n        //   campaignsData: {\r\n        //     ...selectedCampaign.campaignusers,\r\n        //     isActive: this.isActive\r\n        //   }\r\n        // };\r\n        const requestData = {\r\n          \"userId\": this.currentUser.id,\r\n          \"campaignsData\": {\r\n              \"name\" : selectedCampaign.name,\r\n              \"isActive\": this.isActive,\r\n              \"description\": selectedCampaign.description,\r\n              \"sendDate\": selectedCampaign.sendDate,\r\n              \"email\": selectedCampaign.email,\r\n              \"sms\": selectedCampaign.sms,\r\n              \"notification\": selectedCampaign.notification,\r\n              \"whatsapp\": selectedCampaign.whatsapp,\r\n              // \"note\": \"Project deadline approaching\"\r\n            },\r\n            \"campaignsUsers\": [ ],\r\n            \"campaignDelete\":[]\r\n          }\r\n        this.campService.updateCampaign(requestData, campaignId).then((res: any) => {\r\n          if (res.success) {\r\n            if (isActive) {\r\n              this.toastService.openSnackBar(\"Campaign status changed to active\")\r\n              this.getAllCampaigns()\r\n            } else {\r\n              this.toastService.openSnackBar(\"Campaign status changed to inactive\")\r\n              this.getAllCampaigns()\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      editCampaign(campaignId){\r\n        const dialogRef = this.dialog.open(UpdateCampaignComponent, {\r\n          width: '700px',\r\n          height: '100vh',\r\n          data: { campaignId: campaignId },\r\n          panelClass: 'custom-dialog-editcampaign-class',\r\n          disableClose: true,\r\n          position: {\r\n            right: '0',\r\n          },\r\n    \r\n        });\r\n    \r\n        dialogRef.afterClosed().subscribe(result => {\r\n    \r\n        });\r\n  \r\n      }\r\n  }","<!-- <div class=\"row d-flex flex-center\">\r\n    <div class=\"col-md-1 col-lg-7 col-xl-7\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\"\r\n      [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchFunc()\">\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-2 col-lg-2 col-xl-2 mt-2\" style = \"display:flex;justify-content: space-around !important;\">\r\n      <button class=\"btn ms-2 text-nowrap\" (click)=\"openCampModal()\"><i class=\"fas fa-plus\"></i> Create Campaign</button>\r\n    </div>\r\n  </div> -->\r\n\r\n  <div class=\"container-fluid bg-white p-0\">\r\n    <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n        <div class=\"flex-item searchBar\">\r\n          <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\"\r\n          [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchFunc()\">\r\n        </div>\r\n        <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n          <button class=\"btn text-nowrap my-2\" (click)=\"openCampModal()\"><i class=\"fas fa-plus\"></i> Create Campaign</button>\r\n        </div>\r\n    </div>\r\n\r\n  <!-- <hr class=\"mb-1\"> -->\r\n\r\n  <div class=\"table-container overflow-auto\">\r\n\r\n      <div class=\"table-div\" style=\"overflow-x: auto;\">\r\n          <table class=\"table table-responsive\">\r\n              <thead>\r\n                  <tr class=\"row \">\r\n                      <th class=\"col-1 d-flex align-items-center\">\r\n                        <div class=\"container px-0\">\r\n                            <input  type=\"checkbox\" class=\"form-check-input\" class=\"mt-3\" (change)=\"onChekMultiple($event)\"\r\n                            [value]=\"-1\" [checked]=\"selectedCampIds.length === campList.length\" [(ngModel)]=\"allSelect\"/>\r\n                            <span *ngIf=\"showDeleteButton()\" >\r\n                                <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                                    <span  *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\" style=\"color : red\"\r\n                                        data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\"\r\n                                        (click)=\" upiCheckedId.length > 0? getUPIcheckId(upiCheckedId):getSingleCheckedId(checkSingleArray)\">\r\n                                    </span>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                      </th>\r\n                      <th class=\"col-2 text-nowrap d-flex align-items-center\">Name</th>\r\n                      <th class=\"col-1 text-nowrap d-flex align-items-center\">Date</th>\r\n                      <th class=\"col-3 text-nowrap d-flex align-items-center\">Descriptions</th>\r\n                      <th class=\"col-3 text-nowrap d-flex align-items-center\"></th>\r\n                      <th class=\"col-2 text-nowrap d-flex align-items-center\"></th>\r\n                  </tr>\r\n                  <!-- <hr style=\"margin-top: 0px; margin-bottom: 0px;\"> -->\r\n              </thead>\r\n              <tbody>\r\n                  <tr class=\"row\" *ngFor=\"let item of campList;let i = index\">\r\n                          <td class=\"col-1 d-flex align-items-center\">\r\n                            <input class=\"form-check-input mt-3\" type=\"checkbox\" [checked]=\"selectedCampIds.includes(item._id)\"\r\n                            (change)=\"onChekedsingleCheck($event, item._id)\" [value]=\"item._id\" />\r\n                          </td>\r\n                          <td class=\"col-2 d-flex align-items-center\">{{ item.name }}</td>\r\n                          <td class=\"col-1 d-flex align-items-center\">{{item.sendDate | date:\"dd MMM YYYY\"| uppercase }}</td>\r\n                          <td class=\"col-3 d-flex align-items-center\">{{ item.description }}</td>\r\n                          <td class=\"col-3 d-flex align-items-center\"></td>\r\n                          <td class=\"col-2 d-flex align-items-center\">\r\n                              <!-- <button class=\"btn col-4\">\r\n                                  <span class=\"bi bi-eye icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                     data-bs-placement=\"top\" title=\"View\"></span>\r\n                              </button> -->\r\n\r\n                              <button class=\"btn ps-1\" type=\"button\" (click)=\"deleteCamp(item._id)\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                                <span class=\"bi-trash iconFontSize\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\" style=\"color: red;\"></span>\r\n                            </button>\r\n                          </td>\r\n                  </tr>\r\n              </tbody>\r\n              <tbody *ngIf=\"campList.length === 0\">\r\n                  <tr class=\"text-center\">\r\n                      <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\" alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n\r\n                          <!-- <h5 class=\"text-nowrap\">No Campaign Details Added.Please Add Campaign Details To Be Displayed Here.<span>\r\n                                  <a class=\"nav-link\" style=\"cursor: pointer;\" (click)=\"openCampModal()\">Create New Campaign</a>\r\n                              </span></h5> -->\r\n                      </td>\r\n                  </tr>\r\n              </tbody>\r\n            </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n            <div class=\"modal-content position-relative\">\r\n                <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                    <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                        aria-label=\"Close\"></a>\r\n                </div>\r\n                <div class=\"modal-body p-0\">\r\n                    <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                        <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                            Delete Campaign? </h2>\r\n                    </div>\r\n                    <h4 class=\"text-center \">Are you sure to delete this Campaign?</h4>\r\n\r\n                </div>\r\n                <div class=\"modal-footer justify-content-center\">\r\n                    <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                    <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"deleteCampaigns()\">Delete\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n      <!-- Multiple Delete -->\r\n  <div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n          <div class=\"modal-content position-relative\">\r\n              <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                  <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                      aria-label=\"Close\"></a>\r\n              </div>\r\n              <div class=\"modal-body p-0\">\r\n                  <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                      <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                          Delete Campaign? </h2>\r\n                  </div>\r\n                  <h4 *ngIf=\"isChecked \" class=\"text-center \">Are you sure to delete all campaigns?</h4>\r\n                  <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are you sure to delete all selected campaigns?</h4>\r\n\r\n              </div>\r\n              <div class=\"modal-footer justify-content-center\">\r\n                  <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                  <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"deletMultipleCampaigns()\">Continue</a>\r\n                  <a *ngIf=\"!isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"deletMultipleCampaigns()\">Continue</a>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n  import { FormGroup, FormBuilder, FormArray } from '@angular/forms';\r\n  import { Router, ActivatedRoute } from '@angular/router';\r\n  import { PartyService } from 'src/app/core/services/party.service';\r\n  import { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n  import { Workbook } from 'exceljs';\r\n  import * as fs from 'file-saver';\r\n  import { TitleCasePipe } from '@angular/common';\r\n  import { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n  \r\n  import { MatPaginator, PageEvent } from '@angular/material/paginator';\r\n  import { Subject, Subscription } from 'rxjs';\r\n  import { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\n  import { CampaignServiceService } from 'src/app/core/services/campaign-service.service';\r\n  import { CommonService } from 'src/app/core/services/common.service';\r\nimport { AddCampaignComponent } from '../add-campaign/add-campaign.component';\r\n@Component({\r\n  selector: 'app-ended-page',\r\n  templateUrl: './ended-page.component.html',\r\n  styleUrls: ['./ended-page.component.scss']\r\n})\r\nexport class EndedPageComponent implements OnInit {\r\n    public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    public p = 1;\r\n    public currentpage: any;\r\n    public totalrow: any;\r\n    public toatlPages: any;\r\n    public currentPageNo: number = 0;\r\n    public campPageSize: number = 5;\r\n    public count: number = 0;\r\n    public searchKey: string;\r\n    campList: any[] = [];\r\n    campIdList: string[] = [];\r\n    searchTerm: string = '';\r\n    public checkSingleArray: any[] = [];\r\n    public isChecked: boolean = false;\r\n    public upiCheckedId : string[] = [];\r\n    public allSelect: boolean = false;\r\n    public checkSelect: boolean = false;\r\n    public checkSelectsingle:boolean =false;\r\n    campaignId : any;\r\n    selectedCampIds: any[] = [];\r\n    \r\n    constructor(private formBuilder: FormBuilder,\r\n      public router: Router, public dialog: MatDialog, private commonService: CommonService,\r\n      public route: ActivatedRoute, private campService : CampaignServiceService,\r\n      public toastService: ToastNotificationService,\r\n      private titleCasePipe: TitleCasePipe) { }\r\n  \r\n    ngOnInit(): void {\r\n      this.getAllCampaigns();\r\n      this.commonService.rowAdded$.subscribe(() => {\r\n        this.getAllCampaigns();\r\n       });\r\n    }\r\n  \r\n    getAllCampaigns() {\r\n      this.campService.getAllCampaigns({}, this.currentUser.id).then((res) => {\r\n        this.campList = res.data.filter(campaign => campaign.status === 'COMPLETE');\r\n      }, (err) => {\r\n        if (err.error.status == 404) {\r\n          this.campList = [];\r\n        }\r\n      })\r\n    }\r\n\r\n    searchFunc(){\r\n      if (this.searchTerm.trim() === '') {\r\n        this.getAllCampaigns();\r\n      } else {\r\n        // this.campService.getAllCampaigns({}, this.currentUser.id).then((res:any) => {\r\n          this.campList = this.campList.filter(item => {\r\n            return (\r\n              (item.name && item.name.toLowerCase().includes(this.searchTerm.toLowerCase())) ||\r\n              (item.description && item.description.toLowerCase().includes(this.searchTerm.toLowerCase()))\r\n            );\r\n          });\r\n        // });\r\n        if(this.campList.length === 0){\r\n          this.toastService.openErrorSnackBar(this.searchTerm + \" is not found\");\r\n        }\r\n      }\r\n    }\r\n\r\n    deleteCamp(campaignId : string){\r\n      this.campIdList.push(campaignId);\r\n    }\r\n  \r\n    deleteCampaigns() {\r\n      this.campService.deleteCampaigns({ \"deleteArray\": this.campIdList }, this.currentUser.id).then((res) => {\r\n        if(res.success){\r\n          this.getAllCampaigns()\r\n          this.toastService.openSnackBar('Campaign deleted successfully');\r\n        }\r\n      }, (err) => {\r\n        if (err.error.status == 404) {\r\n          this.campList = [];\r\n        }\r\n      })\r\n    }\r\n   \r\n    // for pagination\r\n    public handlePage(e: any) {\r\n      this.currentPageNo = e.pageIndex;\r\n      this.campPageSize = e.pageSize;\r\n      this.getAllCampaigns();\r\n    }\r\n  \r\n    handleInputChange(e){\r\n      // this.excelFileUpload= e.target.files[0];\r\n      // const pattern = /\\.(xlsx|xls)$/i; // Pattern to match \".xlsx\" or \".xls\" extension\r\n      // if (!pattern.test(this.excelFileUpload.name)) {\r\n      //   this.toastService.openErrorSnackBar(\"Invalid format. Please select an Excel file.\");\r\n      //   return;\r\n      // }\r\n      // if(this.excelFileUpload){\r\n      //   let formdata = new FormData();\r\n      //   formdata.set(\"file\", this.excelFileUpload)\r\n      //   this.partyService.postBulkParty(formdata, this.currentUser.id).then((res) => {\r\n      //     this.toastService.openSnackBar(\"Excel Uploaded Successfully\")\r\n      //     this.getAllParties();\r\n      //     // window.location.reload() \r\n      //   },(err) => {\r\n      //     if (err.error.expose) {\r\n      //       this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      //     }\r\n      //     else if(err.error.status == \"409\" && err.error.expose == false){\r\n      //       this.toastService.openErrorSnackBar(\"List Of Parties Already Exists\");\r\n      //     }\r\n      //     // else{\r\n      //     //   this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      //     // }   \r\n      //   });\r\n      // }\r\n      }\r\n  \r\n      startUpload(){\r\n        document.getElementById('uploadFile').click();\r\n      }\r\n      \r\n      openCampModal(): void {\r\n        const dialogRef: MatDialogRef<AddCampaignComponent> = this.dialog.open(AddCampaignComponent, {\r\n          width: '700px', // Adjust the width as per your requirement\r\n          height : '100vh',\r\n          data: { },\r\n          panelClass: 'custom-dialog-Camp-class',\r\n          disableClose:true,\r\n          position: {\r\n            right: '0',\r\n          },\r\n        });\r\n    \r\n        dialogRef.afterClosed().subscribe((result) => {\r\n          console.log(`Dialog result: ${result}`);\r\n        });\r\n      }\r\n\r\n      onChekedsingleCheck(e, campId){\r\n        if (e.target.checked) {\r\n          this.selectedCampIds.push(campId);\r\n        } else {\r\n          const index = this.selectedCampIds.indexOf(campId);\r\n          if (index !== -1) {\r\n            this.selectedCampIds.splice(index, 1);\r\n          }\r\n        }\r\n        // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n        if (e.target.checked) {\r\n          this.checkSingleArray.push(e.target.value);\r\n        }\r\n        else {\r\n          this.checkSingleArray = [];\r\n        }\r\n        // console.log(this.checkSingleArray)\r\n      }\r\n      \r\n      getSingleCheckedId(campId){\r\n        this.campaignId = campId;\r\n      }\r\n      \r\n      onChekMultiple($event){\r\n        const isChecked = $event.target.checked;\r\n        if (isChecked) {\r\n          this.selectedCampIds = this.campList.map(item => item._id);\r\n        } else {\r\n          this.selectedCampIds = [];\r\n        }\r\n        this.checkSelect = isChecked; // Update the checkbox state in the header\r\n  \r\n        let id = $event.target.value;\r\n        this.isChecked = $event.target.checked;\r\n        this.upiCheckedId = this.campList.map((item) => {\r\n          if (id == -1) {\r\n            if (this.isChecked == true) {\r\n              this.checkSelectsingle = true;\r\n              return item._id;\r\n            }\r\n            else {\r\n              this.checkSelectsingle = false;\r\n              this.upiCheckedId = [];\r\n            }\r\n          }\r\n        })\r\n      }\r\n      \r\n      getUPIcheckId(campId){\r\n        this.campaignId = campId;\r\n      }  \r\n  \r\n      showDeleteButton(): boolean {\r\n        return this.selectedCampIds.length > 0;\r\n      }\r\n    \r\n      deletMultipleCampaigns(){\r\n        console.log(this.campList)\r\n        this.campService.deleteCampaigns({ \"deleteArray\": this.selectedCampIds }, this.currentUser.id).then((res:any)=>{\r\n          this.getAllCampaigns() \r\n          this.toastService.openSnackBar(\"Campaigns deleted successfully!!!\");\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n          this.checkSelect=false;\r\n          this.allSelect=false;\r\n          this.isChecked=false;\r\n          this.checkSingleArray= [];\r\n        }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        })\r\n      }\r\n  }","\r\n\r\n<div class=\"modal-header pt-0\">\r\n  <h1 style=\"color: #EB8B3F; font-weight: 500;\" class=\"modal-title mb-0 ms-2\">Update Campaign</h1>\r\n\r\n  <div class=\"addProductButtons\">\r\n\r\n    <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n\r\n    <button type=\"button\" class=\"btn btn-save\" (click)=\"submitForm()\">Save</button>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"campForm\">\r\n        <div style=\"display: flex; justify-content: end;\">\r\n            <label class=\"form-label me-3\"><b style = \"font-weight: 500;\">{{ isActive ? 'Active' : 'Inactive' }}</b></label>\r\n            <button class=\"toggle-button\" (click)=\"toggleActiveState()\" [ngClass]=\"{ 'active': isActive , 'inactive': !isActive}\">\r\n                <div class=\"toggle-slider\"></div>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 mb-3\">\r\n                <label class=\"form-label\">Campaign Name <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input matInput formControlName=\"campaignName\" required placeholder=\"Campaign Name\"\r\n                [ngClass]=\"{'is-invalid': (campForm.get('campaignName').invalid && campForm.get('campaignName').touched) && submitted }\"/>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || campForm.get('campaignName').touched) && campForm.get('campaignName').errors?.required\">\r\n                        Campaign Name is required\r\n            </mat-error>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 mb-3\">\r\n                <label class=\"form-label\">Campaign Description <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <textarea matInput formControlName=\"campaignDescription\" row=\"3\" placeholder=\"Description\"\r\n                    [ngClass]=\"{'is-invalid': (campForm.get('campaignDescription').invalid && campForm.get('campaignDescription').touched) && submitted }\">\r\n                    </textarea>\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || campForm.get('campaignDescription').touched) && campForm.get('campaignDescription').errors?.required\">\r\n                    Description is required!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 mb-3\">\r\n                <label class=\"form-label\">To <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select formControlName=\"partySelection\" multiple placeholder=\"To\"\r\n                    [ngClass]=\"{'is-invalid': (campForm.get('partySelection').invalid && campForm.get('partySelection').touched) && submitted }\">\r\n                        <option (click)=\"toggleSelectAllParties()\" class=\"select-all\" [value]=\"'all'\">Select All</option>\r\n                        <mat-option *ngFor=\"let item of toList\" [value]=\"item.id\" (click)=\"togglePartySelection(item)\">\r\n                            {{ item.name }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || campForm.get('partySelection').touched) && campForm.get('partySelection').errors?.required\">\r\n                    Select whom you want to sent!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-6 col-md-6 mb-3\">\r\n                <label class=\"form-label\">Select Date <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                    <input matInput formControlName=\"selectedDate\" placeholder=\"DD MMM YYYY\" [(ngModel)]=\"todaysDate\"\r\n                        autocomplete=\"off\" [outsideClick]=\"true\" style=\"text-transform: uppercase !important\"\r\n                        id=\"As On Date\" bsDatepicker [bsConfig]=\"{\r\n                                            dateInputFormat: 'DD MMM YYYY',\r\n                                            containerClass: 'theme-dark-blue',\r\n                                            showWeekNumbers: false,\r\n                                            displayOneMonthRange: true\r\n                                        }\"\r\n                        [minDate]=\"todaysDate\" (click)=\"openDatepicker()\"\r\n                        [ngClass]=\"{'is-invalid': (campForm.get('selectedDate').invalid && campForm.get('selectedDate').touched) && submitted }\"/>\r\n                    <span>\r\n                        <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                    </span>\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || campForm.get('selectedDate').touched) && campForm.get('selectedDate').errors?.required\">\r\n                    Select Date is required!\r\n                </mat-error>\r\n            </div>\r\n\r\n            <!-- Do not remove this commented code need to customise this after some time -->\r\n            <!-- <div class=\"col-sm-12 col-lg-6 col-md-6 mb-3\">\r\n                <label class=\"form-label\">Select Time</label>\r\n                <timepicker formControlName=\"selectedTime\" #timepicker></timepicker>\r\n            </div> -->\r\n\r\n            <div class=\"col-sm-12 col-lg-6 col-md-6\">\r\n                <label class=\"form-label\">Select Time <span class=\"error-asterisk\">*</span></label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"time\" matInput placeholder=\"Select Time\" formControlName=\"selectedTime\" [(ngModel)]=\"currentTime\"\r\n                    [ngClass]=\"{'is-invalid': (campForm.get('selectedTime').invalid && campForm.get('selectedTime').touched) && submitted }\"\r\n                    (change)=\"onTimeChange()\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || campForm.get('selectedTime').touched) && campForm.get('selectedTime').errors?.required\">\r\n                    Select Date is required!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12 col-md-6 my-3\" style = \"padding-left: 15px;\">\r\n            <mat-checkbox formControlName=\"sendSMS\">\r\n              <span style = \"font-size: 14px !important;font-weight: 500;\">Send SMS</span></mat-checkbox>\r\n          </div>\r\n          <div class=\"col-sm-12 col-md-6 my-3\" style = \"padding-left: 15px;\">\r\n            <mat-checkbox formControlName=\"sendNotification\">\r\n              <span style = \"font-size: 14px !important;font-weight: 500;\">Send Notification</span></mat-checkbox>\r\n          </div>\r\n          <div class=\"col-sm-12 col-md-6 my-3\" style = \"padding-left: 15px;\">\r\n            <mat-checkbox formControlName=\"sendEmail\">\r\n              <span style = \"font-size: 14px !important;font-weight: 500;\">Send Email</span></mat-checkbox>\r\n          </div>\r\n          <div class=\"col-sm-12 col-md-6 my-3\" style = \"padding-left: 15px;\">\r\n            <mat-checkbox formControlName=\"sendWhatsappMsg\">\r\n              <span style = \"font-size: 14px !important;font-weight: 500;\">Send WhatsApp Message</span></mat-checkbox>\r\n          </div>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { CampaignServiceService } from 'src/app/core/services/campaign-service.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { CrmService } from 'src/app/core/services/crm.service';\r\nimport { PartyService } from 'src/app/core/services/party.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-update-campaign',\r\n  templateUrl: './update-campaign.component.html',\r\n  styleUrls: ['./update-campaign.component.scss']\r\n})\r\nexport class UpdateCampaignComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  campForm: FormGroup;\r\n  public submitted: boolean;\r\n  partyList: any[] = [];\r\n  partyList1: any[] = [];\r\n  selectAllParties: boolean = false;\r\n  selectedParties: any[] = []; // Array to store selected parties\r\n  public todaysDate;\r\n  public today: Date;\r\n  public maxDate: Date;\r\n  minDate: Date = new Date();  // Define minDate as today's date\r\n  date = new Date();\r\n  public selectedYear: number;\r\n  public years: number[] = [];\r\n  selectedTime: { hour: number; minute: number } = { hour: 0, minute: 0 };\r\n  selectedDateTime: any;\r\n  isActive: boolean = true;\r\n  toList: any[] = [];\r\n  currentTime: string;\r\n  public campaignId: any;\r\n  intervalId: any;\r\n  public SelectedId:any=[]\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder, private crmservice: CrmService,\r\n    public router: Router, private commonService: CommonService,\r\n    private partyService: PartyService,\r\n    public campService: CampaignServiceService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    @Inject(MAT_DIALOG_DATA) public campaignData: any,\r\n    public dialogRef: MatDialogRef<UpdateCampaignComponent>,\r\n    private dialog: MatDialog\r\n  ) {\r\n    // this.today = new Date();\r\n    // this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 25);\r\n    // const hours = this.today.getHours().toString().padStart(2, '0');\r\n    // const minutes = this.today.getMinutes().toString().padStart(2, '0');\r\n    // this.currentTime = `${hours}:${minutes}`;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllParties();\r\n   \r\n    this.campaignId = this.campaignData.campaignId\r\n \r\n    this.getCampaignDataByCampaignId();\r\n\r\n    this.todaysDate = new Date();\r\n    this.minDate = new Date(this.todaysDate.getFullYear(), this.todaysDate.getMonth(), 25);\r\n    \r\n    this.campForm = this.formBuilder.group({\r\n      campaignName: [\"\", [Validators.required]],\r\n      campaignDescription: [\"\", [Validators.required]],\r\n      partySelection: [[], Validators.required],\r\n      sendEmail: [false],\r\n      sendSMS: [false],\r\n      sendNotification: [false],\r\n      sendWhatsappMsg: [false],\r\n      selectedTime: [, Validators.required],\r\n      selectedDate: [, Validators.required],\r\n    });\r\n\r\n    this.intervalId = setInterval(() => {\r\n      this.today = new Date();\r\n      //this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 25);\r\n      this.today.setSeconds(this.today.getSeconds() + 40);\r\n      const hours = this.today.getHours().toString().padStart(2, '0');\r\n      const minutes = this.today.getMinutes().toString().padStart(2, '0');\r\n      const seconds = this.today.getSeconds().toString().padStart(2, '0');\r\n      this.currentTime = `${hours}:${minutes}`;\r\n      this.onTimeChange() ;\r\n    }, 1000);\r\n  }\r\n\r\n  onTimeChange() {\r\n    const selectedTime = this.campForm.get('selectedTime').value;\r\n    if (selectedTime) {\r\n        const [hours, minutes] = selectedTime.split(':').map(Number);\r\n        const selectedDate = new Date();\r\n        selectedDate.setHours(hours);\r\n        selectedDate.setMinutes(minutes);\r\n        const currentTime = new Date();\r\n\r\n        if (selectedDate <= currentTime) {\r\n            // The selected time is not at least 3 minutes in the future.\r\n            // Keep the previous valid time (this.currentTime).\r\n            this.campForm.get('selectedTime').setValue(this.currentTime);\r\n        } else {\r\n            // Update the currentTime when a valid time is selected.\r\n            this.currentTime = selectedTime;\r\n        }\r\n    }\r\n}\r\n   getCampaignDataByCampaignId() {\r\n    this.campService.getCampaignBycampId({}, this.campaignId).then((res) => {\r\n\r\n      this.isActive = res.data[0].isActive;\r\n      this.partyList1 = res.data[0].campaignUsers.map((pdata) => ({\r\n        id: pdata._id,\r\n        userId: pdata.userId,\r\n        email: pdata.email,\r\n        mobile: pdata.mobile,\r\n        name: pdata.name,\r\n      }));\r\n      console.log(\"partyList1 ___\", this.partyList1);\r\n\r\n      this.campForm.patchValue({\r\n        campaignName: res.data[0].name,\r\n        campaignDescription: res.data[0].description,\r\n        partySelection : this.partyList1,\r\n        // partySelection :res.data[0].campaignUsers.map((item)=>{ return item._id})\r\n     })\r\n     console.log(\"abc\",this.campForm.value.campaignName)\r\n     console.log(\"abc\",this.campForm.value.partySelection)\r\n\r\n\r\n     this.toggleSelect();\r\n\r\n    })\r\n   }\r\n\r\n  ngOnDestroy(): void {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n\r\n  async getAllParties() {\r\n    try {\r\n      const partyResponse = await this.partyService.getAllPartiesDetails({}, this.currentUser.id, 1000, 1);\r\n      if (partyResponse.success) {\r\n        this.partyList = partyResponse.data.pageData.map((party) => ({\r\n          id: party.id,\r\n          email: party.email,\r\n          mobile: party.mobile,\r\n          name: party.partyName,\r\n        }));\r\n      }\r\n    } catch (partyError) {\r\n      if (partyError.error.status == 404) {\r\n        this.partyList = [];\r\n      }\r\n    }\r\n\r\n    try {\r\n      const leadResponse = await this.crmservice.getAllLeadList({}, this.currentUser.id, 1000, 1);\r\n      if (leadResponse.success) {\r\n        const leadList = leadResponse.data.pageData.map((lead) => ({\r\n          id: lead.id.toString(),\r\n          email: lead.email,\r\n          mobile: lead.mobile,\r\n          name: lead.name,\r\n        }));\r\n        // Assuming this.partyList was populated with party data previously.\r\n        this.toList = [...this.partyList, ...leadList];\r\n        \r\n      }\r\n    } catch (leadError) {\r\n      // Handle error for lead data fetch.\r\n    }\r\n  }\r\n\r\n  toggleSelect() {\r\n    console.log(\"1\");\r\n    this.selectAllParties = !this.selectAllParties;\r\n\r\n    if (this.selectAllParties) {\r\n      this.selectedParties = [...this.partyList1];\r\n      console.log(\"2\",this.selectedParties)\r\n    } else {\r\n      this.selectedParties = [];\r\n      console.log(\"3\",this.selectedParties)\r\n    }\r\n    this.updatePartySelection();\r\n  }\r\n  toggleSelectAllParties() {\r\n    this.selectAllParties = !this.selectAllParties;\r\n\r\n    if (this.selectAllParties) {\r\n      this.selectedParties = [...this.toList];\r\n    } else {\r\n      this.selectedParties = [];\r\n    }\r\n    this.updatePartySelection();\r\n  }\r\n\r\n  togglePartySelection(party) {\r\n    const index = this.selectedParties.findIndex(selectedParty => selectedParty.id === party.id);\r\n\r\n    if (index === -1) {\r\n      this.selectedParties.push(party);\r\n    } else {\r\n      this.selectedParties.splice(index, 1);\r\n    }\r\n    this.updatePartySelection();\r\n  }\r\n\r\n  updatePartySelection() {\r\n    console.log(\"4\",this.selectedParties)\r\n    this.campForm.get(\"partySelection\").setValue(this.selectedParties.map(party => party.id));\r\n    console.log(\"5\")\r\n  }\r\n\r\n  updateSelectedDateTime() {\r\n    if (this.todaysDate && this.campForm.get('selectedTime').value) {\r\n      const timeParts = this.campForm.get('selectedTime').value.split(':');\r\n      const selectedDate = new Date(this.todaysDate);\r\n      selectedDate.setHours(parseInt(timeParts[0], 10));\r\n      selectedDate.setMinutes(parseInt(timeParts[1], 10));\r\n      // Convert to UTC\r\n      console.log(selectedDate);\r\n      // const utcTimestamp = selectedDate.getTime() - selectedDate.getTimezoneOffset() * 60000;\r\n      // this.selectedDateTime = new Date(utcTimestamp).toISOString();\r\n      // const utcTimestamp = selectedDate.getTime() - selectedDate.getTimezoneOffset() * 60000;\r\n      this.selectedDateTime = new Date(selectedDate).toISOString();\r\n    } else {\r\n      this.selectedDateTime = null;\r\n    }\r\n    console.log(this.selectedDateTime)\r\n  }\r\n\r\n  toggleActiveState() {\r\n    this.isActive = !this.isActive;\r\n  }\r\n\r\n  submitForm() {\r\n    this.updateSelectedDateTime()\r\n    this.submitted = true;\r\n    console.log(this.campForm);\r\n    if (this.campForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      if ((this.campForm.value.sendEmail || this.campForm.value.sendSMS || this.campForm.value.sendNotification || this.campForm.value.sendWhatsappMsg) === false) {\r\n        this.toastService.openErrorSnackBar(\"Please Select at List One!!!\");\r\n        return false;\r\n      }\r\n      const formData = {\r\n        userId:this.currentUser.id,\r\n        campaignsData: {\r\n          name: this.campForm.value.campaignName,\r\n          isActive: this.isActive,\r\n          description: this.campForm.value.campaignDescription,\r\n          sendDate: this.selectedDateTime,\r\n          email: this.campForm.value.sendEmail,\r\n          sms: this.campForm.value.sendSMS,\r\n          notification: this.campForm.value.sendNotification,\r\n          whatsapp: this.campForm.value.sendWhatsappMsg,\r\n          note: \"Project deadline approaching\",\r\n        },\r\n        campaignsUsers: this.selectedParties.map((item) => ({\r\n          campaignsUserId: item.id,\r\n          userId: item.userId,\r\n          email: item.email,\r\n          mobile: item.mobile,\r\n          name: item.name,\r\n        \r\n\r\n        }))\r\n      };\r\n      console.log(formData);\r\n      this.campService.updateCampaign(formData, this.campaignId).then((res) => {\r\n          if (res.success) {\r\n            this.dialogRef.close();\r\n            this.commonService.notifyDataAdded()\r\n            this.toastService.openSnackBar(\r\n              \"You have successfully update the campaign\"\r\n            );\r\n          }\r\n        }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  cancel() {\r\n    this.submitted = false;\r\n    this.dialogRef.close();\r\n  }\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.campForm.get('selectedDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.campForm.get('selectedDate').setValue(new Date());\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <div class=\"addProductButtons\" >\r\n        <button  style=\"margin-right: 10px !important;\"  type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n        <div style=\"clear: both;\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <div>\r\n            <h2 class=\"text-black fw-bold\">Users</h2>\r\n            <h3 *ngFor=\"let item of campaignUsers\" style =\"color:#28B5E1 !important\">{{item}}</h3>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-user-list-names',\r\n  templateUrl: './user-list-names.component.html',\r\n  styleUrls: ['./user-list-names.component.scss']\r\n})\r\nexport class UserListNamesComponent implements OnInit {\r\n  public campaignUsers=[]\r\n\r\n  constructor(public dialogRef: MatDialogRef<UserListNamesComponent>, @Inject(MAT_DIALOG_DATA) public campaignData: any, ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.campaignUsers =this.campaignData.campaignUser;\r\n    console.log(\"campaignUsers\",this.campaignUsers);\r\n  }\r\n  cancel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { ExpenseAddComponent } from '../../expense/expense-add.component';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { CampaignServiceService } from 'src/app/core/services/campaign-service.service';\r\nimport { UserListNamesComponent } from '../user-list-names/user-list-names.component';\r\n\r\n@Component({\r\n  selector: 'app-view-campaign-component',\r\n  templateUrl: './view-campaign-component.component.html',\r\n  styleUrls: ['./view-campaign-component.component.scss']\r\n})\r\nexport class ViewCampaignComponentComponent implements OnInit {\r\n  public campaignId: any;\r\n  public campaignName:any=\"\";\r\n  public campaignDescription:any=\"\";\r\n  public sms:boolean=false;\r\n  public email:boolean=false;\r\n  public notification:boolean=false;\r\n  public whatsApp:boolean=false;\r\n  public campaignDate:any;\r\n  public campaignUsers:any=[]\r\n\r\n  constructor(public dialogRef: MatDialogRef<ViewCampaignComponentComponent>,  public campService: CampaignServiceService, @Inject(MAT_DIALOG_DATA) public campaignData: any,\r\n  public dialog: MatDialog, ) { }\r\n\r\n  ngOnInit(): void {    \r\n    this.campaignId = this.campaignData.campaignId\r\n    this.getCampaignDataByCampaignId();\r\n  }\r\n  cancel(){\r\n    this.dialogRef.close();\r\n  }\r\n  getCampaignDataByCampaignId() {\r\n    this.campService.getCampaignBycampId({}, this.campaignId).then((res) => {\r\n      console.log(\"camapaign View Data\",res)\r\n      this.campaignName= res.data[0].name;\r\n      this.campaignDescription= res.data[0].description;\r\n      this.sms=res.data[0].sms\r\n      this.email=res.data[0].email\r\n      this.notification=res.data[0].notification\r\n      this.whatsApp=res.data[0].whatsapp\r\n      this.campaignDate=res.data[0].createdAt\r\n      res.data[0].campaignUsers.map((item)=>{\r\n        this.campaignUsers.push(item.name)\r\n      \r\n      })\r\n      console.log(this.campaignUsers)\r\n    \r\n     })\r\n   \r\n    }\r\n\r\n\r\n    viewUserListCampaign(campaignUser){\r\n      const dialogRef = this.dialog.open(UserListNamesComponent, {\r\n        width: '25%',\r\n        height: 'auto',\r\n        data: { campaignUser: campaignUser },\r\n        panelClass: 'custom-dialog-editcampaign-class',\r\n        disableClose: true,\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n  \r\n      });\r\n\r\n    }\r\n\r\n  \r\n   \r\n\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n\r\n    <div class=\"addProductButtons\">\r\n      <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n        (click)=\"cancel()\">Cancel</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n      <div class=\"row justify-content-center\"> <!-- Add justify-content-center class -->\r\n        <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n          <img src=\"../../../../assets/images/CampaignImg.png\" class=\"mx-auto d-block\" height=\"150\" style=\"width:100% !important\"> <!-- Add mx-auto and d-block classes -->\r\n          <h2 class=\"fw-bold text-center mt-2\">{{campaignName}}</h2>\r\n          <p>{{campaignDescription}}</p>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <div class=\"row px-2 mb-3\">\r\n        <div class=\"col-md-6 col-sm-12 col-lg-6 col-xl-6 p-2\">\r\n                <div  class=\"card\"[ngStyle]=\"{'background-color': email ? 'green' : 'red'}\">\r\n                    <div>\r\n                       <span><i class=\"bi bi-layers text-white\" style= \"color:white!important;margin-top: 2px!important;margin-left: 31px!important;\"></i> </span>\r\n                        <span class=\"text-white\"> Email</span>\r\n                        <p class=\"text-white\" style=\"margin-top: 2px!important;margin-left: 38px!important;\">{{ email ? 'DONE' : 'FAILED' }}</p>\r\n                    </div>\r\n                </div>           \r\n        </div>\r\n        <div class=\"col-md-6 col-sm-12 col-lg-6 col-xl-6 p-2\">\r\n            <div class=\"card\" [ngStyle]=\"{'background-color': sms ? 'green' : 'red'}\">\r\n                <div>\r\n                    <span><i class=\"bi bi-layers text-white\" style= \"color:white!important;margin-top: 2px!important;margin-left: 31px!important;\"></i> </span>\r\n                    <span class=\"text-white\"> SMS</span>\r\n                    <p class=\"m-2 text-white\"  style=\"margin-top: 2px!important;margin-left: 38px!important;\">{{ sms ? 'DONE' : 'FAILED' }}</p>\r\n                </div>\r\n           </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row px-2 mb-3 \">\r\n        <div class=\"col-md-6 col-sm-12 col-lg-6 col-xl-6 p-2\">\r\n            <div class=\"card\" [ngStyle]=\"{'background-color': notification ? 'green' : 'red'}\">\r\n                <div>\r\n                    <span><i class=\"bi bi-layers text-white\" style= \"color:white!important;margin-top: 2px!important;margin-left: 31px!important;\"></i> </span>\r\n                     <span class=\"text-white\"> Notification</span>\r\n                    <p class=\"m-2 text-white\"  style=\"margin-top: 2px!important;margin-left: 38px!important;\">{{ notification ? 'DONE' : 'FAILED' }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-12 col-lg-6 col-xl-6 p-2\">\r\n            <div class=\"card\" [ngStyle]=\"{'background-color': whatsApp ? 'green' : 'red'}\">\r\n                <div>\r\n                    <span><i class=\"bi bi-layers text-white\" style= \"color:white!important;margin-top: 2px!important;margin-left: 31px!important;\"></i> </span>\r\n                     <span class=\"text-white\"> Whats Up</span>\r\n                    <p class=\"m-2 text-white\"  style=\"margin-top: 2px!important;margin-left: 38px!important;\">{{ whatsApp ? 'DONE' : 'FAILED' }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mt-2\">       \r\n        <div class=\"col-md-6 col-sm-12 col-lg-6 col-xl-6\">\r\n            <span style=\"float: left !important;\">\r\n                <img (click)=\"viewUserListCampaign(campaignUsers)\" src=\"../../../../assets/images/CampaignImg.png\" class=\"mx-auto d-block rounded-circle image-with-border\" height=\"30\" width=\"30\"> \r\n            </span> \r\n            <span style=\"float: left !important; position: relative; margin-left: -10px;\">\r\n                <img (click)=\"viewUserListCampaign(campaignUsers)\" src=\"../../../../assets/images/CampaignImg.png\" class=\"mx-auto d-block rounded-circle image-with-border\" height=\"30\" width=\"30\"> \r\n            </span>\r\n            <span style=\"float: left !important; position: relative; margin-left: -10px;\">\r\n                <img (click)=\"viewUserListCampaign(campaignUsers)\" src=\"../../../../assets/images/CampaignImg.png\" class=\"mx-auto d-block rounded-circle image-with-border\" height=\"30\" width=\"30\"> \r\n            </span>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-12 col-lg-6 col-xl-6\">     \r\n            <span class=\"text-right mt-2\" style=\"float: right !important;\"> \r\n                <i style=\"color:#FC7643!important\" class=\"bi bi-check2-circle m-2\"></i> \r\n                {{campaignDate| date:\"dd MMM YYYY\"| uppercase}}\r\n            </span>\r\n            <span class=\"text-right mt-2\" style=\"float: right !important;\" (click)=\"viewUserListCampaign(campaignUsers)\">\r\n                <i style=\"color:#FC7643!important\" class=\"bi bi-paperclip m-2\"></i> \r\n                {{campaignUsers.length}}\r\n            </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"]}