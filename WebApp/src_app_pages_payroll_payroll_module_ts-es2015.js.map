{"version":3,"file":"src_app_pages_payroll_payroll_module_ts-es2015.js","mappings":"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","sources":["./src/app/core/services/saalry-release-service.service.ts","./src/app/pages/payroll/assign-payroll/assign-payroll.component.ts","./src/app/pages/payroll/assign-payroll/assign-payroll.component.html","./src/app/pages/payroll/create-structure/create-structure.component.ts","./src/app/pages/payroll/create-structure/create-structure.component.html","./src/app/pages/payroll/edit-payroll/edit-payroll.component.ts","./src/app/pages/payroll/edit-payroll/edit-payroll.component.html","./src/app/pages/payroll/payroll-list/payroll-list.component.ts","./src/app/pages/payroll/payroll-list/payroll-list.component.html","./src/app/pages/payroll/payroll-routing.module.ts","./src/app/pages/payroll/payroll.module.ts","./src/app/pages/payroll/saalry-release-list/saalry-release-list.component.ts","./src/app/pages/payroll/saalry-release-list/saalry-release-list.component.html","./src/app/pages/payroll/saalry-release-view/saalry-release-view.component.ts","./src/app/pages/payroll/saalry-release-view/saalry-release-view.component.html","./src/app/pages/payroll/setup-payroll/setup-payroll.component.ts","./src/app/pages/payroll/setup-payroll/setup-payroll.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaalryReleaseServiceService {\r\n  private partyAddedSource = new Subject<void>();\r\n  partyAdded$ = this.partyAddedSource.asObservable();\r\n  notifyPartyAdded() {\r\n    this.partyAddedSource.next();\r\n  }\r\n\r\n\r\n\r\n  constructor(public httpClient: HttpService) { }\r\n  getAllSalaryData(data: {},userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getAllSalary +userId, 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  AddEarnigData(data: {},userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getAllSalary +userId, 'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  getAllSalaryDataByEmployeeId(data: {},employeeId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getSalaryByEmpoyeeId +employeeId, 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  PostEarningDeduct(data: {},userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.AddEarningSalary +userId, 'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  } \r\n}\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-assign-payroll',\r\n  templateUrl: './assign-payroll.component.html',\r\n  styleUrls: ['./assign-payroll.component.scss'],\r\n})\r\nexport class AssignPayrollComponent implements OnInit {\r\n\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  public structureName: any[] = [];\r\n  public submitted: boolean = false;\r\n  public todaysDate: any;\r\n  public empId: any = [];\r\n  public structureId: any;\r\n  public PayrollList: any = []\r\n  public payrollData: any = []\r\n  selectedStructureId: number | undefined;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AssignPayrollComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public employeeData: any,\r\n    private payrollService: PayrollService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private rolesPermissionsService: RolesPermissionsService,\r\n    private roleService: RolesPermissionsService,\r\n    private commonService: CommonService,) {\r\n    this.todaysDate = new Date();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"--------\", this.employeeData);\r\n\r\n\r\n    this.empId = this.employeeData.structureId;\r\n    console.log(\"EMP IDDDD\", this.empId)\r\n    this.PayrollList = this.employeeData.payrollList;\r\n    console.log(\"Payroll List\", this.PayrollList)\r\n\r\n    // this.PayrollList.forEach((item) => {\r\n    //   this.payrollData.push({\r\n    //     \"id\":item.employeePayroll.id,\r\n    //     \"hra\":item.employeePayroll.hra,\r\n    //     \"basic\": item.employeePayroll.basic,\r\n    //     \"specialAllowance\": \"0\",\r\n    //     \"pf\": item.employeePayroll.employeeContribution,\r\n    //     \"userId\": item.id\r\n\r\n    //   })\r\n    // })\r\n    console.log(\"payroll Dta--\", this.payrollData)\r\n    this.getStructureDetails();\r\n    this.getProfileData();\r\n  }\r\n  getProfileData() {\r\n    for (var i = 0; i < this.empId.length; i++) {\r\n      console.log(\"empppppp III\", this.empId[i])\r\n      this.roleService.getEmployeeById({}, this.empId[i]).then((res: any) => {\r\n        console.log(\"Payroll employee by id ++++++++\", res)\r\n        this.PayrollList = res.data;\r\n        this.selectedStructureId=this.PayrollList.employee.employeeStructure.id\r\n        this.payrollData.push({\r\n          \"id\": this.PayrollList.employeePayroll.id,\r\n          \"hra\": this.PayrollList.employeePayroll.hra,\r\n          \"basic\": this.PayrollList.employeePayroll.basic,\r\n          \"specialAllowance\": \"0\",\r\n          \"pf\": this.PayrollList.employeePayroll.employeeContribution,\r\n          \"userId\": this.PayrollList.id\r\n\r\n        })\r\n\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n          // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n          // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      }\r\n\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  // To get all the structures.\r\n  getStructureDetails(): void {\r\n    this.payrollService.getAllStructures({}, this.currentUser.id).then((res) => {\r\n      console.log(\"Structures\", res);\r\n      this.structureName = res.data.rows;\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  // To save the assign structure form\r\n  postAssignStructureForm() {\r\n    this.submitted = true;\r\n    if (this.structureId === undefined || this.structureId === null) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    } else {\r\n      let body = {\r\n        \"structureId\": this.structureId,\r\n        \"empId\": this.empId,\r\n      }\r\n\r\n      let bodypayrollPut = this.payrollData;\r\n\r\n      this.payrollService.assignStructure(body).then((res) => {\r\n        console.log(res);\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Payroll Assigned Successfully!!!\",\r\n          });\r\n        // this.toastService.openSnackBar(\"Payroll Assigned Successfully!!!\");\r\n        this.commonService.notifyDataAdded();\r\n        this.submitted = false;\r\n        this.dialogRef.close();\r\n      },\r\n        (err) => {\r\n\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n            // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n            // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n\r\n        })\r\n\r\n      this.payrollService.retailerPayrollPut(bodypayrollPut, this.currentUser.id).then((res) => {\r\n        console.log(res);\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Payroll Data Updated Successfully!!!\",\r\n          });\r\n        // this.toastService.openSnackBar(\"Payroll Data Updated  Successfully!!!\");\r\n        this.commonService.notifyDataAdded();\r\n        this.submitted = false;\r\n        this.dialogRef.close();\r\n      },\r\n        (err) => {\r\n\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n            // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n            // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Select Structure\r\n  selectStructure(strId: number) {\r\n    this.structureId = strId;\r\n    console.log(\"Select Structure\", this.structureId);\r\n  }\r\n\r\n  // To close the dialog.\r\n  clearAssignPayrollForm() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.todaysDate\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.todaysDate = new Date()\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n\r\n  <h1 class=\"modal-title\">Assign Salary Structure</h1>\r\n\r\n  <div class=\"payrollButtons\">\r\n\r\n      <button type=\"button\" class=\"btn btn-cancel\" style=\"margin-right: 10px !important;\"\r\n          (click) = \"clearAssignPayrollForm()\">Cancel</button>\r\n      <button type=\"button\" class=\"btn btn-save\" (click)=\"postAssignStructureForm()\">Save</button>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n\r\n  <form>\r\n\r\n    <div class=\"row my-3\">\r\n\r\n      <div class = \"flexAssignPayroll\">\r\n        <label class=\"form-label flex-item\">Date</label>\r\n        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width flex-item\" appearance=\"outline\">\r\n          <input matInput required ngModel bsDatepicker placeholder=\"Date\" [ngModelOptions]=\"{ standalone: true }\"\r\n            style=\"text-transform:uppercase!important;\" [(ngModel)]=\"todaysDate\" id=\"datePicker\" bsDatepicker (click)=\"openDatepicker()\"\r\n            [bsConfig]=\"{ containerClass: 'theme-dark-blue',dateInputFormat: 'DD MMM YYYY',showWeekNumbers:false }\">\r\n          <span>\r\n            <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n          </span>\r\n        </mat-form-field>\r\n        <mat-error class=\"text-danger\" *ngIf=\"(submitted || todaysDate.touched) && todaysDate.errors?.required\">\r\n          Date Is Required!\r\n        </mat-error>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 ps-1\">\r\n\r\n        <mat-radio-group name=\"structures\"  [(ngModel)]=\"selectedStructureId\" >\r\n          <mat-radio-button *ngFor=\"let structure of structureName\"\r\n          (change)=\"selectStructure(structure.id)\" [value]=\"structure.id\">\r\n            <span class = \"structureNames\" value = \"id\" >{{ structure.name }}</span>\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { NewStructureComponent } from \"../new-structure/new-structure.component\";\r\nimport { PayrollService } from \"src/app/core/services/payroll.service\";\r\nimport { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\nimport { TitleCasePipe, formatDate } from \"@angular/common\";\r\nimport { CommonService } from \"src/app/core/services/common.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport * as moment from 'moment';\r\nimport { RolesPermissionsService } from \"src/app/core/services/roles-permissions.service\";\r\n\r\n@Component({\r\n  selector: \"app-create-structure\",\r\n  templateUrl: \"./create-structure.component.html\",\r\n  styleUrls: [\"./create-structure.component.scss\"],\r\n})\r\nexport class CreateStructureComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  public CreateStructureForm: FormGroup;\r\n  public employeeList:[];\r\n  public StructureId: any;\r\n  public submitted = false;\r\n  public ctc: number = 0;\r\n  public structureName: any;\r\n  public pf: boolean = false;\r\n  public deductTax: boolean = false;\r\n  public structureIdFlag:boolean= false;\r\n  public selectedRecordId: number | null = null; // Initialize with null or a default ID\r\n  public slectedStrucureName=\"\";\r\n  public PayNumber=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31]\r\n  endDates: number[];\r\n  \r\n\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private payrollService: PayrollService,\r\n    private formBuilder: FormBuilder,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private commonservice: CommonService,\r\n    public rolesPermissionsService: RolesPermissionsService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.CreateStructureForm = this.formBuilder.group({\r\n      startDate: [\"\", [Validators.required]],\r\n      endDate: [\"\", [Validators.required]],\r\n      basic: [\"\" ,[Validators.required]],\r\n      hra: [\"\", [Validators.required]],\r\n      pf: [false],\r\n      employeeContribution: [\"\", [Validators.required]],\r\n      deductTax: [false],\r\n    });\r\n\r\n    this.getStructureDetails();\r\n    this.commonservice.rowAdded$.subscribe(() => {\r\n      this.getStructureDetails();\r\n    });\r\n\r\n    this.getUsersList();\r\n\r\n    // To make the first option available as placeholder and remove it when clicked.\r\n    document.getElementById('employeeContributionSelect').addEventListener('click', () => {\r\n      const placeholderOption = document.getElementById('employeeContributionSelect').querySelector('option[data-placeholder]')\r\n      if (placeholderOption) {\r\n        placeholderOption.remove();\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  // To get the list of all employees.\r\n  getUsersList() {\r\n    this.rolesPermissionsService.getUsers({}, this.currentUser.id,1000,1).then((res) => {\r\n      this.employeeList = res.data.pageData;\r\n      console.log(\"employee\",this.employeeList)\r\n    })\r\n  }\r\n\r\n  // To get the list of all structures.\r\n  getStructureDetails(): void {\r\n    this.payrollService.getAllStructures({}, this.currentUser.id).then(\r\n      (res) => {\r\n        console.log(\"Structures\", res);\r\n        this.StructureId = res.data.rows;\r\n        this.structureName = res.data.rows;\r\n\r\n     \r\n      },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n          // this.toastService.openErrorSnackBar(\r\n          //   this.titleCasePipe.transform(err.error.error_message)\r\n          // );\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n          // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // Select Structure\r\n  selectStructure(structureId: any) {\r\n  \r\n    console.log(\"Select Structure\", structureId);\r\n    this.payrollService.getStructureById({}, structureId).then((res) => {\r\n      this.StructureId = res.data.id;\r\n      this.selectedRecordId = this.StructureId;\r\n\r\n      console.log(\"Structure by id\", this.StructureId);\r\n      const formattedStartDate = res.data.from\r\n      const formattedEndDate = res.data.to\r\n      this.slectedStrucureName=res.data.name;\r\n \r\n      this.CreateStructureForm.patchValue({\r\n        \"startDate\": formattedStartDate,\r\n        \"endDate\": formattedEndDate,\r\n        // \"startDate\": res.data.from ? (moment(res.data.from).format(\"DD-MMM-YYYY\")) : (moment(res.data.from).format(\"DD-MMM-YYYY\")),\r\n        // \"endDate\": res.data.to ? (moment(res.data.to).format(\"DD-MMM-YYYY\")) : (moment(res.data.to).format(\"DD-MMM-YYYY\")),\r\n        \"basic\": res.data.basic,\r\n        \"hra\":res.data.hra,\r\n        \"pf\":res.data.pfStatus,\r\n        \"employeeContribution\":res.data.employeeContribution,\r\n        \"deductTax\":res.data.professionalTax,\r\n        \"structureId\":res.data.id,\r\n      });\r\n      this.updateEndDateOptions();\r\n    });\r\n    \r\n  \r\n  }\r\n\r\n  // Short-cut used in mat errors.\r\n  get f() {\r\n    return this.CreateStructureForm.controls;\r\n  }\r\n\r\n  // To save the payroll setting.\r\n  savePayrollsetting() {\r\n    this.submitted = true;\r\n    if (this.CreateStructureForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      console.log(this.CreateStructureForm);\r\n      return false;\r\n    } else {\r\n      let body = {\r\n        \"from\" : this.CreateStructureForm.controls.startDate.value,\r\n        \"to\" : this.CreateStructureForm.controls.endDate.value,\r\n        \"pfStatus\": this.CreateStructureForm.controls.pf.value,\r\n        \"employeeContribution\": this.CreateStructureForm.controls.employeeContribution.value,\r\n        \"professionalTax\": this.CreateStructureForm.controls.deductTax.value,\r\n        \"basic\":this.CreateStructureForm.controls.basic.value,\r\n        \"hra\": this.CreateStructureForm.controls.hra.value,\r\n        \"structureId\": this.StructureId,\r\n      };\r\n      console.log(body);\r\n      this.payrollService.payrollSettingSave(body, this.StructureId).then(\r\n        (res: any) => {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Payroll Setting Data Added Successfully!!!\",\r\n            });\r\n          // this.toastService.openSnackBar(\r\n          //   \"Payroll Setting Data Added Successfully!!!\"\r\n          // );\r\n          this.CreateStructureForm.reset();\r\n          this.submitted = false;\r\n        },\r\n        (err) => {\r\n          if (err.error.expose) {\r\n            // this.toastService.openErrorSnackBar(\r\n            //   this.titleCasePipe.transform(err.error.error_message)\r\n            // );\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n          } else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n            // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // To open a dialog box of new structure form.\r\n  addNewStructure(): void {\r\n    const dialogRef: MatDialogRef<NewStructureComponent> = this.dialog.open(\r\n      NewStructureComponent,\r\n      {\r\n        width: \"500px\",\r\n        height: \"730px\",\r\n        data: {},\r\n        panelClass: \"custom-dialog-new-structure\",\r\n        disableClose: true,\r\n        position: {\r\n          right: \"0\",\r\n        },\r\n      }\r\n    );\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  updateEndDateOptions() {\r\n    const selectedStartDate = this.CreateStructureForm.get('startDate').value;\r\n    this.endDates = this.PayNumber.slice(selectedStartDate - 1); // Filter options based on selected \"From\" value\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-0\">\r\n\r\n  <div class=\"row d-flex flex-center mb-3\">\r\n    <div class=\"navOption-btns my-2\">\r\n      <button class=\"btn text-nowrap mx-3\" style = \"float: right;\" type=\"button\" (click)=\"addNewStructure()\"><i\r\n        class=\"fas fa-plus me-2\"> </i>Add New\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class = \"row mt-3\">\r\n\r\n    <div class=\"col-sm-12 col-md-3 col-lg-3 col-xl-4 col-xxl-5\">\r\n\r\n      <div class = \"structureList\">\r\n\r\n        <div class=\"card cardList mt-1\"  *ngFor=\"let item of structureName\"  [ngClass]=\"{'selected-record': item.id === selectedRecordId}\">\r\n          <span class=\"structureName\" (click)=\"selectStructure(item.id)\">{{ item.name }}</span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-sm-12 col-md-9 col-lg-8 col-xl-7 col-xxl-6\" style = \"margin-bottom: 8px;\">\r\n\r\n      <div class=\"card\" style=\"width:100%;border-radius: 5px;\">\r\n\r\n        <form [formGroup]=\"CreateStructureForm\" style=\"width:100%;height:100%;\">\r\n\r\n          <hr class=\"my-0 py-0\" />\r\n\r\n          <div class=\"row my-3 px-3\">\r\n            <div class = \"col-10\" style = \"font-size: 18px;font-weight: 600;\">\r\n              Payroll Setting\r\n            </div>\r\n            <div class=\"col-2\" style=\"color:#FC7643\">{{slectedStrucureName ? slectedStrucureName :\"\"}}</div>\r\n          </div>\r\n\r\n          <hr class=\"my-0 py-0\" />\r\n\r\n          <div class=\"row my-3 px-3\">\r\n            <div class = \"col-12\">\r\n\r\n              <div class = \"row my-2\">\r\n\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Pay Cycle <span class=\"error-asterisk\">*</span></span>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-sm-6 col-md-3 px-1\">\r\n                  <div style = \"padding-left: 5px;\">From</div>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-select matNativeControl disableOptionCentering  formControlName=\"startDate\" placeholder=\"From\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\"\r\n                      (selectionChange)=\"updateEndDateOptions()\">\r\n                          <mat-option [value]=\"item\" *ngFor=\"let item of PayNumber\">{{item}}\r\n                          </mat-option>\r\n                      </mat-select>\r\n                  </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.startDate.touched) && f.startDate.errors?.required\">\r\n                      Start day is required!\r\n                    </mat-error>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6 col-md-3 px-1\">\r\n                  <div style = \"padding-left: 5px;\">To</div>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-select matNativeControl disableOptionCentering  formControlName=\"endDate\" placeholder=\"To\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\">\r\n                          <mat-option [value]=\"item\" *ngFor=\"let item of endDates\">{{item}}\r\n                          </mat-option>\r\n                      </mat-select>\r\n                  </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.endDate.touched) && f.endDate.errors?.required\">\r\n                      End Day is required!\r\n                    </mat-error>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Basic <span class=\"error-asterisk\">*</span></span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6  px-1\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select matNativeControl disableOptionCentering  formControlName=\"basic\" placeholder=\"Basic\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\" id=\"employeeContributionSelect\">   \r\n                        <mat-option [value]=\"40\">40% CTC</mat-option>\r\n                        <mat-option [value]=\"50\">50% CTC</mat-option>\r\n                        <mat-option [value]=\"60\">60% CTC</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                  \r\n                  <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.basic.touched) && f.basic.errors?.required\">\r\n                    Basic is required!\r\n                  </mat-error>\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">HRA <span class=\"error-asterisk\">*</span></span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6  px-1\" >\r\n\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select matNativeControl disableOptionCentering  formControlName = \"hra\" placeholder=\"HRA\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\" id=\"employeeContributionSelect\">\r\n                        <mat-option [value]=\"\" data-placeholder>Select an option</mat-option>\r\n                        <mat-option [value]=\"8\">Basic * 8%</mat-option>\r\n                        <mat-option [value]=\"10\">Basic * 10%</mat-option>\r\n                        <mat-option [value]=\"12\">Basic * 12%</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            \r\n                  <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.hra.touched) && f.hra.errors?.required\">\r\n                    HRA is required!\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Does company have PF ?</span>\r\n                </div>\r\n                <div class = \"col-sm-6\" style = \"padding-left: 14px;\">\r\n                  <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" formControlName = \"pf\"\r\n                        id=\"flexSwitchCheckDefault\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Employee Contribution <span class=\"error-asterisk\">*</span></span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6  px-1\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select matNativeControl disableOptionCentering  formControlName = \"employeeContribution\" placeholder=\"Employee Contribution\" autocomplete=\"off\" panelClass=\"custom-mat-select-panel\" id=\"employeeContributionSelect\">\r\n                        <mat-option [value]=\"8\">Basic * 8%</mat-option>\r\n                        <mat-option [value]=\"10\">Basic * 10%</mat-option>\r\n                        <mat-option [value]=\"12\">Basic * 12%</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n              \r\n                  <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.employeeContribution.touched) && f.employeeContribution.errors?.required\">\r\n                    Employee Contribution is required!\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-2 mb-4\">\r\n                <div class=\"col-sm-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Do you deduct professional tax ?</span>\r\n                </div>\r\n                <div class = \"col-sm-6\" style = \"padding-left: 14px;\">\r\n                  <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" formControlName = \"deductTax\"\r\n                        id=\"flexSwitchCheckDefault\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-1 px-3\" style = \"float:right\">\r\n                <button type=\"button\" class=\"btn btn-save\" (click)=\"savePayrollsetting()\">Save</button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n<!-- for future work -->\r\n      <!-- <div class = \"my-4\">\r\n        <a class=\"btn text-nowrap\" type=\"button\" style = \"color:#EB8B3F;\" ><i\r\n          class=\"fas fa-plus me-2\"> </i>Add Another Salary Component\r\n        </a>\r\n      </div> -->\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\nimport { CommonService } from \"src/app/core/services/common.service\";\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport * as moment from 'moment';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-payroll',\r\n  templateUrl: './edit-payroll.component.html',\r\n  styleUrls: ['./edit-payroll.component.scss']\r\n})\r\nexport class EditPayrollComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  public EditPayrollForm: FormGroup;\r\n  public todaysDate;\r\n  public employeeId:any;\r\n  public structureID: any;\r\n\r\n  public submitted: boolean = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditPayrollComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private payrollService:PayrollService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private commonService: CommonService,\r\n    @Inject(MAT_DIALOG_DATA) public payrollData: any,\r\n    private roleService:RolesPermissionsService,\r\n    ) {\r\n      this.todaysDate = new Date();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.employeeId=this.payrollData.employeeId;\r\n\r\n    this.getProfileData();\r\n\r\n    this.EditPayrollForm = this.formBuilder.group({\r\n      date: [\"\", new Date()],\r\n      ctc:[\"\", Validators.required],\r\n      basic:[\"\"],\r\n      hra:[\"\"],\r\n    });\r\n\r\n  }\r\n\r\n  // Short-cut used in mat errors.\r\n  get f() {\r\n    return this.EditPayrollForm.controls;\r\n  }\r\n\r\n  // To close the dialog.\r\n  clearEditStructureForm() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // To get the info of selected employees.\r\n  getProfileData(){\r\n    this.roleService.getEmployeeById({}, this.employeeId).then((res:any)=>{\r\n      console.log(\"Payroll employee by id\",res)\r\n     // const calcBasic = (res.data.employeePayroll.ctc * res.data.employeePayroll.employeeStructure.basic);\r\n      //const calcHRA = ((res.data.employeePayroll.ctc * res.data.employeePayroll.employeeStructure.basic) * res.data.employeePayroll.employeeStructure.hra);\r\n      this.EditPayrollForm.patchValue({\r\n        \"ctc\": res.data.employee ? res.data.employee.salary:0,\r\n        \"basic\": res.data.employeePayroll ? res.data.employeePayroll.employeeStructure.basic:0,\r\n        //\"basic\": res.data.employeePayroll.employeeStructure.basic,\r\n        \"hra\":res.data.employeePayroll?.employeeStructure?.hra ,\r\n       // \"basic\": calcBasic ? calcBasic : 0.00,\r\n       // \"hra\":calcHRA ? calcHRA : 0.00,\r\n      })\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n\r\n    )\r\n\r\n  }\r\n\r\n  // To update the ctc of the employee.\r\n  UpdatePayroll(){\r\n    if (this.EditPayrollForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    } else {\r\n      let body=\r\n      {\r\n        \"date\" : moment(this.EditPayrollForm.controls.date.value, 'DD-MMM-YYYY').format('YYYY-MM-DD'),\r\n        \"ctc\" : this.EditPayrollForm.controls.ctc.value,\r\n        \"empId\" :this.employeeId,\r\n        \"userId\" : this.employeeId\r\n      \r\n    }\r\n    this.payrollService.addSalary(body).then((res:any)=>{\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Payroll Updated Successfully!!!\",\r\n        });\r\n      // this.toastService.openSnackBar(\"Payroll Updated Successfully!!!\");\r\n      this.commonService.notifyDataAdded();\r\n      this.dialogRef.close();\r\n\r\n    }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n          // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n          // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      })\r\n    }\r\n  }\r\n  openDatepicker() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.todaysDate\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.todaysDate = new Date()\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n\r\n  <h1 class=\"modal-title\">Edit Payroll</h1>\r\n\r\n  <div class=\"payrollButtons\">\r\n\r\n      <button style=\"margin-right: 10px !important;\" type=\"button\"\r\n          class=\"btn btn-cancel\" (click) = \"clearEditStructureForm()\">Cancel</button>\r\n      <button type=\"button\" class=\"btn btn-save\" (click)=\"UpdatePayroll()\">Save</button>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n\r\n  <form [formGroup]=\"EditPayrollForm\">\r\n\r\n    <!-- <div class=\"row my-5\">\r\n      <div class = \"col-12\" style = \"font-size: 18px;font-weight: 600;padding-left: 16px;\">\r\n        Name\r\n      </div>\r\n    </div> -->\r\n\r\n    <div class=\"row mb-3\">\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <label class=\"form-label\">Date<span class=\"error-asterisk\">*</span></label>\r\n        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n          <input matInput required ngModel bsDatepicker placeholder=\"Date\"\r\n            style=\"text-transform:uppercase!important;\" [(ngModel)]=\"todaysDate\" id=\"datePicker\" bsDatepicker\r\n            [bsConfig]=\"{\r\n              containerClass: 'theme-dark-blue',\r\n              dateInputFormat: 'YYYY-MM-DD',\r\n              showWeekNumbers:false\r\n              }\"\r\n            [ngModelOptions]=\"{ standalone: true }\"   bsDatepicker (click)=\"openDatepicker()\" >\r\n          <span>\r\n            <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n          </span>\r\n        </mat-form-field>\r\n        <mat-error class=\"text-danger\" *ngIf=\"(submitted || todaysDate.touched) && todaysDate.errors?.required\">\r\n          Date Is Required!\r\n        </mat-error>\r\n      </div>\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <label class=\"form-label\">CTC<span class=\"error-asterisk\">*</span></label>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matNativeControl required matInput placeholder=\"CTC\"\r\n                autocomplete=\"off\" formControlName = \"ctc\">\r\n        </mat-form-field>\r\n        <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.ctc.touched)\" >\r\n          <mat-error *ngIf=\"f.ctc.errors?.required\">\r\n              CTC is required!\r\n          </mat-error>\r\n        </mat-error>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <label class=\"form-label\">Basic<span class=\"error-asterisk\">*</span></label>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matNativeControl matInput placeholder=\"Basic\"\r\n                autocomplete=\"off\" formControlName = \"basic\" readonly>\r\n        </mat-form-field>\r\n        <!-- <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.basic.touched)\" >\r\n          <mat-error *ngIf=\"f.basic.errors?.required\">\r\n            Basic is required!\r\n          </mat-error>\r\n        </mat-error> -->\r\n      </div>\r\n\r\n      <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <label class=\"form-label\">HRA<span class=\"error-asterisk\">*</span></label>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matNativeControl matInput placeholder=\"HRA\"\r\n                autocomplete=\"off\" formControlName = \"hra\" readonly>\r\n        </mat-form-field>\r\n        <!-- <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.hra.touched)\" >\r\n          <mat-error *ngIf=\"f.hra.errors?.required\">\r\n            HRA is required!\r\n          </mat-error>\r\n        </mat-error> -->\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n</div>\r\n\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AssignPayrollComponent } from '../assign-payroll/assign-payroll.component';\r\nimport { EditPayrollComponent } from '../edit-payroll/edit-payroll.component';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\nimport { CommonService } from \"src/app/core/services/common.service\";\r\n\r\n@Component({\r\n  selector: 'app-payroll-list',\r\n  templateUrl: './payroll-list.component.html',\r\n  styleUrls: ['./payroll-list.component.scss']\r\n})\r\n\r\nexport class PayrollListComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public employeePayrollId: any;\r\n  public searchKey: any;\r\n  public payrollList: any=[];\r\n  public structureList: any[];\r\n  public StructureId: any;\r\n  public structureName: any;\r\n  public result: any = [];\r\n  public basicSalary:any=[];\r\n  public hraSalary:any=[]\r\n  public pfSalary:any=[]\r\n  public payrollResult:any = [];\r\n  public empnewId:any;\r\n\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private rolesPermissionsService: RolesPermissionsService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    public payrollService: PayrollService,\r\n    private commonservice: CommonService,\r\n    ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getPayrollList();\r\n\r\n    this.commonservice.rowAdded$.subscribe(() => {\r\n      this.getPayrollList();\r\n    });\r\n\r\n    this.getStructureDetails();\r\n\r\n  }\r\n\r\n  // Get all structure details.\r\n  getStructureDetails(): void {\r\n    this.payrollService.getAllStructures({}, this.currentUser.id).then(\r\n      (res) => {\r\n        console.log(\"Structures\", res);\r\n        this.StructureId = res.data.rows;\r\n        this.structureName = res.data.rows;\r\n        this.getPayrollList();\r\n      },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          // this.toastService.openErrorSnackBar(\r\n          //   this.titleCasePipe.transform(err.error.error_message)\r\n          // );\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n          // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // Code for Multiple selection if necessary.\r\n\r\n  // onChekMultiple($event) {\r\n  //   let id = $event.target.value;\r\n  //   this.isChecked = $event.target.checked;\r\n  //   console.log(\"this.isChecked\", this.isChecked)\r\n  //   this.upiCheckedId1 = this.payrollList.map((item) => {\r\n  //     if (id == -1) {\r\n  //       if (this.isChecked == true) {\r\n  //         this.checkSelectsinglefalse = true;\r\n  //         return item;\r\n  //       }\r\n  //       else {\r\n  //         this.checkSelectsinglefalse = false;\r\n  //         this.upiCheckedId = [];\r\n  //         this.upiCheckedId1=[];\r\n  //       }\r\n  //     }\r\n  //   })\r\n  //   console.log(\"multiple click\", this.upiCheckedId1)\r\n  //   for (var i = 0; i < this.upiCheckedId1.length; i++) {\r\n  //       this.upiCheckedId.push(this.upiCheckedId1[i].id);\r\n  //   }\r\n  //   console.log(\"multiple click\", this.upiCheckedId)\r\n\r\n  // }\r\n\r\n  // Code for single selction.\r\n  onChekedsingleCheckfalse(e, id) {\r\n    console.log(\"checked\", e.target.checked)\r\n\r\n    if (e.target.checked == true) {\r\n      // this.archiveIconfalse = true;\r\n      this.upiCheckedId.push(e.target.value);\r\n      console.log(\"this.upiCheckedId\", this.upiCheckedId)\r\n\r\n    }\r\n    else {\r\n\r\n        var index = this.upiCheckedId.indexOf(id);\r\n        console.log(index)\r\n        this.upiCheckedId.splice(index, 1);\r\n        console.log(\"this.upiCheckedId\", this.upiCheckedId)\r\n\r\n        if (this.upiCheckedId.length > 0) {\r\n        }\r\n        else {\r\n          this.upiCheckedId = [];\r\n        }\r\n\r\n    }\r\n  }\r\n\r\n  // Get the info of all employees.\r\n  getPayrollList() {\r\n    this.basicSalary = [];\r\n    this.hraSalary = [];\r\n    this.pfSalary = [];\r\n    this.rolesPermissionsService.getUsers({}, this.currentUser.id,1000,1).then((res) => {\r\n      console.log(\"getPayrollList\", res.data)\r\n\r\n      this.upiCheckedId = [];\r\n      this.payrollList = res.data.pageData;\r\n\r\n      this.payrollList.forEach((item) => {\r\n        // Calculate basicSalary and hraSalary for each item\r\n        const salary = item.employee.salary ? item.employee.salary : 0;\r\n\r\n        item.employeePayroll = item.employeePayroll || {}; // Ensure employeePayroll exists\r\n\r\n        item.employeePayroll.employeeStructure = item.employeePayroll.employeeStructure || {}; // Ensure employeeStructure exists\r\n\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.basic) {\r\n          // Your code here\r\n          item.employee.employeeStructure.basic = salary * (item.employee.employeeStructure.basic / 100 || 0);\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.basic && item.employee.employeeStructure.hra) {\r\n          item.employee.employeeStructure.hra = item.employee.employeeStructure.basic * (item.employee.employeeStructure.hra / 100 || 0);\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.basic && item.employee.employeeStructure.employeeContribution) {\r\n          item.employee.employeeStructure.employeeContribution = item.employee.employeeStructure.basic * (item.employee.employeeStructure.employeeContribution / 100 || 0);\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.basic !== undefined) {\r\n          // Perform the assignment\r\n          item.employee.employeeStructure.basic = item.employee.employeeStructure.basic;\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.hra !== undefined) {\r\n          // Perform the assignment\r\n          item.employee.employeeStructure.hra = item.employee.employeeStructure.hra;\r\n        } else {\r\n        }\r\n        if (item.employee.employeeStructure && item.employee.employeeStructure.employeeContribution !== undefined) {\r\n          // Perform the assignment\r\n          item.employee.employeeStructure.employeeContribution = item.employee.employeeStructure.employeeContribution;\r\n        } else {\r\n        }\r\n\r\n    \r\n\r\n\r\n      //  this.hraSalary.push(item.employeePayroll.hra);\r\n       // this.pfSalary.push(item.employeePayroll.employeeContribution);\r\n\r\n\r\n      });\r\n      console.log(\"payrollList\", this.payrollList);\r\n      console.log(\"Basicsalary    hraSalary  pfsalary--->\",this.basicSalary,this.hraSalary,this.pfSalary)\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  // Search bar functionality\r\n  getUsersListSearch(searchKey) {\r\n    this.rolesPermissionsService.getUsersSearch({}, this.currentUser.id,searchKey).then((res) => {\r\n      this.payrollList = res.data.pageData;\r\n      if(this.payrollList.length > 0){\r\n     //   this.toastService.openSnackBar(\"Record Found Successfully!!!\")\r\n      }else{\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Record Not Found!!!\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Record Not Found Successfully!!!\");\r\n      }\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  // To open dialig box of Assign Payroll form.\r\n  assignPayroll(payrollList): void {\r\n    if (this.upiCheckedId.length == 0) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Please Select The Employee You Want To Assign.\",\r\n      });\r\n      // this.toastService.openErrorSnackBar(\"Please select the employee you want to assign.\");\r\n    } else {\r\n      const dialogRef: MatDialogRef<AssignPayrollComponent> = this.dialog.open(AssignPayrollComponent, {\r\n        width: '50%',\r\n        height : '730px',\r\n        data: { structureId : this.upiCheckedId},\r\n        panelClass: 'custom-dialog-assign-payroll',\r\n        disableClose:true,\r\n        position: {\r\n          right: '0',\r\n        },\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((result) => {\r\n        console.log(`Dialog result: ${result}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  // To open dialig box of Edit Payroll form.\r\n  editPayrollById(employeeId): void {\r\n\r\n    const dialogRef: MatDialogRef<EditPayrollComponent> = this.dialog.open(EditPayrollComponent, {\r\n      // width: '1050px',\r\n      height : '730px',\r\n      data: {employeeId:employeeId},\r\n      panelClass: 'custom-dialog-edit-payroll',\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-0\">\r\n\r\n  <!-- <div class=\"row d-flex flex-center mb-3\">\r\n    <div class=\"col-md-1 col-lg-5 col-xl-6\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\"\r\n      [(ngModel)]=\"searchKey\" (keyup)=\"getUsersListSearch(searchKey)\" >\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-4 col-xl-3\" style = \"display:flex;justify-content: space-around !important;align-items: center;flex-wrap: wrap;\">\r\n      <button class=\"btn text-nowrap  mt-2\" type=\"button\" (click)=\"assignPayroll(payrollList.id)\" ><i\r\n        class=\"fas fa-plus me-2\"> </i>Assign\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap  mt-2\" >\r\n          <i class=\"fas fa-upload\"></i> Import\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap  mt-2\"><i\r\n              class=\"fas fa-download\"></i>\r\n      </button>\r\n    </div>\r\n  </div> -->\r\n\r\n  <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n    <div class=\"flex-item searchBar\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5  mt-2\" placeholder=\"Name\"\r\n      [(ngModel)]=\"searchKey\" (keyup)=\"getUsersListSearch(searchKey)\" >\r\n    </div>\r\n    <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n      <button class=\"btn text-nowrap  mt-2\" type=\"button\" (click)=\"assignPayroll(payrollList.id)\" ><i\r\n        class=\"fas fa-plus me-2\"> </i>Assign\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <hr class=\"my-0 py-0\" /> -->\r\n\r\n  <div class=\"table-container overflow-visible\">\r\n    <div class=\"table-div\" style=\"overflow-x: auto;\">\r\n    <table class=\"table table-responsive mb-0 bg-white\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-nowrap col-1\" style=\"vertical-align:middle;width:40px;\">\r\n                  <!-- <input  type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\"\r\n                      (change)=\"onChekMultiple($event)\" [value]=\"-1\" [checked]=\"checkSelect\" [(ngModel)]=\"allSelect\"/> -->\r\n                </th>\r\n                <!-- <th style = \"width:50px !important;\"></th> -->\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Full Name</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Designation</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Salary Structure</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">CTC</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Basic</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">HRA</th>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">PF</th>\r\n                <!-- <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Special Allowance</th> -->\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle\"></th>\r\n\r\n            </tr>\r\n            <tr>\r\n              <th style=\"padding: 0px !important; height: 1px!important;\" colspan=\"9\">\r\n                <hr class=\"col-12\" style=\"margin-top: 0px; margin-bottom: 0px;\">\r\n              </th>\r\n          </tr>\r\n        </thead>\r\n\r\n\r\n        <tbody>\r\n          <tr *ngFor=\"let item of payrollList; let i = index\" style=\"color: #676398!important;\" >\r\n            <td scope=\"row\" style=\"vertical-align:middle;\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"checkSelectsinglefalse\"\r\n                (change)=\"onChekedsingleCheckfalse($event,item.id)\" [value]=\"item.id\" />\r\n            </td>\r\n            <td>\r\n              <!-- <div class=\"party-info p-0\" style = \"vertical-align:middle;text-align:end;\">\r\n                <span><img  [src]=\"item.profileImage\" alt=\"Profile\"  onerror=\"this.src='assets/img/dashboard-party-profiles/party-profile-1.png'\"\r\n                  alt=\"Profile\" style = \"width:40px;height:41px;\"\r\n                     class=\"rounded-circle\">\r\n                 </span>\r\n              </div>\r\n              <div>\r\n                <div>{{ item.firstName }}</div>\r\n                <div>{{ item.mobile }}</div>\r\n              </div> -->\r\n              <div class=\"row\" style = \"display: flex;flex-direction:row;justify-content:flex-start;align-items: center;flex-wrap:nowrap;padding-left: 8px;padding-right: 8px;\">\r\n                <div class = \"flex-item\" style = \"flex-basis: 55px;\">\r\n                  <img  [src]=\"item.profileImage\" alt=\"Profile\"  onerror=\"this.src='assets/img/dashboard-party-profiles/party-profile-1.png'\"\r\n                    alt=\"Profile\" width=\"50\" height=\"50\" class=\"rounded-circle\">\r\n                </div>\r\n                <div class=\"flex-item party-name\" style = \"display: flex;flex-direction: column;align-items: flex-start;flex-basis: 70px;\">\r\n                    <div>{{ item.firstName }}</div>\r\n                    <div class=\"mobile\">{{ item.mobile }}</div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;\">{{ item.employee.designation }}</td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;\">\r\n              <span *ngIf=\"item.employee.employeeStructure === null\">\r\n                {{'NA'}}\r\n              </span>\r\n              <span *ngIf=\"item.employee.employeeStructure !== null\">\r\n                {{ item.employee.employeeStructure.name }}\r\n              </span>\r\n            </td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{ ((item.employee ? item.employee.salary : 0 )) }}</td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{ (item.employee.employeeStructure? item.employee.employeeStructure.basic:0)}}</td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.employee.employeeStructure ? item.employee.employeeStructure.hra : 0) }}</td>\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.employee.employeeStructure? item.employee.employeeStructure.employeeContribution: 0) }}</td>\r\n            <!-- <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{ item.specialAllowance  }}</td> -->\r\n            <td class=\"text-nowrap\" style=\"vertical-align:middle;text-align: center;\">\r\n              <button class=\"btn btnp me-2\" (click)=\"editPayrollById(item.id)\">\r\n                <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"top\" title=\"Edit\"></span>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <!-- Change \"payrollList.length\" to \"payrollList\"  -->\r\n        <tbody *ngIf=\"payrollList.length == 0\">\r\n          <tr class=\"text-center\">\r\n            <td colspan=\"12\">\r\n              <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\" alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n\r\n              <!-- <img class=\"image-responsive\" src=\"assets/img/icons/spot-illustrations/GST No Transaction.png\" width=\"124\" height=\"142\" alt=\"\"> -->\r\n              <!-- <h5 class=\"text-nowrap pt-2\" style=\"font-weight: 600;color: #000000;\">No Payroll Is Added. Please Add Payroll To Be Displayed Here.</h5> -->\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n// Main component\r\nimport { PayrollComponent } from './payroll.component';\r\n\r\n// Sub-components\r\nimport { CreateStructureComponent } from './create-structure/create-structure.component';\r\nimport { PayrollListComponent } from './payroll-list/payroll-list.component';\r\nimport { SetupPayrollComponent } from './setup-payroll/setup-payroll.component';\r\n\r\n// Child components of payload list\r\nimport { AssignPayrollComponent } from './assign-payroll/assign-payroll.component';\r\nimport { EditPayrollComponent } from './edit-payroll/edit-payroll.component';\r\n\r\n// Child component of create structure\r\nimport { NewStructureComponent } from './new-structure/new-structure.component';\r\nimport { SaalryReleaseListComponent } from './saalry-release-list/saalry-release-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: PayrollComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'payroll-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'payroll-list',\r\n        component:PayrollListComponent,\r\n      },\r\n      {\r\n        path:'assign-payroll',\r\n        component:AssignPayrollComponent,\r\n      },\r\n      {\r\n        path:'edit-payroll',\r\n        component:EditPayrollComponent,\r\n      },\r\n      {\r\n        path:'setup-payroll',\r\n        component:SetupPayrollComponent,\r\n      },\r\n      {\r\n        path:'create-structure',\r\n        component:CreateStructureComponent,\r\n      },\r\n      {\r\n        path:'new-structure',\r\n        component:NewStructureComponent,\r\n      },\r\n      {\r\n        path:'release-salary',\r\n        component:SaalryReleaseListComponent\r\n      }\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PayrollRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\nimport { PayrollRoutingModule } from './payroll-routing.module';\r\nimport { PayrollListComponent } from './payroll-list/payroll-list.component';\r\nimport { SetupPayrollComponent } from './setup-payroll/setup-payroll.component';\r\nimport { CreateStructureComponent } from './create-structure/create-structure.component';\r\nimport { NewStructureComponent } from './new-structure/new-structure.component';\r\nimport { AssignPayrollComponent } from './assign-payroll/assign-payroll.component';\r\nimport { EditPayrollComponent } from './edit-payroll/edit-payroll.component';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\nimport { SaalryReleaseListComponent } from './saalry-release-list/saalry-release-list.component';\r\nimport { SaalryReleaseViewComponent } from './saalry-release-view/saalry-release-view.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PayrollListComponent,\r\n    SetupPayrollComponent,\r\n    CreateStructureComponent,\r\n    AssignPayrollComponent,\r\n    EditPayrollComponent,\r\n    NewStructureComponent,\r\n    SaalryReleaseListComponent,\r\n    SaalryReleaseViewComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PayrollRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialExampleModule,\r\n    MatDatepickerModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ],\r\n  providers: [PayrollService],\r\n})\r\nexport class PayrollModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { SaalryReleaseViewComponent } from '../saalry-release-view/saalry-release-view.component';\r\nimport { SaalryReleaseServiceService } from 'src/app/core/services/saalry-release-service.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { PayrollService } from 'src/app/core/services/payroll.service';\r\n\r\n@Component({\r\n  selector: 'app-saalry-release-list',\r\n  templateUrl: './saalry-release-list.component.html',\r\n  styleUrls: ['./saalry-release-list.component.scss']\r\n})\r\nexport class SaalryReleaseListComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public payrollCost:any=0;\r\n  public employeeNetPay:any=0;\r\n  public employeeLength=0\r\n  public salaryData=[]\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public submitted: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n\r\n  constructor( private dialog: MatDialog,private saalryReleaseServiceService:SaalryReleaseServiceService,private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private commonService: CommonService,  private payrollService: PayrollService,) { }\r\n  ngOnInit(): void {\r\n    this.getSalaryData();\r\n    this.saalryReleaseServiceService.partyAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getSalaryData();\r\n    });\r\n  }\r\n  getSalaryData(){\r\n    this.saalryReleaseServiceService.getAllSalaryData({},this.currentUser.id).then((res:any)=>{\r\n      this.salaryData= res.data.employee;\r\n      this.payrollCost=res.data.payrollCost;\r\n      this.employeeNetPay=res.data.employeeNetPay;\r\n      this.employeeLength=this.salaryData.length\r\n      console.log(\"Salary Details\",this.salaryData);\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        // this.toastService.openErrorSnackBar(\r\n        //   this.titleCasePipe.transform(err.error.error_message)\r\n        // );\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      } else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n    )\r\n  }\r\n  openViewSalaryModel(employeeId:any){\r\n    const dialogRef: MatDialogRef<SaalryReleaseViewComponent> = this.dialog.open(SaalryReleaseViewComponent, {\r\n      width: '50%',\r\n      height : '100vh',\r\n      data: {employeeId:employeeId},\r\n      panelClass: 'custom-dialog-edit-payroll',\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n\r\n  }\r\n    submitSalary(){\r\n    this.submitted = true;\r\n    if (this.upiCheckedId.length == 0) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Please Select The Employee You Want To submit.\",\r\n      });\r\n      return false;\r\n    } else{\r\n      let body = {\r\n        \"ids\": this.upiCheckedId,\r\n        \"details\": {\r\n          \"name\": \"test\",\r\n          \"description\": \"test description\"\r\n      }\r\n      }\r\n      this.payrollService.salarySubmit(body,this.currentUser.id).then((res) => {\r\n        console.log(res);\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Salary submitted Successfully!!!\",\r\n          });\r\n        this.commonService.notifyDataAdded();\r\n        this.submitted = false;\r\n        \r\n      },\r\n        (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n          }\r\n  \r\n        })\r\n    }\r\n  }\r\n    // Code for single selction.\r\n   onChekedsingleCheckfalse(e, id) {\r\n    console.log(\"checked\", e.target.checked)\r\n\r\n    if (e.target.checked == true) {\r\n      // this.archiveIconfalse = true;\r\n      this.upiCheckedId.push(e.target.value);\r\n      console.log(\"this.upiCheckedId\", this.upiCheckedId)\r\n\r\n    }\r\n    else {\r\n\r\n        var index = this.upiCheckedId.indexOf(id);\r\n        console.log(index)\r\n        this.upiCheckedId.splice(index, 1);\r\n        console.log(\"this.upiCheckedId\", this.upiCheckedId)\r\n\r\n        if (this.upiCheckedId.length > 0) {\r\n        }\r\n        else {\r\n          this.upiCheckedId = [];\r\n        }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n\r\n\r\n<!-- <div class=\"row d-flex flex-center mb-3 pe-3\">\r\n    <div class=\"col-md-1 col-lg-8 col-xl-8\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Type/Payment\"\r\n     >\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-1 col-xl-1 \" style = \"display:flex;justify-content: space-around !important;align-items: center;flex-wrap: wrap;\">\r\n      <button class=\"btn text-nowrap  mt-2\" type=\"button\" ><i\r\n        class=\"fas fa-plus me-1\"> </i>Submit\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <hr class=\"my-0 py-0\" /> -->\r\n\r\n\r\n<div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n  <div class=\"flex-item searchBar\">\r\n    <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Type/Payment\">\r\n  </div>\r\n  <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n    <button class=\"btn text-nowrap  my-2\" type=\"button\"  (click)=\"submitSalary()\" ><i\r\n      class=\"fas fa-plus me-1\"> </i>Submit\r\n    </button>  </div>\r\n</div>\r\n\r\n\r\n<hr class=\"my-0 py-0\" />\r\n\r\n<div class=\"row m-1 bg-light mb-3\">\r\n    <div class=\"col-lg-2 col-xl-2 col-sm-12 col-md-2 bg-light\">\r\n\r\n    </div>\r\n    <div class=\"col-lg-6 col-xl-6 col-sm-12 col-md-6 card bg-light  m-3 \" style=\"float: right !important;background-color: #EEEEF6 !important;\">\r\n        <div class=\"row text-center\" >\r\n            <div class=\"col-lg-12 col-xl-12 col-md-12 col-sm-12\">\r\n                <p class=\"text-black \" style=\"font-size: 16px!important;font-weight: 500!important;font-family: Poppins;\">Period : December 2022 | 30 Base Days<span>\r\n                        <button class=\"btn btnp me-4\">\r\n                            <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                        </button></span> </p>\r\n            </div>\r\n        </div>\r\n        <div class=\"row text-center\">\r\n            <div class=\"col-lg-6 col-xl-6 col-md-12 col-sm-12\">\r\n                <p class=\"text-black\"  style=\"font-weight: 500!important;font-family: Poppins;\">₹&nbsp;{{payrollCost | number:'1.2-2'}}</p>\r\n                <p style=\"color:gray;font-family: Poppins;\" >PAYROLL COST </p>\r\n\r\n            </div>\r\n            <div class=\"col-lg-6 col-xl-6 col-md-12 col-sm-12\">\r\n                <p class=\"text-black\" style=\"font-weight: 500!important;font-family: Poppins;\">₹&nbsp;{{employeeNetPay | number:'1.2-2'}}</p>\r\n                <p style=\"color:gray;font-family: Poppins;\">EMPLOYESS NET PAY</p>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"col-lg-2 col-xl-2 col-sm-12 col-md-2 card m-3  bg-white\">\r\n        <p class=\"text-center\" style=\"color:gray;font-family: Poppins;\">PAY DAY</p>\r\n        <p class=\"text-center fw-bold text-black\" style = \"font-family: Poppins;font-weight: 500 !important;\">30</p>\r\n        <p class=\"text-center text-black\" style = \"font-family: Poppins;\">Dec,2023</p>\r\n        <hr>\r\n        <p class=\"text-center fw-bold text-black\" style = \"font-family: Poppins;font-weight: 500 !important;\">{{employeeLength}} Employees</p>\r\n    </div>\r\n    <div class=\"col-lg-2 col-xl-2 col-sm-12 col-md-2 bg-light\">\r\n    </div>\r\n</div>\r\n\r\n<div class=\"table-container overflow-visible\">\r\n    <div class=\"table-div\" style=\"overflow-x: auto;\">\r\n    <table class=\"table table-responsive mb-0 bg-white\">\r\n        <thead>\r\n        <tr>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;padding-left: 15px;padding-top: 15px;\"></th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Full Name</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Designation</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Paid Days</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Gross Pay</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Deduction</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Tax</th>\r\n            <th class=\"text-nowrap\" style=\"vertical-align:middle;text-align: right;\">Net Pay</th>\r\n            <th></th>\r\n\r\n        </tr>\r\n        <tr>\r\n            <th style=\"padding: 0px !important; height: 1px!important;\" colspan=\"9\"><hr class=\"col-12\" style=\"margin-top: 0px; margin-bottom: 0px;\"></th>\r\n        </tr>\r\n    </thead>\r\n\r\n\r\n        <tbody>\r\n\r\n            <tr class=\"btn-reveal-trigger text-left \" style=\"color: #676398!important;\"\r\n                *ngFor=\"let item of salaryData\">\r\n                <td class=\"text-nowrap\" style=\"vertical-align:middle; margin-left: 100px !important;\"><input\r\n                    type=\"checkbox\" class=\"form-check-input\" [checked]=\"checkSelectsinglefalse\"\r\n                    (change)=\"onChekedsingleCheckfalse($event,item.id)\" [value]=\"item.id\"></td>\r\n                <td style=\"vertical-align:middle;\">\r\n                    <div class=\"row\" style = \"display: flex;flex-direction:row;justify-content:flex-start;align-items: center;flex-wrap:nowrap;padding-right: 8px;\">\r\n                      <div class = \"flex-item\" style = \"flex-basis: 55px;\">\r\n                        <img  [src]=\"item.profileImage\" alt=\"Profile\"  onerror=\"this.src='assets/img/dashboard-party-profiles/party-profile-1.png'\"\r\n                          alt=\"Profile\" width=\"50\" height=\"50\" class=\"rounded-circle\">\r\n                      </div>\r\n                      <div class=\"flex-item party-name\" style = \"display: flex;flex-direction: column;align-items: center;flex-basis: 70px;\">\r\n                          <div>{{ item.firstName }}</div>\r\n                      </div>\r\n                    </div>\r\n                </td>\r\n                <td style=\"vertical-align:middle;\">{{item.employee ? item.employee.department:\"-\" }}</td>\r\n                <td style=\"vertical-align:middle;\">30 Days</td>\r\n                <td style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.employee? item.employee.grossPay : 0)  | number:'1.2-2'}}</td>\r\n                <td style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{item.totalDeduct | number:'1.2-2'}}</td>\r\n                <td style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.Tax ? item.Tax : 0) | number:'1.2-2'}}</td>\r\n                <td style=\"vertical-align:middle;text-align: right;\">₹&nbsp;{{(item.totalNetPay ? item.totalNetPay :0)  | number:'1.2-2'}}</td>\r\n                <td style=\"vertical-align:middle;text-align: center;\">\r\n                    <button class=\"btn btnp me-4\" type=\"button\" (click)=\"openViewSalaryModel(item.id)\">\r\n                        <span class=\"bi bi-eye icon-color iconFontSize\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                            title=\"View\"></span>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n        <tbody *ngIf=\"salaryData.length == 0\">\r\n            <tr class=\"text-center\">\r\n                <td colspan=\"10\">\r\n                    <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                        alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { SaalryReleaseServiceService } from 'src/app/core/services/saalry-release-service.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ToWords } from 'to-words';\r\n\r\n\r\n@Component({\r\n  selector: 'app-saalry-release-view',\r\n  templateUrl: './saalry-release-view.component.html',\r\n  styleUrls: ['./saalry-release-view.component.scss']\r\n})\r\nexport class SaalryReleaseViewComponent implements OnInit {\r\n  public employeeId:any=[];\r\n  public salaryData:any=[];\r\n  public finalAmount: any;\r\n  public totaltotalNetPayable:any = 0\r\n  public totalDeduct:any = 0\r\n  public totalEarning:any = 0\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  \r\n  toWords = new ToWords({\r\n    localeCode: 'en-IN',\r\n    converterOptions: {\r\n      currency: true,\r\n      ignoreDecimal: false,\r\n      ignoreZeroCurrency: true,\r\n    }\r\n  });\r\n  calcBasic: number;\r\n  calcHRA: number;\r\n  public addErningFlag:boolean=false\r\n  public adddeductFlag:boolean=false\r\n  public adjustEarnAmount:any=0;\r\n  public adjustDeductAmount:any=0;\r\n\r\n  constructor(public dialogRef: MatDialogRef<SaalryReleaseViewComponent>,@Inject(MAT_DIALOG_DATA) public employeeData: any,private saalryReleaseServiceService:SaalryReleaseServiceService,private toastService: ToastNotificationService,\r\n  private titleCasePipe: TitleCasePipe,private roleService:RolesPermissionsService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.employeeId=this.employeeData.employeeId;\r\n    this.GetsalryDataByEmployeeId();\r\n    this.getProfileData();\r\n\r\n  }\r\n  GetsalryDataByEmployeeId(){\r\n    this.saalryReleaseServiceService.getAllSalaryDataByEmployeeId({},this.employeeId).then((res:any)=>{\r\n      this.salaryData= res.data.employee\r\n      this.totaltotalNetPayable=res.data.totalNetPayable\r\n      this.finalAmount= res.data.totalNetPayable;\r\n      this.convertToWord(this.finalAmount)\r\n      console.log(\"res\",this.salaryData);\r\n\r\n      this.totalDeduct = res.data.deduction\r\n      this.totalEarning= res.data.grossEarning\r\n\r\n  \r\n\r\n    }\r\n    ,\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        // this.toastService.openErrorSnackBar(\r\n        //   this.titleCasePipe.transform(err.error.error_message)\r\n        // );\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      } else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n    )\r\n\r\n  }\r\n  getProfileData(){\r\n    this.roleService.getEmployeeById({}, this.employeeId).then((res:any)=>{\r\n      console.log(\"Payroll employee by id\",res)\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n\r\n    )\r\n\r\n  }\r\n\r\n  convertToWord(num) {\r\n    this.finalAmount = this.toWords.convert(num);\r\n  }\r\n  onclear(){\r\n    this.dialogRef.close();\r\n  }\r\n  getAllOffersType(){\r\n\r\n  }\r\n  AddEarning(){\r\n    this.addErningFlag=!this.addErningFlag\r\n  }\r\n  AddDeduct(){\r\n    this.adddeductFlag=!this.adddeductFlag\r\n  }\r\n  AdjustAmount(e){\r\n     this.adjustEarnAmount = parseInt((e.target as HTMLInputElement).value);\r\n    console.log('Entered value:', this.adjustEarnAmount);\r\n    let body={\r\n      \"grossType\": \"EARNING\",   //gross type should be either EARNING OR DEDUCTION\r\n      \"name\": \"Adjust Amount\",\r\n      \"total\": this.adjustEarnAmount,\r\n      \"employeeId\":this.employeeId\r\n     \r\n    }\r\n    this.saalryReleaseServiceService.PostEarningDeduct(body,this.currentUser.id).then((res:any)=>{\r\n      // this.toastService.openSnackBar(\"Earning Details Added Successfully!!!\");\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Earning Details Added Successfully!!!\",\r\n      });\r\n      this.saalryReleaseServiceService.notifyPartyAdded();\r\n      this.addErningFlag=false;\r\n      this.dialogRef.close();\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n  deductAmount(e){\r\n    this.adjustDeductAmount = parseInt((e.target as HTMLInputElement).value);\r\n    console.log('Entered value:', this.adjustDeductAmount);\r\n    let body={\r\n      \"grossType\": \"DEDUCTION\",   //gross type should be either EARNING OR DEDUCTION\r\n      \"name\": \"Adjust Amount\",\r\n      \"total\": this.adjustDeductAmount,\r\n      \"employeeId\":this.employeeId\r\n    }\r\n    this.saalryReleaseServiceService.PostEarningDeduct(body,this.currentUser.id).then((res:any)=>{\r\n     this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Deduction Details Added Successfully!!!\",\r\n        });\r\n      // this.toastService.openSnackBar(\"Deduction  Details Added Successfully!!!\");\r\n      this.saalryReleaseServiceService.notifyPartyAdded();\r\n      this.adddeductFlag=false;\r\n      this.dialogRef.close();\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n    isNumeric(value: any): boolean {\r\n    return !isNaN(parseFloat(value)) && isFinite(value);\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">{{ salaryData.employee ? salaryData.employee.firstName : \"-\"}}</h1>\r\n\r\n    <div class=\"flex d-flex \" style=\"margin-left: auto;\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" (click)=\"onclear()\" type=\"button\"\r\n            class=\"btn btn-cancel\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"getAllOffersType()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row mb-3\">\r\n        <div class=\"col-lg-6 col-xl-6 col-md-6 col-sm-12\" style=\"margin-left: 20px !important;\">\r\n            <p class=\"text-black fw-bold\">Designation : {{salaryData.employee ? salaryData.employee.department :\"-\"}}</p>\r\n            <p class=\"text-black fw-bold\">Date of Joining : 21-09-2019</p>\r\n            <p class=\"text-black fw-bold\">Paid Days: 28</p>\r\n            <p class=\"text-black fw-bold\">LOP:3</p>\r\n        </div>\r\n\r\n        <div class=\"col-lg-6 col-xl-6 col-md-6 col-sm-12\"></div>\r\n    </div>\r\n    <div class=\"container\">\r\n        <table class=\"table table-responsive  table-bordered fs--1 mb-2 \">\r\n            <tr>\r\n                <th class=\"text-nowrap\" style=\"vertical-align:middle;\" class=\"text-success fw-bold\">(+) Earning </th>\r\n                <th class=\"text-nowrap\" style = \"text-align: right !important;\" class=\"text-black fw-bold\">Amount</th>\r\n            </tr>\r\n            <tbody>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">Basic</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;{{( (salaryData.employee && salaryData.employee.employeeStructure.basic) ? salaryData.employee.employeeStructure.basic : 0.00)  | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">HRA</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;{{(( salaryData.employee && salaryData.employee.employeeStructure.hra) ? salaryData.employee.employeeStructure.hra : 0.00) | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">Special Allowance</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;0.00</td>\r\n                </tr>\r\n                <tr *ngIf=\"addErningFlag\">\r\n                    <td class=\"text-nowrap \" style=\" vertical-align:middle;\">Adjust Amount</td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"><input (keydown.enter)=\"AdjustAmount($event)\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap fw-bold\" style=\" vertical-align:middle;color:#6090EE !important;\" (click)=\"AddEarning()\">+ Add Earning</td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\" class=\"text-black fw-bold\">Gross Earning</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\" class=\"text-black fw-bold\">₹&nbsp;{{totalEarning | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"class=\" text-danger fw-bold\">(-) Deduction</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\" class=\"text-black fw-bold\">Amount</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">PF</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;{{( ( salaryData.employee && salaryData.employee.employeeStructure.employeeContribution) ? salaryData.employee.employeeStructure.employeeContribution : 0.00) | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">Profession Tax</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\">₹&nbsp;{{( ( salaryData.employee && salaryData.employee.employeeStructure.professionalTax) ? salaryData.employee.employeeStructure.professionalTax : 0.00) | number:'1.2-2'}}\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\">Paid leave Taken(2)</td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"></td>\r\n                </tr>\r\n                <tr *ngIf=\"adddeductFlag\">\r\n                    <td class=\"text-nowrap\" style=\" vertical-align:middle;\">Adjust Amount</td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"><input (keydown.enter)=\"deductAmount($event)\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap fw-bold\" (click)=\"AddDeduct()\" style=\" vertical-align:middle;color:#6090EE !important;\"> + Add Deduction </td>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-nowrap\" style=\"vertical-align:middle;\"  class=\"text-black fw-bold\"> Total Deduction</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\"  class=\"text-black fw-bold\">₹&nbsp;{{totalDeduct | number:'1.2-2'}}</td>\r\n                </tr>\r\n                <tr class=\"bg-light\">\r\n                    <td class=\"text-nowrap\"  class=\"text-black fw-bold\" style=\"vertical-align:middle;\"> Total Net Payable</td>\r\n                    <td class=\"text-nowrap\" style = \"text-align: right !important;\"> ₹&nbsp;{{totaltotalNetPayable | number:'1.2-2'}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12 col-xl-12 col-md-12 col-sm-12\">\r\n            <p class=\"text-black fw-bold\" *ngIf=\"isNumeric(totaltotalNetPayable) && isNumeric(finalAmount)\">\r\n                Total Net Payable  ₹&nbsp; {{ totaltotalNetPayable | number:'1.2-2' }} ({{ finalAmount | number:'1.2-2' }})\r\n              </p>            \r\n              <p class=\"text-black fw-bold text-center\">Total Net Payable =(Gross Earning - Total Deductions)</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-setup-payroll',\r\n  templateUrl: './setup-payroll.component.html',\r\n  styleUrls: ['./setup-payroll.component.scss']\r\n})\r\nexport class SetupPayrollComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-0\">\r\n\r\n  <!-- <div class=\"row d-flex flex-center mb-3\">\r\n    <div class=\"col-md-1 col-lg-5 col-xl-6\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Designation\">\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-4 col-xl-3 mt-2\" style = \"display:flex;justify-content: space-around !important;align-items: center;\">\r\n      <button class=\"btn text-nowrap\" type=\"button\"  ><i\r\n        class=\"fas fa-plus me-2\"> </i>Add New\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap\" >\r\n          <i class=\"fas fa-upload\"></i> Import\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap\"><i\r\n              class=\"fas fa-download\"></i></button>\r\n      <input class=\"inputhide\" type=\"file\" name=\"file\" id=\"uploadFile\" accept=\".xls,.xlsx\"/>\r\n    </div>\r\n  </div> -->\r\n\r\n  <!-- <hr class=\"my-0 py-0\" /> -->\r\n\r\n  <div class = \"row mt-5\">\r\n\r\n    <div class=\"col-sm-12 col-md-11 col-lg-10 col-xl-9 col-xxl-8\">\r\n\r\n      <div class=\"card\">\r\n\r\n        <form>\r\n\r\n          <hr class=\"my-0 py-0\" />\r\n\r\n          <div class=\"row my-3 px-3\">\r\n            <div class = \"col-12\" style = \"font-size: 18px;font-weight: 600;\">\r\n              Payroll Setting\r\n            </div>\r\n          </div>\r\n\r\n          <hr class=\"my-0 py-0\" />\r\n\r\n          <div class=\"row my-3 px-3\">\r\n            <div class = \"col-12\">\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Pay Cycle</span>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div style = \"padding-left: 5px;\">From</div>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div style = \"padding-left: 5px;\">To</div>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Basic</span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"50% CTC\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">HRA</span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"Basic * 12%\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-6 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Does company have PF ?</span>\r\n                </div>\r\n                <div class = \"col-sm-6 col-md-6\" style = \"padding-left: 14px;\">\r\n                  <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\"\r\n                        id=\"flexSwitchCheckDefault\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-12 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Employee Contribution</span>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                          <input matNativeControl required matInput placeholder=\"Basic * 12%\"\r\n                              autocomplete=\"off\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-error class=\"text-danger\">\r\n                          <mat-error>\r\n                              CTC is required!\r\n                          </mat-error>\r\n                      </mat-error> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row my-1\">\r\n                <div class=\"col-sm-6 col-md-6\" style = \"display: flex;align-items: center;\">\r\n                  <span style = \"color: black;\">Do you deduct professional tax ?</span>\r\n                </div>\r\n                <div class = \"col-sm-6 col-md-6\" style = \"padding-left: 14px;\">\r\n                  <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\"\r\n                        id=\"flexSwitchCheckDefault\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class = \"row mt-3 px-3\" style = \"float:right\">\r\n                <button type=\"button\" class=\"btn btn-save\" style = \"width:100px;\">Save</button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n      <div class = \"my-4\">\r\n        <a class=\"btn text-nowrap\" type=\"button\" style = \"color:#EB8B3F;\" ><i\r\n          class=\"fas fa-plus me-2\"> </i>Add Another Salary Component\r\n        </a>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///"}