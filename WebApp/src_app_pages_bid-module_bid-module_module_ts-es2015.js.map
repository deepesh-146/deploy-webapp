{"version":3,"file":"src_app_pages_bid-module_bid-module_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/bid-module/bid-module-routing.module.ts","./src/app/pages/bid-module/bid-module.module.ts","./src/app/pages/bid-module/new-add-bid-client/new-add-bid-client.component.ts","./src/app/pages/bid-module/new-add-bid-client/new-add-bid-client.component.html","./src/app/pages/bid-module/new-bid-client/new-bid-client.component.ts","./src/app/pages/bid-module/new-bid-client/new-bid-client.component.html","./src/app/pages/bid-module/new-bid/new-bid.component.ts","./src/app/pages/bid-module/new-bid/new-bid.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NewBidClientComponent } from './new-bid-client/new-bid-client.component';\r\nimport { NewBidComponent } from './new-bid/new-bid.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewBidComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'bid_product',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: \"bid_product\",\r\n        component: NewBidClientComponent\r\n      }\r\n    ]\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BidModuleRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BidModuleRoutingModule } from './bid-module-routing.module';\r\nimport { NewBidClientComponent } from './new-bid-client/new-bid-client.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NewAddBidClientComponent } from './new-add-bid-client/new-add-bid-client.component';\r\nimport { NewBidComponent } from './new-bid/new-bid.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NewBidClientComponent,\r\n    NewAddBidClientComponent,\r\n    NewBidComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BidModuleRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class BidModuleModule { }\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { BiddingService } from 'src/app/core/services/bidding.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport * as moment from 'moment';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-new-add-bid-client',\r\n  templateUrl: './new-add-bid-client.component.html',\r\n  styleUrls: ['./new-add-bid-client.component.scss']\r\n})\r\nexport class NewAddBidClientComponent implements OnInit {\r\n  public submitted:boolean = false;\r\n  public showTimeInterval: any;\r\n  public wishlistId: number;\r\n  public currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  public prodId: string;\r\n  public difference: any;\r\n  todaysDate: Date;\r\n  searchedProduct: any[];\r\n  totalrow: any;\r\n  bidData: any;\r\n  interval: any;\r\n  prodName: any;\r\n  public isHome:any;\r\n  public myControl = new FormControl();\r\n  public filteredOptions: Observable<string[]>\r\n  public p=1;\r\n  public currentpage:any;\r\n  // public totalrow:any;\r\n  public toatlPages:any;\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  \r\n  public quotePriceForm = this.formBuilder.group({\r\n    description: [\"\",[Validators.required]],\r\n    deliveryDate: [\"\",[Validators.required]],\r\n    sellerRange: [\"\",[Validators.required]],\r\n    prodName: [\"\",[Validators.required]],\r\n    homeDelivery: [false,[Validators.required]],\r\n    deleveryCharge:[0,[Validators.required]]\r\n  })\r\n  goodsData: any;\r\n\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public bidDetails: any,\r\n    private biddingService: BiddingService, \r\n    private commonService: CommonService,\r\n    private formBuilder: FormBuilder, \r\n    private productService: ProductService,\r\n    private toastService : ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private dialog: MatDialog,public dialogRef: MatDialogRef<NewAddBidClientComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBiddings();\r\n    this.getGoodsbyUser();\r\n    this.todaysDate = new Date();\r\n    console.log(this.bidDetails.wishlistId)\r\n    // this.interval = setInterval(() => {\r\n    //   this.getExpiryTime();\r\n    // }, 1000)\r\n  }\r\n  cancel(){\r\n \r\n      this.dialogRef.close();\r\n  }\r\n  showHomeDelevery(checked){\r\n    this.isHome = checked;\r\n  }\r\n\r\n \r\n  postClientQuotePrice() {\r\n    this.submitted = true;\r\n    if(this.quotePriceForm.invalid){\r\n      // this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else{\r\n      let data = {\r\n        \"wishlistId\": this.bidDetails.wishlistId,\r\n        \"userId\": this.currentUser.id,\r\n        \"price\": this.quotePriceForm.controls.sellerRange.value,\r\n        \"description\": this.quotePriceForm.controls.description.value,\r\n        \"productId\": this.prodId,\r\n        \"deliveryDate\": this.todaysDate,\r\n        \"homeDelivery\": this.quotePriceForm.controls.homeDelivery.value,\r\n        \"deliveryCharge\":this.quotePriceForm.controls.deleveryCharge.value,\r\n      }\r\n      this.biddingService.postClientQuotePrice(data).then((res) => {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Price Quoted Successfully!!!\"\r\n        });\r\n        // this.toastService.openSnackBar(\"Price Quoted Successfully!!!\");\r\n        this.quotePriceForm.reset();\r\n        this.searchedProduct = [];\r\n        this.dialogRef.close();\r\n      }, (err)=>{\r\n        // this.toastService.openErrorSnackBar(\"Please Try Again Later!!!\");\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Please Try Again Later!!!\",\r\n        });\r\n      })\r\n    }\r\n  }\r\n  getAllBiddings() {\r\n    this.biddingService.getAllBiddings({}, this.currentUser.id).then((res) => {\r\n      // this.bidData = res.data.pageData;\r\n      this.totalrow=res.data.totalrows;\r\n      let bid = res.data.pageData\r\n      bid.forEach(element => {\r\n        let createDate = new Date(element.createdAt).getTime();\r\n        let lastDate = new Date(moment(createDate).add(7, 'days').format(\"YYYY-MM-DD HH:mm:ss\")).getTime();\r\n        let todaysDate = new Date().getTime();\r\n        this.difference = lastDate - todaysDate;\r\n        // Time calculations for days, hours, minutes and seconds\r\n        var days = Math.floor(this.difference / (1000 * 60 * 60 * 24));\r\n        var hours = Math.floor((this.difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((this.difference % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((this.difference % (1000 * 60)) / 1000);\r\n        this.showTimeInterval = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\r\n        if(element.product){\r\n          let data = {\r\n            itemName: element.product ? element.product.itemName : \"-\",\r\n            id:element.product ? element.product.id : \"-\",\r\n            publish: element.publish ? element.publish : \"-\",\r\n            description: element.product ? element.product.description : \"-\",\r\n            budgetMin: element.budgetMin ? element.budgetMin :\"-\",\r\n            budgetMax: element.budgetMax ? element.budgetMax : \"-\",\r\n            pincode: element.pincode ? element.pincode :\"-\",\r\n            location: element.location ? element.location : \"-\",\r\n            approxCompletedDate: element.approxCompletedDate ? element.approxCompletedDate : \"-\",\r\n            price: element.product ? element.product.salePrice : \"-\",\r\n            showTimeInterval: this.showTimeInterval ? this.showTimeInterval : \"\",\r\n            biddings: element.biddings ? element.biddings : \"-\",\r\n            createdAt: element.createdAt ? element.createdAt : \"\",\r\n            wishlistId: element.id,\r\n           coverPic:element.product ? element.product.coverImage : \"\",\r\n          }\r\n          this.bidData.push(data);\r\n        }\r\n        // If the count down is over, write some text \r\n        if (this.difference < 0) {\r\n          clearInterval(this.interval);\r\n          this.showTimeInterval = \"EXPIRED\";\r\n        }\r\n      })\r\n    },(err)=>{\r\n      if(err.error.expose){\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else{\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n    )\r\n  }\r\n  get f() {\r\n    return this.quotePriceForm.controls;\r\n  }\r\n  searchProduct() {\r\n    this.biddingService.getAllProductsByUserSearch({}, this.currentUser.id, this.myControl.value,this.partyPageSize,(this.currentPageNo + 1) )\r\n    .then((res) => {\r\n      this.toatlPages = res.data.totalPages;\r\n      this.totalrow = res.data.totalRows;\r\n      this.p = res.data.currentPage;\r\n      this.searchedProduct =  res.data.pageData;\r\n      this.prodName = this.searchedProduct[0].itemName;\r\n      this.prodId = this.searchedProduct[0].id,\r\n      this.quotePriceForm.patchValue({\r\n        prodName:this.prodName\r\n      })\r\n    })\r\n  }\r\n\r\n  selectedProduct(itemName){\r\n    this.biddingService.getAllProductsByUserSearch({}, this.currentUser.id, itemName,this.partyPageSize,(this.currentPageNo + 1))\r\n    .then((res) => {\r\n      this.toatlPages = res.data.totalPages;\r\n      this.totalrow = res.data.totalRows;\r\n      this.p = res.data.currentPage;\r\n      this.searchedProduct =  res.data.pageData;\r\n       this.prodName = res.data.pageData[0].itemName;\r\n      this.prodId = res.data.pageData[0].id\r\n      this.quotePriceForm.patchValue({\r\n        prodName:this.prodName\r\n      })  \r\n    })\r\n  }\r\n  getGoodsbyUser(){\r\n    this.productService.getGoodsProductByUser_Type({},this.currentUser.id,\"goods\",\"DESC\",this.partyPageSize,(this.currentPageNo + 1)).then((res)=>{\r\n      this.goodsData = res.data.pageData;\r\n      this.filteredOptions = this.myControl.valueChanges\r\n          .pipe(\r\n            startWith(''),map(name => name ? this.filterNames(name) : this.goodsData.slice())\r\n          );\r\n    },(err)=>{\r\n      if(err.error.status == 404){\r\n      }\r\n    })\r\n  }\r\n  private filterNames(name: string): string[] {\r\n    return this.goodsData.filter(goods =>\r\n      goods.itemName.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n  openDatepicker(){\r\n        // Check if the current value of taskdate is an \"Invalid Date\"\r\n        const selectedDate = this.quotePriceForm.get('deliveryDate').value;\r\n        if (isNaN(selectedDate.getTime())) {\r\n          // Set a default date or any valid date here\r\n          this.quotePriceForm.get('deliveryDate').setValue(new Date());\r\n        }\r\n      }\r\n  }\r\n\r\n\r\n\r\n","\r\n<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;margin-left: 5px;\" class=\"modal-title mb-0\">Accept Bid</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\"   (click)=\"postClientQuotePrice()\">Save</button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid ps-0\">\r\n        <form [formGroup]=\"quotePriceForm\">\r\n            <div class=\"py-4 pb-0 mb-2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <label class=\"form-label\">Product Name <span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n                            <input type=\"text\" placeholder=\"Product Name\" (input)=\"searchProduct()\"\r\n                                aria-label=\"Select Product Name\" matInput [formControl]=\"myControl\"\r\n                                [matAutocomplete]=\"auto\">\r\n                            <mat-icon class=\"m-2\" matSuffix>search</mat-icon>\r\n                            <mat-autocomplete #auto=\"matAutocomplete\">\r\n                                <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.itemName\"\r\n                                    (onSelectionChange)=\"selectedProduct(option.itemName)\">\r\n                                    <span><img class=\"img-circle m-1 imageRound\" width=\"50\" height=\"50\"\r\n                                        [src]=\"option.coverImage ? option.coverImage : ''\" alt=\"\" /></span>\r\n                                    {{ option.itemName | titlecase }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                        <mat-error *ngIf=\"(submitted || myControl.touched) && myControl.pristine\"\r\n                            class=\"invalid-feedback\">\r\n                            Product Name Is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" *ngIf=\"searchedProduct\">\r\n                    <h5><b>Selected Product</b></h5>\r\n                    <h5 class=\"text-capitalize fw-bold\"><span><img class=\"img-circle m-1 imageRound\" width=\"50\"\r\n                                height=\"50\" src=\"../../../assets/img/products/2.jpg\" alt=\"\" /></span>{{ prodName }}</h5>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <label class=\"form-label\">Seller Range <span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n                            <input matNativeControl type=\"text\" required matInput ngxOnlyNumbers\r\n                                placeholder=\"Seller Range\" formControlName=\"sellerRange\" value=\"\" [ngClass]=\"{\r\n        'is-invalid': f.sellerRange.invalid && f.sellerRange.touched && f.sellerRange.pristine }\">\r\n                        </mat-form-field>\r\n                        <mat-error *ngIf=\"(submitted || f.sellerRange.touched) && f.sellerRange.pristine\"\r\n                            class=\"invalid-feedback\">\r\n                            <div class=\"error-font\" *ngIf=\"f.sellerRange.errors.required\">\r\n                                Seller Range Is Required!</div>\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"d-flex ps-2\" style=\"font-size: 12px;\">\r\n                            <label class=\"text-nowrap\">Home Delivery</label>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input style=\"margin-left: 2px!important;\"\r\n                                    class=\"form-check-input toggleB text-warning\" style=\"margin-left:3px!important;\"\r\n                                    id=\"inlineCheckbox1\" type=\"checkbox\" formControlName=\"homeDelivery\"\r\n                                    (change)=\"showHomeDelevery($event.target.checked)\" [checked]=\"isHome\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\" *ngIf=\"isHome\">\r\n                        <label class=\"form-label\">Delivery Charge <span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n                            <!-- <input matNativeControl type=\"number\" ngxOnlyString matInput\r\n                                placeholder=\"Delivery Charge\" min=\"0\" formControlName=\"deleveryCharge\" value=\"\"\r\n                                oninput=\"this.value = Math.abs(this.value)\"\r\n                                [ngClass]=\"{'is-invalid': f.deleveryCharge.invalid &&\r\n                                    f.deleveryCharge.touched && submitted }\" /> -->\r\n                            <input matNativeControl type=\"number\" required matInput formControlName=\"deleveryCharge\"\r\n                            placeholder=\"Delivery Charge\" min=\"0\" oninput=\"this.value = Math.abs(this.value)\"\r\n                            value=\"deleveryCharge\"   [ngClass]=\"{'is-invalid':\r\n                            f.deleveryCharge.invalid && f.deleveryCharge.touched && submitted\r\n                            }\" />\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.deleveryCharge.touched) &&\r\n                            f.deleveryCharge.errors?.required\">\r\n                                Delivery Charge Is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <label class=\"form-label\">Expected Delivery Date <span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n                            <input matInput required ngModel bsDatepicker formControlName=\"deliveryDate\" (click)=\"openDatepicker()\" \r\n                            style=\"text-transform:uppercase!important;\"   [minDate]=\"todaysDate\"  [(ngModel)]=\"todaysDate\" id=\"datePicker\" bsDatepicker [bsConfig]=\"{\r\n                containerClass: 'theme-dark-blue',\r\n                dateInputFormat: 'DD MMM YYYY',\r\n                 showWeekNumbers:false\r\n\r\n                }\" [ngClass]=\"{\r\n                    'is-invalid': f.deliveryDate.invalid && f.deliveryDate.touched && f.deliveryDate.pristine }\">\r\n                            <mat-error\r\n                                *ngIf=\"f.deliveryDate.invalid && f.deliveryDate.touched && f.deliveryDate.pristine\"\r\n                                class=\"invalid-feedback\">\r\n                                <div class=\"error-font\" *ngIf=\"f.deliveryDate.errors.required\">\r\n                                    Expected Delivery Date Is Required!</div>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <label class=\"form-label\">Description <span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n                            <textarea matInput rows=\"5\" required placeholder=\"Description\"\r\n                                formControlName=\"description\" [ngClass]=\"{\r\n        'is-invalid': f.description.invalid && f.description.touched && f.description.pristine }\"></textarea>\r\n                        </mat-form-field>\r\n                        <mat-error *ngIf=\"(submitted || f.description.touched) && f.description.pristine\"\r\n                            class=\"invalid-feedback\">\r\n                             Description Is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n\r\n        </div>\r\n        </div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { BiddingService } from 'src/app/core/services/bidding.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport * as moment from 'moment';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { NewAddBidClientComponent } from '../new-add-bid-client/new-add-bid-client.component';\r\n\r\n@Component({\r\n  selector: 'app-new-bid-client',\r\n  templateUrl: './new-bid-client.component.html',\r\n  styleUrls: ['./new-bid-client.component.scss']\r\n})\r\nexport class NewBidClientComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  public bidData:any = [];\r\n  public todaysDate;\r\n  public wishlistId: number;\r\n  public goodsData = [];\r\n  public searchedProduct = [];\r\n  public prodName: string;\r\n  public prodId: string;\r\n  public isHome:any;\r\n  public myControl = new FormControl();\r\n  public filteredOptions: Observable<string[]>\r\n  public p=1;\r\n  public currentpage:any;\r\n  public totalrow:any;\r\n  public toatlPages:any;\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  public pagesize: number = 1;\r\n  public count: number = 0;\r\n  public showTimeInterval: any;\r\n  public interval: any;\r\n  public difference: any;\r\n  public submitted:boolean = false;\r\n  public databid: any=[];\r\n\r\n  constructor(private biddingService: BiddingService, \r\n    private commonService: CommonService,\r\n    private formBuilder: FormBuilder, \r\n    private productService: ProductService,\r\n    private toastService : ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBiddings();\r\n    this.todaysDate = new Date();\r\n    this.interval = setInterval(() => {\r\n      this.getExpiryTime();\r\n    }, 1000)\r\n    \r\n  }\r\n\r\n \r\n\r\n  // getAllBiddings() {\r\n  //   this.biddingService.getAllBiddings({}, this.currentUser.id).then((res) => {\r\n  //      //this.bidData = res.data.pageData;\r\n  //     this.totalrow=res.data.totalrows;\r\n  //     let bid = res.data.pageData;\r\n  //     bid.forEach(element => {\r\n  //       let createDate = new Date(element.createdAt).getTime();\r\n  //       let lastDate = new Date(moment(createDate).add(7, 'days').format(\"YYYY-MM-DD HH:mm:ss\")).getTime();\r\n  //       let todaysDate = new Date().getTime();\r\n  //       this.difference = lastDate - todaysDate;\r\n  //       // Time calculations for days, hours, minutes and seconds\r\n  //       var days = Math.floor(this.difference / (1000 * 60 * 60 * 24));\r\n  //       var hours = Math.floor((this.difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  //       var minutes = Math.floor((this.difference % (1000 * 60 * 60)) / (1000 * 60));\r\n  //       var seconds = Math.floor((this.difference % (1000 * 60)) / 1000);\r\n  //       this.showTimeInterval = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\r\n  //       if(element.product){\r\n  //         console.log(\"element.product\",element.product)\r\n  //         let data = {\r\n  //           itemName: element.product ? element.product.itemName : \"-\",\r\n  //           id:element.product ? element.product.id : \"-\",\r\n  //           publish: element.publish ? element.publish : \"-\",\r\n  //           description: element.product ? element.product.description : \"-\",\r\n  //           budgetMin: element.budgetMin ? element.budgetMin :\"-\",\r\n  //           budgetMax: element.budgetMax ? element.budgetMax : \"-\",\r\n  //           pincode: element.pincode ? element.pincode :\"-\",\r\n  //           location: element.location ? element.location : \"-\",\r\n  //           approxCompletedDate: element.approxCompletedDate ? element.approxCompletedDate : \"-\",\r\n  //           price: element.product ? element.product.salePrice : \"-\",\r\n  //           showTimeInterval: this.showTimeInterval ? this.showTimeInterval : \"\",\r\n  //           biddings: element.biddings ? element.biddings : \"-\",\r\n  //           createdAt: element.createdAt ? element.createdAt : \"\",\r\n  //           wishlistId: element.id,\r\n  //          coverPic:element.product ? element.product.coverImage : \"\",\r\n  //         }\r\n  //         this.bidData.push(data);\r\n  //       }\r\n  //       // If the count down is over, write some text \r\n  //       if (this.difference < 0) {\r\n  //         clearInterval(this.interval);\r\n  //         this.showTimeInterval = \"EXPIRED\";\r\n  //       }\r\n  //     })\r\n\r\n  //   },(err)=>{\r\n  //     if(err.error.expose){\r\n  //       this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n  //     }\r\n  //     else{\r\n  //       this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n  //     }\r\n  //   }\r\n  //   )\r\n  // }\r\n  getAllBiddings() {\r\n    this.biddingService.getBiddings({}, this.currentUser.id,this.partyPageSize, (this.currentPageNo + 1)).then((res) => {\r\n      this.bidData=[];\r\n      this.totalrow = res.data.totalrows;\r\n      this.databid=res.data.pageData;\r\n      let bid = res.data.pageData;\r\n      for (let i = 0; i < bid.length; i++) {\r\n        const element = bid[i];\r\n        let createDate = new Date(element.createdAt).getTime();\r\n        let lastDate = new Date(moment(createDate).add(7, 'days').format(\"YYYY-MM-DD HH:mm:ss\")).getTime();\r\n        let todaysDate = new Date().getTime();\r\n        this.difference = lastDate - todaysDate;\r\n        console.log(\"this.difference\",this.difference)\r\n  \r\n        // Time calculations for days, hours, minutes, and seconds\r\n        var days = Math.floor(this.difference / (1000 * 60 * 60 * 24));\r\n        var hours = Math.floor((this.difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((this.difference % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((this.difference % (1000 * 60)) / 1000);\r\n        this.showTimeInterval = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\r\n\r\n        console.log(\"this.showTimeInterval\",this.showTimeInterval)\r\n  \r\n        if (element.product) {\r\n          console.log(\"element.product\",i, element.product);\r\n          let data = {\r\n            itemName: element.product ? element.product.itemName : \"-\",\r\n            id: element.product ? element.product.id : \"-\",\r\n            publish: element.publish ? element.publish : \"-\",\r\n            description: element.product ? element.product.description : \"-\",\r\n            budgetMin: element.budgetMin ? element.budgetMin : \"-\",\r\n            budgetMax: element.budgetMax ? element.budgetMax : \"-\",\r\n            pincode: element.pincode ? element.pincode : \"-\",\r\n            location: element.location ? element.location : \"-\",\r\n            approxCompletedDate: element.approxCompletedDate ? element.approxCompletedDate : \"-\",\r\n            price: element.product ? element.product.salePrice : \"-\",\r\n            showTimeInterval: this.showTimeInterval ? this.showTimeInterval : \"\",\r\n            difference : this.difference,\r\n            biddings: element.biddings ? element.biddings : \"-\",\r\n            createdAt: element.createdAt ? element.createdAt : \"\",\r\n            wishlistId: element.id,\r\n            coverPic: element.product ? element.product.coverImage : \"\",\r\n          }\r\n          this.bidData.push(data);\r\n        }\r\n        \r\n        // If the countdown is over, write some text \r\n        if (this.difference < 0) {\r\n          clearInterval(this.interval);\r\n          //this.showTimeInterval = \"EXPIRED\";\r\n        }\r\n      }\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n        // this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      } else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n        // this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  getExpiryTime() {\r\n    this.bidData.forEach((element) => {\r\n      let createDate = new Date(element.createdAt).getTime();\r\n      let lastDate = new Date(moment(createDate).add(7, 'days').format(\"YYYY-MM-DD HH:mm:ss\")).getTime();\r\n      let todaysDate = new Date().getTime();\r\n      this.difference = lastDate - todaysDate;\r\n      // Time calculations for days, hours, minutes and seconds\r\n      var days = Math.floor(this.difference / (1000 * 60 * 60 * 24));\r\n      var hours = Math.floor((this.difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      var minutes = Math.floor((this.difference % (1000 * 60 * 60)) / (1000 * 60));\r\n      var seconds = Math.floor((this.difference % (1000 * 60)) / 1000);\r\n      this.showTimeInterval = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\r\n      element.showTimeInterval = this.showTimeInterval;\r\n    });\r\n    if (this.difference < 0) {\r\n      clearInterval(this.interval);\r\n      this.showTimeInterval = \"EXPIRED\";\r\n    }\r\n  }\r\n\r\n  \r\n \r\n  /**\r\n   * Filter customer name search\r\n   * @param name \r\n   * @returns \r\n   */\r\n   private filterNames(name: string): string[] {\r\n    return this.goodsData.filter(goods =>\r\n      goods.itemName.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n\r\n\r\n\r\n  public handlePage(e: any) {\r\n    console.log(\"e.pageIndex\",e.pageIndex)\r\n    this.currentPageNo = e.pageIndex;\r\n    console.log(\"currentPageNo\",this.currentPageNo)\r\n    this.pagesize = e.pageSize;\r\n    if (this.databid.length > 0) {\r\n      this.partyPageSize = e.pageSize;\r\n      this.getAllBiddings();\r\n    }\r\n  }\r\n  \r\n\r\n  AddOpenDialog(wishlistId){\r\n   \r\n    const dialogRef: MatDialogRef<NewAddBidClientComponent> = this.dialog.open(NewAddBidClientComponent, {\r\n      width: '50%',\r\n      height: '100vh',\r\n      data: { wishlistId: wishlistId },\r\n      panelClass: 'custom-dialog-AddReject-class',\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });  \r\n\r\n  }\r\n\r\n}\r\n","\r\n<!-- <div class=\"card-body\"> -->\r\n\r\n\r\n  <!-- <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-sm-12 col-lg-4 col-xl-4 mb-3\" *ngFor=\"let item of bidData\">\r\n        <div class=\"card\">\r\n\r\n          <div class=\"card-body\">\r\n            <div class=\"container\">\r\n              <h5 class=\"mt-3 mt-sm-0 text-center mt-2\">\r\n                <a class=\"text-dark fs-0 fs-lg-1 fw-bold\">\r\n                  {{ item.itemName }}\r\n                </a>\r\n              </h5>\r\n            </div>\r\n            <div class=\"d-grid\"  *ngIf=\"showTimeInterval =='EXPIRED'\" style=\"position: absolute; transform: rotate(-45deg);margin:10px \">\r\n              <button class=\"btn btn-warning rounded-0 diagonal-button \">\r\n                  <h4 class=\"text-white text-bold mb-0\">{{ showTimeInterval }}</h4>\r\n              </button>\r\n            </div>\r\n            <div class=\"card-image margin:4px\">\r\n\r\n              <div class=\"d-grid\" *ngIf=\"showTimeInterval != 'EXPIRED'\"  style=\"position: absolute;margin-top: 35%;\">\r\n                <button class=\"btn btn-warning rounded-0\">\r\n                    <h6 class=\"text-white text-bold mb-0\"> Days : Hours : Mins : Secs</h6>\r\n                    <h4 class=\"text-white text-bold mb-0\">{{ showTimeInterval }}</h4>\r\n                </button>\r\n              </div>\r\n              <img height=\"150\" width=\"200\" [src]=\"item.coverPic\" style=\"margin-top: 20px;\"\r\n                onerror=\"this.src='../../../assets/img/products/2.jpg';\" alt=\"Image\">\r\n            </div>\r\n\r\n            <div class=\"ms-5  container mt-3\">\r\n              <div class=\"p-1\">Delevery code : {{item.pincode}}</div>\r\n              <div class=\"p-1\">City : {{item.location}}</div>\r\n              <div class=\"p-1\">Expected Delivery : {{item.approxCompletedDate| date:\"dd MMM YYYY\"| uppercase}}</div>\r\n              <div class=\"p-1\">Expected Range : (&#8377;{{ item.budgetMin }}\r\n                - &#8377;{{item.budgetMax}})</div>\r\n            </div>\r\n            <div class=\" ms-7 mb-3  container p-1 fw-bold text-warning\">&#8377;{{item.price}}</div>\r\n            <div class=\"card-image\">\r\n\r\n              <div class=\"addProductButtons\">\r\n\r\n                <button style=\"margin-right: 10px !important;\" type=\"button\" [disabled]=\"showTimeInterval =='EXPIRED'\" class=\"btn btn-save\"\r\n                (click)=\"AddOpenDialog(item.wishlistId)\">Accept</button>\r\n                <button type=\"button\" class=\"btn btn-cancel\" [disabled]=\"showTimeInterval =='EXPIRED'\">Reject</button>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n\r\n  <div class = \"container-fluid\">\r\n    <div *ngFor=\"let item of bidData\">\r\n      <div class=\"card\">\r\n        <div class=\"card-head\">\r\n          <h5 class = \"itemName\">{{ item.itemName }}</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"d-grid\"  *ngIf=\"item.difference < 0\" style=\"position: absolute; transform: rotate(-45deg);margin:10px \">\r\n            <button class=\"btn btn-warning rounded-0 diagonal-button \">\r\n                <h4 class=\"text-white text-bold mb-0\">EXPIRED</h4>\r\n            </button>\r\n          </div>\r\n          <div class=\"card-image\">\r\n            <div class = \"intervalbutton\" *ngIf=\"item.difference > 0\">\r\n              <button class=\"btn btn-warning\">\r\n                  <h5 class = \"timeInterval\">Days : Hours : Mins : Secs</h5>\r\n                  <h4 class = \"timeInterval\">{{ item.showTimeInterval }}</h4>\r\n              </button>\r\n            </div>\r\n            <img height=\"150\" width=\"200\" [src]=\"item.coverPic\" class = \"coverImage\"\r\n              onerror=\"this.src='../../../assets/img/products/2.jpg';\" alt=\"Image\">\r\n          </div>\r\n          <div class=\"bid-content\">\r\n            <div class=\"p-1 content1\">Delivery code : {{item.pincode}}</div>\r\n            <div class=\"p-1 content2\">City : {{item.location}}</div>\r\n            <div class=\"p-1 content3\">Expected Delivery : {{item.approxCompletedDate| date:\"dd MMM YYYY\"| uppercase}}</div>\r\n            <div class=\"p-1 content4\">Expected Range : (&#8377;{{ item.budgetMin }} - &#8377;{{item.budgetMax}})</div>\r\n            <div class=\"p-1 content5 text-warning\">&#8377;{{item.price}}</div>\r\n          </div>\r\n          <div class=\"addProductButtons\">\r\n            <button style=\"margin-right: 10px !important;\" type=\"button\"  [disabled]=\"item.difference < 0\" class=\"btn btn-save\"\r\n            (click)=\"AddOpenDialog(item.wishlistId)\">Accept</button>\r\n            <button type=\"button\" class=\"btn btn-cancel\"  [disabled]=\"item.difference < 0\">Reject</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n<!-- </div> -->\r\n<div *ngIf=\"bidData == 0\" class=\"card-body p-0 overflow-hidden m-2 p-2\">\r\n  <div class=\"text-center\">\r\n      <div colspan=\"10\">\r\n        <img class=\"image-responsive\" src=\"assets/img/icons/spot-illustrations/GST No Transaction.png\" width=\"124\" height=\"142\" alt=\"\">\r\n        <h5 class=\"text-nowrap pt-2\" style=\"font-weight: 600;color: #000000;\">No Data Found.</h5>\r\n          <!-- <h5 class=\"text-nowrap\">No Bid Details Added. Please Add Bid Details To Be Displayed Here.<span> -->\r\n              <!-- </span></h5> -->\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n  <mat-paginator class=\"float-right mt-2\" *ngIf=\"this.databid?.length > 0\" [pageSize]=\"partyPageSize\"\r\n    [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\" showFirstLastButtons\r\n    (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n  </mat-paginator>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-bid',\r\n  templateUrl: './new-bid.component.html',\r\n  styleUrls: ['./new-bid.component.scss']\r\n})\r\nexport class NewBidComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"container-fluid bg-white p-4\">\r\n    <div class=\"row mt-2\">\r\n        <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n            <div class=\"row mt-3 page-nav-link\" id=\"LinkPrint\">\r\n                <div class=\"links col-xxl-2 col-xl-2 col-lg-2 col-md-2\" id=\"productlistLink\">\r\n                    <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./all_Bid_Product\"\r\n                        routerLinkActive='active'>All Bid Product</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n<div class=\"component-container container-fluid px-3 pt-3\">\r\n    <div id=\"navPanel\" class=\"row px-3 pt-3\" id=\"headingPrintHide\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row  mt-3 page-nav-link\" style=\"z-index: 1;\">\r\n          <div class=\"col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 text-nowrap \" routerLink=\"./bid_product\" routerLinkActive=\"active\">All Bid Product</a>\r\n          </div>\r\n          <div class=\"col-lg-6 \"></div>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n    <hr class=\"mt-1\">\r\n    <div>\r\n  \r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>"],"names":[],"sourceRoot":"webpack:///"}