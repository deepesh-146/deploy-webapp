{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_2__","AddBrandComponent","formBuilder","toastService","titleCasePipe","productService","dialogRef","router","JSON","parse","localStorage","getItem","brandForm","group","brandName","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","controls","submitted","invalid","toastMsg","title","content","body","value","currentUser","id","postBrand","then","res","notifyProductAdded","close","err","error","expose","transform","error_message","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_3__","AddCategoryComponent","commonService","categoryForm","categoryName","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","newCategory","userId","isActive","postCategory","success","notifyDataAdded","AddSubCategoryComponent","subCategoryFrom","subCategoryName","category","getAllCategory","getCategory","data","size","page","search","categoryList","pageData","name","categoryId","postSubCategory","_angular_core__WEBPACK_IMPORTED_MODULE_4__","ctx_r10","item_r12","ctx_r3","BrandProductComponent","dialog","rxjs__WEBPACK_IMPORTED_MODULE_5__","getAllBrand","productAdded$","subscribe","searchSubscription","searchSubject","pipe","isLoading","searchKey","length","getBrandSearch","trim","getBrandList","partyPageSize","currentPageNo","productBrand","p","currentPage","totalrow","totalrows","toatlPages","totalPages","open","_add_brand_add_brand_component__WEBPACK_IMPORTED_MODULE_0__","width","height","disableClose","afterClosed","result","brandId","_edit_brand_edit_brand_component__WEBPACK_IMPORTED_MODULE_1__","push","deleteBrand","checkSelectsingle","upiCheckedId","checkSelect","allSelect","checkSingleArray","archiveIconfalse","checkSelectsinglefalse","isChecked","newStatus","chnageBrandStatus","e","pageIndex","pagesize","pageSize","searchInput","document","getElementById","onSearchInputChange","expenseId","target","checked","index","indexOf","splice","$event","map","item","next","setTimeout","toLowerCase","_angular_core__WEBPACK_IMPORTED_MODULE_5__","CategoryProductComponent","rxjs__WEBPACK_IMPORTED_MODULE_6__","rowAdded$","getSubCategorySearch","_add_category_add_category_component__WEBPACK_IMPORTED_MODULE_0__","_edit_category_edit_category_component__WEBPACK_IMPORTED_MODULE_1__","deleteCategory","categoryChangeStatus","filter","isDefault","AddCustomFieldsComponent","customForm","customFieldName","type","dropdownOptions","array","control","get","optionsArray","option","optionName","console","log","fieldName","options","postCustomFields","removeAt","EditCustomFieldsComponent","fieldId","getCustomFields","customList","foundField","find","isDropdown","formValues","Array","isArray","productCustomFieldOptions","clear","productCustomFieldId","setControl","patchValue","requestBody","removedOptions","newOption","dropdownOptionsArray","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","CustomFieldsComponent","customFieldList","FieldId","deleteCustomFields","_components_add_custom_fields_add_custom_fields_component__WEBPACK_IMPORTED_MODULE_0__","_components_edit_custom_fields_edit_custom_fields_component__WEBPACK_IMPORTED_MODULE_1__","putCustomFields","EditBrandComponent","brandData","getBrandById","getBrandListById","toString","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","EditCategoryComponent","foundCategory","EditSubCategoryComponent","subCategoryId","getSubCategoryById","subCategoryList","ProductMainComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_product_main_product_main_component__WEBPACK_IMPORTED_MODULE_3__","children","redirectTo","pathMatch","_setting_module_invoice_receipt_ui_invoice_receipt_ui_component__WEBPACK_IMPORTED_MODULE_6__","_product_setting_component__WEBPACK_IMPORTED_MODULE_4__","_category_product_category_product_component__WEBPACK_IMPORTED_MODULE_0__","_sub_category_product_sub_category_product_component__WEBPACK_IMPORTED_MODULE_1__","_brand_product_brand_product_component__WEBPACK_IMPORTED_MODULE_2__","_custom_fields_custom_fields_component__WEBPACK_IMPORTED_MODULE_5__","routerLinkActiveOptions","exact","ProductSettingRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_8__","imports","exports","ProductSettingComponent","ProductSettingModule","_angular_common__WEBPACK_IMPORTED_MODULE_17__","_product_setting_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_18__","src_app_material_module__WEBPACK_IMPORTED_MODULE_15__","_angular_material_input__WEBPACK_IMPORTED_MODULE_19__","_angular_material_button__WEBPACK_IMPORTED_MODULE_20__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_21__","_angular_material_core__WEBPACK_IMPORTED_MODULE_22__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_23__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_24__","_angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_25__","_angular_forms__WEBPACK_IMPORTED_MODULE_26__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_27__","declarations","_product_main_product_main_component__WEBPACK_IMPORTED_MODULE_1__","_category_product_category_product_component__WEBPACK_IMPORTED_MODULE_3__","_sub_category_product_sub_category_product_component__WEBPACK_IMPORTED_MODULE_4__","_add_category_add_category_component__WEBPACK_IMPORTED_MODULE_5__","_edit_category_edit_category_component__WEBPACK_IMPORTED_MODULE_6__","_add_sub_category_add_sub_category_component__WEBPACK_IMPORTED_MODULE_7__","_edit_sub_category_edit_sub_category_component__WEBPACK_IMPORTED_MODULE_8__","_add_brand_add_brand_component__WEBPACK_IMPORTED_MODULE_9__","_edit_brand_edit_brand_component__WEBPACK_IMPORTED_MODULE_10__","_product_setting_component__WEBPACK_IMPORTED_MODULE_11__","_custom_fields_custom_fields_component__WEBPACK_IMPORTED_MODULE_12__","_custom_fields_components_add_custom_fields_add_custom_fields_component__WEBPACK_IMPORTED_MODULE_13__","_custom_fields_components_edit_custom_fields_edit_custom_fields_component__WEBPACK_IMPORTED_MODULE_14__","SubCategoryProductComponent","getSubCategory","deleteSubCategory","_add_sub_category_add_sub_category_component__WEBPACK_IMPORTED_MODULE_0__","_edit_sub_category_edit_sub_category_component__WEBPACK_IMPORTED_MODULE_1__","subCategoryChangeStatus"],"sources":["webpack:///src/app/pages/product-setting/add-brand/add-brand.component.html","webpack:///src/app/pages/product-setting/add-brand/add-brand.component.ts","webpack:///src/app/pages/product-setting/add-category/add-category.component.html","webpack:///src/app/pages/product-setting/add-category/add-category.component.ts","webpack:///src/app/pages/product-setting/add-sub-category/add-sub-category.component.html","webpack:///src/app/pages/product-setting/add-sub-category/add-sub-category.component.ts","webpack:///src/app/pages/product-setting/brand-product/brand-product.component.html","webpack:///src/app/pages/product-setting/brand-product/brand-product.component.ts","webpack:///src/app/pages/product-setting/category-product/category-product.component.html","webpack:///src/app/pages/product-setting/category-product/category-product.component.ts","webpack:///src/app/pages/product-setting/custom-fields/components/add-custom-fields/add-custom-fields.component.html","webpack:///src/app/pages/product-setting/custom-fields/components/add-custom-fields/add-custom-fields.component.ts","webpack:///src/app/pages/product-setting/custom-fields/components/edit-custom-fields/edit-custom-fields.component.html","webpack:///src/app/pages/product-setting/custom-fields/components/edit-custom-fields/edit-custom-fields.component.ts","webpack:///src/app/pages/product-setting/custom-fields/custom-fields.component.html","webpack:///src/app/pages/product-setting/custom-fields/custom-fields.component.ts","webpack:///src/app/pages/product-setting/edit-brand/edit-brand.component.html","webpack:///src/app/pages/product-setting/edit-brand/edit-brand.component.ts","webpack:///src/app/pages/product-setting/edit-category/edit-category.component.html","webpack:///src/app/pages/product-setting/edit-category/edit-category.component.ts","webpack:///src/app/pages/product-setting/edit-sub-category/edit-sub-category.component.html","webpack:///src/app/pages/product-setting/edit-sub-category/edit-sub-category.component.ts","webpack:///src/app/pages/product-setting/product-main/product-main.component.ts","webpack:///src/app/pages/product-setting/product-main/product-main.component.html","webpack:///src/app/pages/product-setting/product-setting-routing.module.ts","webpack:///src/app/pages/product-setting/product-setting.component.ts","webpack:///src/app/pages/product-setting/product-setting.component.html","webpack:///src/app/pages/product-setting/product-setting.module.ts","webpack:///src/app/pages/product-setting/sub-category-product/sub-category-product.component.html","webpack:///src/app/pages/product-setting/sub-category-product/sub-category-product.component.ts"],"sourcesContent":["<div class=\"modal-header pt-0\">\r\n    <h1 class=\"modal-title mb-0 modalHeaderFormat\">Add Brand</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" class=\"btn btn-cancel close\" (click)=\"clearInput()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"brandForm\">\r\n        <div class=\"col-lg-6 col-md-12 col-xl-6  mt-2\">\r\n            <label class=\"form-label\">Brand<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matNativeControl required type=\"text\" placeholder=\"Brand\" formControlName=\"brandName\" [ngClass]=\"{\r\n                    'is-invalid': (f.brandName.invalid && f.brandName.touched) && submitted }\" />\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.brandName.touched) && f.brandName.errors?.required\">\r\n                Brand Name is required!\r\n            </mat-error>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer d-flex justify-content-end\">\r\n    <button type=\"button btnMarginRight\" class=\"btn btn-save\" (click)=\"addBrand()\">Save</button>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-brand',\r\n  templateUrl: './add-brand.component.html',\r\n  styleUrls: ['./add-brand.component.scss']\r\n})\r\nexport class AddBrandComponent implements OnInit {\r\n  brandForm: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  submitted: boolean = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private productService: ProductService,\r\n    public dialogRef: MatDialogRef<AddBrandComponent>, private router: Router,) { }\r\n  ngOnInit(): void {\r\n    this.brandForm = this.formBuilder.group({\r\n      brandName: [\"\", [Validators.required]],\r\n    })\r\n  }\r\n  get f() {\r\n    return this.brandForm.controls;\r\n  }\r\n\r\n  addBrand() {\r\n    this.submitted = true;\r\n    if (this.brandForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      let body = {\r\n        \"id\": \"\",\r\n        \"name\": this.brandForm.controls.brandName.value,\r\n        // \"isDefault\": true,\r\n        \"userId\": this.currentUser.id,\r\n        \"isActive\": true\r\n      }\r\n      this.productService.postBrand(body).then((res) => {\r\n        if (res) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Brand Added Successfully!!!\",\r\n          });\r\n          this.productService.notifyProductAdded();\r\n          this.dialogRef.close();\r\n        }\r\n\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went To Wrong.\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n  clearInput() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 class=\"modal-title mb-0 modalHeaderFormat\">Add Category</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" class=\"btn btn-cancel close\" (click)=\"close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"categoryForm\">\r\n\r\n        <div class=\"col-lg-6 col-md-12 col-xl-6  mt-2\">\r\n            <label class=\"form-label\">Category<span class=\"error-asterisk\">*</span></label>\r\n             <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matNativeControl required type=\"text\" placeholder=\"Category\" formControlName=\"categoryName\" \r\n                [ngClass]=\"{\r\n                    'is-invalid': (f.categoryName.invalid && f.categoryName.touched) && submitted }\"/>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger \" *ngIf=\"(submitted || f.categoryName.touched) && f.categoryName.errors?.required\">\r\n                    Category Name is required!\r\n            </mat-error>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer d-flex justify-content-end\">\r\n    <button type=\"button btnMarginRight\" class=\"btn btn-save\" (click)=\"addCategory()\"\r\n    >Save</button>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-category',\r\n  templateUrl: './add-category.component.html',\r\n  styleUrls: ['./add-category.component.scss']\r\n})\r\nexport class AddCategoryComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  categoryForm: any;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private productService: ProductService,\r\n    public dialogRef: MatDialogRef<AddCategoryComponent>, private commonService: CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryForm = this.formBuilder.group({\r\n      categoryName: [\"\", [Validators.required]],\r\n    })\r\n  }\r\n  get f() {\r\n    return this.categoryForm.controls;\r\n  }\r\n\r\n  addCategory() {\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const newCategory = {\r\n        id: '', // Check if the server requires an ID or if it's auto-generated\r\n        categoryName: this.categoryForm.value.categoryName,\r\n        // isDefault: true, // Adjust these values as needed\r\n        userId: this.currentUser.id,\r\n        isActive: true,\r\n      };\r\n\r\n      this.productService.postCategory(newCategory).then((res: any) => {\r\n        if (res.success) {\r\n          this.commonService.notifyDataAdded();\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Category Added Successfully\"\r\n          })\r\n          this.close();\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went To Wrong.\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 class=\"modal-title mb-0 modalHeaderFormat\">Add Sub Category</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" class=\"btn btn-cancel close\" (click)=\"close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"subCategoryFrom\">\r\n        <div class=\"col-lg-12 col-md-12 col-xl-12 mt-2\">\r\n            <label class=\"form-label\">Category<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-select placeholder=\"Select Category\" formControlName=\"category\">\r\n                    <mat-option *ngFor=\"let category of categoryList\" [value]=\"category.id\" [ngClass]=\"{\r\n                        'is-invalid': (f.category.invalid && f.category.touched) && submitted }\">\r\n                        {{ category.categoryName }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.category.touched) && f.category.errors?.required\">\r\n                Category is required!\r\n            </mat-error>\r\n        </div>        \r\n        <div class=\"col-lg-12 col-md-12 col-xl-12 mt-2\">\r\n            <label class=\"form-label\">Sub Category<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matNativeControl required type=\"text\" placeholder=\"Sub category\" formControlName=\"subCategoryName\"\r\n                [ngClass]=\"{\r\n                    'is-invalid': (f.subCategoryName.invalid && f.subCategoryName.touched) && submitted }\" />\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.subCategoryName.touched) && f.subCategoryName.errors?.required\">\r\n               Sub Category is required!\r\n            </mat-error>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer d-flex justify-content-end\">\r\n    <button type=\"button btnMarginRight\" class=\"btn btn-save\" (click)=\"addCategory()\"\r\n    >Save</button>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-sub-category',\r\n  templateUrl: './add-sub-category.component.html',\r\n  styleUrls: ['./add-sub-category.component.scss']\r\n})\r\nexport class AddSubCategoryComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  subCategoryFrom: any;\r\n  categoryList: any;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,private productService: ProductService,\r\n    public dialogRef: MatDialogRef<AddSubCategoryComponent>, private commonService: CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subCategoryFrom = this.formBuilder.group({\r\n      subCategoryName: [\"\", [Validators.required]],\r\n      category: [\"\", [Validators.required]],\r\n    })\r\n    this.getAllCategory()\r\n  }\r\n\r\n  getAllCategory(){\r\n    this.productService.getCategory({\r\n      data:{}, \r\n      userId: this.currentUser.id, \r\n      size: 1000, \r\n      page: (1), \r\n      search:'', \r\n      isActive:'' \r\n    }).then((res: any) => {\r\n      if(res.success){\r\n        this.categoryList = res.data.pageData;\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n  get f() {\r\n    return this.subCategoryFrom.controls;\r\n  }\r\n  \r\n  addCategory(){\r\n    this.submitted = true;\r\n    if (this.subCategoryFrom.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const newCategory = {\r\n        id: '', // Check if the server requires an ID or if it's auto-generated\r\n        name: this.subCategoryFrom.value.subCategoryName,\r\n        userId: this.currentUser.id,\r\n        categoryId: `${this.subCategoryFrom.value.category}`,\r\n        isActive: true,\r\n      };\r\n\r\n      this.productService.postSubCategory(newCategory).then((res: any) => {\r\n        if(res.success){\r\n          this.commonService.notifyDataAdded();\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Sub Category Added Successfully\"\r\n          })\r\n          this.close();\r\n        }\r\n      },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  close(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"row  mb-3\" id=\"showoptionHide\">\r\n    <div class=\"col-3 flex-item searchBar\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"search-form-control pe-5 my-2\" placeholder=\"Brand\"\r\n        (input)=\"onSearchInputChange($event.target.value)\">\r\n    </div>\r\n    <div class=\"col-5\"></div>\r\n    <div class=\"col-4\">\r\n        <!-- <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-select matNativeControl disableOptionCentering placeholder=\"Select\">\r\n                <mat-option value=\"Default\">Default</mat-option>\r\n                <mat-option value=\"Default\">Custom</mat-option>\r\n            </mat-select>\r\n        </mat-form-field> -->\r\n    </div>\r\n</div>\r\n<div class=\"table-container tableContainerHeight mb-2\">\r\n    <div class=\"table-div TableHeight\">\r\n        <table class=\"table table-responsive TableHeight\">\r\n            <thead class=\"text-600\">\r\n                <tr>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;display: flex; align-items: center;\">\r\n                        <input type=\"checkbox\" class=\"form-check-input mb-2\" (change)=\"onChekMultiple($event)\"\r\n                        [value]=\"-1\" [checked]=\"upiCheckedId.length === productBrand.length\"\r\n                        [(ngModel)]=\"allSelect\" />\r\n                    <span *ngIf=\"showDeleteButton()\">\r\n                        <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                            <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                style=\"color : red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                title=\"Delete\"\r\n                                (click)=\" upiCheckedId.length > 0? getUPIcheckId(upiCheckedId):getSingleCheckedId(checkSingleArray)\">\r\n                            </span>\r\n                        </button>\r\n                    </span>\r\n                    </th>\r\n                    <th class=\"text-nowrap varticalAlign\">#</th>\r\n                    <th class=\"text-nowrap varticalAlign\">Brand</th>\r\n                    <th class=\"text-nowrap varticalAlign\"> Status</th>\r\n\r\n                    <th class=\"text-nowrap flex justify-content-end varticalAlign\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of productBrand; let i = index\">\r\n                    <td class=\"checkbox\" style=\"vertical-align: middle;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"upiCheckedId.includes(item.id)\"\r\n                            (change)=\"onChekedsingleCheck($event,item.id)\" [value]=\"item.id\"\r\n                            [disabled]=\"item.isDefault\" />\r\n                    </td>\r\n\r\n                    <td class=\"text-nowrap thAlign\">{{i+1}}</td>\r\n                    <td class=\"text-nowrap thAlign\">{{item.name ? item.name :'NA'}}</td>\r\n                    <td class=\"text-nowrap varticalAlign\">\r\n                        <div class=\"\">\r\n                            <button class=\"toggle-button\" (click)=\"isActive(item.id, item.isActive)\"\r\n                                [ngClass]=\"{'active': item.isActive, 'inactive': !item.isActive}\" [disabled]=\"item.isDefault\">\r\n                                <div class=\"toggle-slider\"></div>\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"flex justify-content-end\">\r\n                            <button class=\"btn \" type=\"button\" [disabled]=\"item.isDefault\">\r\n                                <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Edit\" (click)=\"editBrand(item.id)\"></span>\r\n                            </button>\r\n\r\n                            <button class=\"btn\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                (click)=\"getBrandId(item.id)\" [disabled]=\"item.isDefault\">\r\n                                <span class=\"bi-trash icon-color iconFontSize ps-2 deleteIconColor\"\r\n                                    data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody *ngIf=\"productBrand.length == 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n<div>\r\n    <mat-paginator class=\"float-right mt-2\" *ngIf=\"productBrand.length > 0\" [pageSize]=\"partyPageSize\"\r\n        showFirstLastButtons [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\"\r\n        (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n    </mat-paginator>\r\n    <div class=\"d-flex justify-content-end\">\r\n        <button type=\"submit\" class=\"btn btn-save ms-auto mt-3\" (click)=\"openBrandForm()\">Create New</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered modalWidth\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center modalHeading\" id=\"modalExampleDemoLabel\">\r\n                        Delete Brand?\r\n                    </h2>\r\n\r\n                </div>\r\n                <h4 class=\"text-center modalfontFamily\">\r\n                    Are You Sure To Delete Brand?\r\n                </h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n\r\n                <a class=\"btn btn-outline-danger\" (click)=\"deleteBrand()\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Brand? </h2>\r\n                </div>\r\n                <h4 *ngIf=\"isChecked \" class=\"text-center \">Are You Sure To Delete All Brand?</h4>\r\n                <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are You Sure To Delete Selected Brand?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteBrand()\">Delete All\r\n                </a>\r\n                <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteBrand()\">Delete Selected\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { AddBrandComponent } from '../add-brand/add-brand.component';\r\nimport { EditBrandComponent } from '../edit-brand/edit-brand.component';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-brand-product',\r\n  templateUrl: './brand-product.component.html',\r\n  styleUrls: ['./brand-product.component.scss']\r\n})\r\nexport class BrandProductComponent implements OnInit {\r\n\r\n  brandForm: any;\r\n  productBrand: any = [];\r\n  iseditBrand: boolean = false;\r\n  brandId: any = [];\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  public p = 1;\r\n  public totalrow: any;\r\n  public toatlPages: any;\r\n  public pagesize: number = 1;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSelectsingle: boolean = false;\r\n  public upiCheckedId = [];\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public archiveIconfalse: boolean = false;\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  private searchSubject = new Subject<string>();\r\n  private searchSubscription: Subscription;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  isLoading: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private productService: ProductService, public dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBrand();\r\n    this.productService.productAdded$.subscribe(() => {\r\n      this.getAllBrand();\r\n    });\r\n    // Search\r\n    this.searchSubscription = this.searchSubject\r\n      .pipe(debounceTime(800),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true; // Show the loader when the API call is initiated\r\n        })).subscribe(searchKey => {\r\n          // Call the API with the search key\r\n          if (searchKey.length >= 3) {\r\n            this.getBrandSearch(searchKey.trim());\r\n          } else if (searchKey.trim() === '') {\r\n            // this.isLoading = true; // Hide the loader if the search key is less than the threshold\r\n            this.getAllBrand();\r\n          } else {\r\n            this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n          }\r\n        });\r\n  }\r\n\r\n  getAllBrand() {\r\n    this.productService.getBrandList({\r\n      data:{}, \r\n      userId: this.currentUser.id, \r\n      size: this.partyPageSize, \r\n      page: (this.currentPageNo + 1), \r\n      search:'',\r\n      isActive: '' \r\n\r\n \r\n    }).then((res: any) => {\r\n      this.productBrand = res.data.pageData;\r\n      this.p = res.data.currentPage;\r\n      this.totalrow = res.data.totalrows;\r\n      this.toatlPages = res.data.totalPages;\r\n    })\r\n  }\r\n\r\n  openBrandForm() {\r\n    const dialogRef: MatDialogRef<AddBrandComponent> = this.dialog.open(AddBrandComponent, {\r\n      width: '500px',\r\n      height: 'auto',\r\n      data: {},\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n    });\r\n  }\r\n\r\n  editBrand(brandId) {\r\n    const dialogRef: MatDialogRef<EditBrandComponent> = this.dialog.open(EditBrandComponent, {\r\n      width: '500px',\r\n      height: 'auto',\r\n      data: { brandId: brandId },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n    });\r\n  }\r\n\r\n  getBrandId(brandId) {\r\n    this.brandId.push(brandId);\r\n  }\r\n\r\n  deleteBrand() {\r\n    let body = {\r\n      \"brandId\": this.brandId\r\n    }\r\n    this.productService.deleteBrand(body, this.currentUser.id).then((res) => {\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Brand Deleted Successfully!!!\",\r\n      });\r\n      this.getAllBrand()\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.checkSelect = false;\r\n      this.allSelect = false;\r\n      this.checkSingleArray = [];\r\n      this.archiveIconfalse = false;\r\n      this.allSelect = false;\r\n      this.checkSelectsinglefalse = false;\r\n      this.isChecked = false;\r\n      this.checkSingleArray = [];\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went To Wrong.\",\r\n        });\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n  isActive(id, isActive) {\r\n    const newStatus = !isActive; // Toggle between '1' and '0'\r\n    const body = { \"isActive\": newStatus };\r\n    this.productService.chnageBrandStatus(body, id).then((res: any) => {\r\n      if (res.success) {\r\n        if (newStatus) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Status Has Changed To Active\",\r\n          });\r\n          this.getAllBrand()\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Status Has Changed To Inactive\",\r\n          });\r\n          this.getAllBrand()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  handlePage(e) {\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n    if (this.productBrand.length > 0) {\r\n      this.partyPageSize = e.pageSize;\r\n      const searchInput = document.getElementById('searchInput') as HTMLInputElement;\r\n      if (searchInput.value !== '') {\r\n        this.onSearchInputChange(searchInput.value);\r\n      } else {\r\n        this.getAllBrand();\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  onChekedsingleCheck(e, expenseId) {\r\n    if (e.target.checked) {\r\n      this.upiCheckedId.push(expenseId);\r\n    } else {\r\n      const index = this.upiCheckedId.indexOf(expenseId);\r\n      if (index !== -1) {\r\n        this.upiCheckedId.splice(index, 1);\r\n      }\r\n    }\r\n    // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n    if (e.target.checked) {\r\n      this.checkSingleArray.push(e.target.value);\r\n    }\r\n    else {\r\n      this.checkSingleArray = [];\r\n    }\r\n  }\r\n\r\n  getUPIcheckId(brandId) {\r\n    this.brandId = brandId;\r\n  }\r\n\r\n  getSingleCheckedId(brandId) {\r\n    this.brandId = brandId;\r\n  }\r\n\r\n  showDeleteButton(): boolean {\r\n    return this.upiCheckedId.length > 0;\r\n  }\r\n  \r\n  onChekMultiple($event) {\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    this.upiCheckedId = this.productBrand.map((item) => {\r\n      if (id == -1) {\r\n        if (this.isChecked == true) {\r\n          this.archiveIconfalse = true;\r\n          this.checkSelectsinglefalse = true;\r\n\r\n          this.checkSelectsingle = true;\r\n          return item.id;\r\n        }\r\n        else {\r\n          this.archiveIconfalse = false;\r\n          this.checkSelectsinglefalse = false;\r\n\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  onSearchInputChange(searchKey: string) {\r\n    // Emit the search key to the searchSubject\r\n    this.searchSubject.next(searchKey);\r\n  }\r\n\r\n  getBrandSearch(searchKey: string) {\r\n    setTimeout(() => {\r\n      this.productService.getBrandList({\r\n        data:{}, \r\n        userId: this.currentUser.id, \r\n        size: this.partyPageSize, \r\n        page: (this.currentPageNo + 1), \r\n        search: (searchKey.toLowerCase()),\r\n        isActive: '' \r\n      }).then((res) => {\r\n        if (res.success) {\r\n          this.productBrand = res.data.pageData;\r\n          this.p = res.data.currentPage;\r\n          this.totalrow = res.data.totalrows;\r\n          this.toatlPages = res.data.totalPages;\r\n        }\r\n        // If row's and search key is not specified\r\n        if (this.totalrow === 0 && !(searchKey === \"\")) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Not Found!!!\",\r\n          });\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n      this.isLoading = false; // Hide the loader after the API call is completed\r\n    }, 500);\r\n  }\r\n\r\n}\r\n","<div class=\"row  mb-3\" id=\"showoptionHide\">\r\n    <div class=\"col-3 flex-item searchBar\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"search-form-control pe-5 my-2\" placeholder=\"Category\"\r\n        (input)=\"onSearchInputChange($event.target.value)\">\r\n    </div>\r\n    <div class=\"col-5\"></div>\r\n    <div class=\"col-4\">\r\n        <!-- <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-select matNativeControl disableOptionCentering placeholder=\"Select\">\r\n                <mat-option value=\"Default\">Default</mat-option>\r\n                <mat-option value=\"Default\">Custom</mat-option>\r\n            </mat-select>\r\n        </mat-form-field> -->\r\n    </div>\r\n</div>\r\n<div class=\"table-container tableContainerHeight mb-2\">\r\n    <div class=\"table-div TableHeight\">\r\n        <table class=\"table table-responsive TableHeight\">\r\n            <thead class=\"text-600\">\r\n                <tr>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;display: flex; align-items: center;\">\r\n                        <input type=\"checkbox\" class=\"form-check-input mb-2\" (change)=\"onChekMultiple($event)\"\r\n                        [value]=\"-1\" [checked]=\"upiCheckedId.length === categoryList.length\"\r\n                        [(ngModel)]=\"allSelect\"\r\n                       />\r\n                    <span *ngIf=\"showDeleteButton()\">\r\n                        <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                            <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                style=\"color : red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                title=\"Delete\"\r\n                                (click)=\" upiCheckedId.length > 0? getUPIcheckId(upiCheckedId):getSingleCheckedId(checkSingleArray)\">\r\n                            </span>\r\n                        </button>\r\n                    </span>\r\n                    </th>\r\n                    <th class=\"text-nowrap varticalAlign\">#</th>\r\n                    <th class=\"text-nowrap varticalAlign\">Category</th>\r\n                    <th class=\"text-nowrap varticalAlign\"> Status</th>\r\n\r\n                    <th class=\"text-nowrap flex justify-content-end varticalAlign\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of categoryList;let i = index\">\r\n                    <td class=\"checkbox\" style=\"vertical-align: middle;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"upiCheckedId.includes(item.id)\"\r\n                            (change)=\"onChekedsingleCheck($event,item.id)\" [value]=\"item.id\"\r\n                            [disabled]=\"item.isDefault\" />\r\n                    </td>\r\n                    <td class=\"text-nowrap thAlign\">{{i+1}}</td>\r\n                    <td class=\"text-nowrap thAlign\">{{item.categoryName ? item.categoryName:'NA'}}</td>\r\n                    <td class=\"text-nowrap varticalAlign\">\r\n                        <div class=\"\">\r\n                            <button   class=\"toggle-button\" (click)=\"isActive(item.id, item.isActive)\"\r\n                                [ngClass]=\"{'active': item.isActive, 'inactive': !item.isActive, \r\n                                'disabled': item.isDefault}\">\r\n                                <div class=\"toggle-slider\"></div>\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"flex justify-content-end\">\r\n                            <button  class=\"btn \" type=\"button\"  [disabled]=\"item.isDefault\">\r\n                                <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Edit\" (click)=\"editCategory(item.id)\">\r\n                                </span>\r\n                            </button>\r\n\r\n                            <button   class=\"btn\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                (click)=\"OpenDeleteModal(item.id)\" [disabled]=\"item.isDefault\">\r\n                                <span class=\"bi-trash icon-color iconFontSize ps-2 deleteIconColor\"\r\n                                    data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\">\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody *ngIf=\"categoryList.length === 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n<div>\r\n    <mat-paginator class=\"float-right mt-2\" *ngIf=\"categoryList.length > 0\" [pageSize]=\"partyPageSize\"\r\n        showFirstLastButtons [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\"\r\n        (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n    </mat-paginator>\r\n    <div class=\"d-flex justify-content-end\">\r\n        <button type=\"submit\" class=\"btn btn-save ms-auto mt-3\" (click)=\"openCategoryForm()\">Create New</button>\r\n    </div>\r\n</div>\r\n\r\n<!-- Delete Modal -->\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered modalWidth\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center modalHeading\" id=\"modalExampleDemoLabel\">\r\n                        Delete Category?\r\n                    </h2>\r\n\r\n                </div>\r\n                <h4 class=\"text-center modalfontFamily\">\r\n                    Are you sure to delete category?\r\n                </h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" (click)=\"deleteCategory()\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Category? </h2>\r\n                </div>\r\n                <h4 *ngIf=\"isChecked \" class=\"text-center \">Are You Sure To Delete All Category?</h4>\r\n                <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are You Sure To Delete Selected Category?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteCategory()\">Delete All\r\n                </a>\r\n                <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteCategory()\">Delete Selected\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { AddCategoryComponent } from '../add-category/add-category.component';\r\nimport { EditCategoryComponent } from '../edit-category/edit-category.component';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-category-product',\r\n  templateUrl: './category-product.component.html',\r\n  styleUrls: ['./category-product.component.scss']\r\n})\r\nexport class CategoryProductComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  categoryForm: any;\r\n  categoryList: any= [];\r\n  categoryId: any = [];\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  public p = 1;\r\n  public totalrow: any;\r\n  public toatlPages: any;\r\n  public pagesize: number = 1;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSelectsingle: boolean = false;\r\n  public upiCheckedId = [];\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public archiveIconfalse: boolean = false;\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  private searchSubscription: Subscription;\r\n  private searchSubject = new Subject<string>();\r\n  isLoading: boolean;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private productService: ProductService,\r\n    public dialog: MatDialog,\r\n    private commonService: CommonService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      // Fetch the updated list\r\n      this.getAllCategory();\r\n    });\r\n    this.getAllCategory();\r\n    this.searchSubscription = this.searchSubject\r\n    .pipe(debounceTime(800),\r\n      distinctUntilChanged(),\r\n      tap(() => {\r\n        this.isLoading = true; // Show the loader when the API call is initiated\r\n      })).subscribe(searchKey => {\r\n        // Call the API with the search key\r\n        if (searchKey.length >= 3) {\r\n          this.getSubCategorySearch(searchKey.trim());\r\n        } else if (searchKey === '') {\r\n          // this.isLoading = true; // Hide the loader if the search key is less than the threshold\r\n          this.getAllCategory();\r\n        } else {\r\n          this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllCategory() {\r\n   this.productService.getCategory({\r\n    data:{}, \r\n    userId: this.currentUser.id, \r\n    size: this.partyPageSize, \r\n    page: (this.currentPageNo + 1), \r\n    search: \"\", \r\n    isActive: '' \r\n  }).then((res: any) => {\r\n      if (res.success) {\r\n        this.categoryList = res.data.pageData;\r\n        this.p = res.data.currentPage;\r\n        this.totalrow = res.data.totalrows;\r\n        this.toatlPages = res.data.totalPages;\r\n      }\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n  }\r\n\r\n  openCategoryForm() {\r\n    const dialogRef: MatDialogRef<AddCategoryComponent> = this.dialog.open(AddCategoryComponent, {\r\n      width: '500px',\r\n      height: 'auto',\r\n      data: {},\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n    });\r\n  }\r\n\r\n  editCategory(categoryId) {\r\n    const dialogRef: MatDialogRef<EditCategoryComponent> = this.dialog.open(EditCategoryComponent, {\r\n      width: '500px',\r\n      height: 'auto',\r\n      data: { categoryId: categoryId },\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n    });\r\n  }\r\n\r\n  deleteCategory() {\r\n \r\n      let body={\r\n        categoryId: this.categoryId\r\n      }\r\n    \r\n      this.productService.deleteCategory(body, this.currentUser.id).then((res) => {\r\n        if (res.success) {\r\n          this.commonService.notifyDataAdded();\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Category deleted successfully\"\r\n          })\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n          this.checkSelect = false;\r\n          this.allSelect = false;\r\n          this.checkSingleArray = [];\r\n          this.archiveIconfalse = false;\r\n          this.allSelect = false;\r\n          this.checkSelectsinglefalse = false;\r\n          this.isChecked=false;\r\n          this.checkSingleArray = [];\r\n          this.getAllCategory();\r\n        }\r\n      },\r\n        (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n          }\r\n        });\r\n\r\n    \r\n \r\n  }\r\n\r\n  OpenDeleteModal(id) {\r\n    this.categoryId.push(id);\r\n  }\r\n  isActive(id, isActive) {\r\n    const newStatus = !isActive; // Toggle between '1' and '0'\r\n    const body = { \"isActive\": newStatus };\r\n    this.productService.categoryChangeStatus(body, id).then((res: any) => {\r\n      if (res.success) {\r\n        if (newStatus) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Status Has Changed To Active\",\r\n          });\r\n          this.getAllCategory()\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Status Has Changed To Inactive\",\r\n          });\r\n          this.getAllCategory()\r\n        }\r\n      }\r\n    })\r\n  }\r\n  handlePage(e) {\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n    if (this.categoryList.length > 0) {\r\n      this.partyPageSize = e.pageSize;\r\n      const searchInput = document.getElementById('searchInput') as HTMLInputElement;\r\n      if (searchInput.value !== '') {\r\n        this.onSearchInputChange(searchInput.value);\r\n      } else {\r\n        this.getAllCategory();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  onChekedsingleCheck(e, expenseId){\r\n    if (e.target.checked) {\r\n      this.upiCheckedId.push(expenseId);\r\n    } else {\r\n      const index = this.upiCheckedId.indexOf(expenseId);\r\n      if (index !== -1) {\r\n        this.upiCheckedId.splice(index, 1);\r\n      }\r\n    }\r\n    // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n    if (e.target.checked) {\r\n      this.checkSingleArray.push(e.target.value);\r\n    }\r\n    else {\r\n      this.checkSingleArray = [];\r\n    }\r\n \r\n  }\r\n  getUPIcheckId(categoryId) {\r\n    this.categoryId = categoryId;\r\n\r\n  }\r\n  getSingleCheckedId(categoryId) {\r\n    this.categoryId = categoryId;\r\n\r\n  }\r\n  showDeleteButton(): boolean {\r\n    return this.upiCheckedId.length > 0;\r\n  }\r\n  onChekMultiple($event) {\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    this.upiCheckedId = this.categoryList.filter(item => !item.isDefault).map((item) => {\r\n      if (id == -1) {\r\n        if (this.isChecked == true) {\r\n          this.archiveIconfalse = true;\r\n          this.checkSelectsinglefalse = true;\r\n          this.checkSelectsingle = true;\r\n          return item.id;\r\n        }\r\n        else {\r\n          this.archiveIconfalse = false;\r\n          this.checkSelectsinglefalse = false;\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n        }\r\n      }\r\n    })\r\n  }\r\n  \r\n  onSearchInputChange(searchKey: string) {\r\n    // Emit the search key to the searchSubject\r\n    this.searchSubject.next(searchKey);\r\n  }\r\n\r\n  getSubCategorySearch(searchKey: string) {\r\n    setTimeout(() => {\r\n      this.productService.getCategory({\r\n        data:{}, \r\n        userId: this.currentUser.id, \r\n        size: this.partyPageSize, \r\n        page: (this.currentPageNo + 1), \r\n        search: searchKey.toLowerCase(), \r\n        isActive: '' \r\n      }).then((res) => {\r\n        if(res.success) {\r\n          this.categoryList = res.data.pageData;\r\n          this.p = res.data.currentPage;\r\n          this.totalrow = res.data.totalrows;\r\n          this.toatlPages = res.data.totalPages;\r\n        }\r\n        if (this.totalrow === 0 && !(searchKey === \"\")) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Not Found!!!\",\r\n            });\r\n\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n      this.isLoading = false; // Hide the loader after the API call is completed\r\n    }, 500);\r\n  }\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 class=\"modal-title mb-0 modalHeaderFormat\">Add Custom Field</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" class=\"btn btn-cancel close\" (click)=\"close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"customForm\">    \r\n        <div class=\"col-lg-12 col-md-12 col-xl-12 mt-2\">\r\n            <label class=\"form-label\">Field Name<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matNativeControl required type=\"text\" placeholder=\"Field Name\" formControlName=\"customFieldName\"\r\n                [ngClass]=\"{\r\n                    'is-invalid': (f.customFieldName.invalid && f.customFieldName.touched) && submitted }\" />\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.customFieldName.touched) && f.customFieldName.errors?.required\">\r\n                Field Name is required!\r\n            </mat-error>\r\n        </div>\r\n        \r\n        <div class=\"row mt-2\">\r\n            <!-- Type section always on the right -->\r\n            <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-12\">\r\n              <label class=\"form-label\">Type<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-select formControlName=\"type\" placeholder=\"Type\" required>\r\n                  <mat-option *ngFor=\"let item of types\" [value]=\"item\">\r\n                    {{ item | titlecase }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.type.touched) && f.type.errors?.required\">\r\n                Field Type is required!\r\n              </mat-error>\r\n            </div>\r\n          \r\n            <!-- Options section -->\r\n            <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-12\" *ngIf=\"f.type.value === 'dropdown'\">\r\n              <div formArrayName=\"dropdownOptions\">\r\n                <label class=\"form-label\">Options</label>\r\n                <div class=\"row-container\" *ngFor=\"let option of dropdownOptions.controls; let i = index\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input matInput matNativeControl [formControl]=\"option\" placeholder=\"Option {{ i + 1 }}\" />\r\n                  </mat-form-field>\r\n                  <button mat-icon-button (click)=\"removeDropdownOption(i)\">\r\n                    <mat-icon>close</mat-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          \r\n              <button mat-raised-button class=\"ms-2 mt-2\" type=\"button\" (click)=\"addDropdownOption()\">Add Dropdown Option</button>\r\n            </div>\r\n        </div>          \r\n    </form>\r\n</div>\r\n\r\n<div class=\"modal-footer d-flex justify-content-end\">\r\n    <button type=\"button\" class=\"btn btn-save\" (click)=\"postCustomFields()\">\r\n        Save\r\n    </button>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-custom-fields',\r\n  templateUrl: './add-custom-fields.component.html',\r\n  styleUrls: ['./add-custom-fields.component.scss']\r\n})\r\nexport class AddCustomFieldsComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  customForm: any;\r\n  categoryList: any;\r\n  submitted: boolean = false;\r\n  types: string[] = ['text', 'dropdown'];\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,private productService: ProductService,\r\n    public dialogRef: MatDialogRef<AddCustomFieldsComponent>, private commonService: CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.customForm = this.formBuilder.group({\r\n      customFieldName: [\"\", [Validators.required]],\r\n      type: ['text', Validators.required],\r\n      dropdownOptions: this.formBuilder.array([]) // Initialize as an empty array\r\n    })\r\n    \r\n    // Add one dropdown option initially\r\n    this.dropdownOptions.push(this.formBuilder.control(''))\r\n  }\r\n\r\n  // Getters for easier access to form controls\r\n  get dropdownOptions() {\r\n    return this.customForm.get('dropdownOptions') as FormArray;\r\n  }\r\n\r\n  get f() {\r\n    return this.customForm.controls;\r\n  }\r\n\r\n  postCustomFields(){\r\n    this.submitted = true;\r\n    const optionsArray = this.customForm.value.dropdownOptions.map((option) => {\r\n      return {\r\n        id: ``, // use the index as the id\r\n        optionName: option ? option : '',\r\n      };\r\n    });\r\n    console.log(this.customForm)\r\n    if (this.customForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const body = {\r\n        id: '',\r\n        fieldName: this.customForm.value.customFieldName,\r\n        type: this.customForm.value.type,\r\n        userId: this.currentUser.id,\r\n        isActive: true,\r\n        options: optionsArray ? optionsArray : [],\r\n      };\r\n\r\n      this.productService.postCustomFields(body).then((res: any) => {\r\n        if(res.success){\r\n          this.commonService.notifyDataAdded();\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Customize field added successfully\"\r\n          })\r\n          this.close();\r\n        }\r\n      },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Add a new option to the dropdownOptions array\r\n  addDropdownOption() {\r\n    this.dropdownOptions.push(this.formBuilder.control('', Validators.required));\r\n  }\r\n\r\n  // Remove an option from the dropdownOptions array\r\n  removeDropdownOption(index: number) {\r\n    this.dropdownOptions.removeAt(index);\r\n  }\r\n\r\n  close(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 class=\"modal-title mb-0 modalHeaderFormat\">Update Custom Field</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" class=\"btn btn-cancel close\" (click)=\"close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"customForm\">\r\n        <div class=\"col-lg-12 col-md-12 col-xl-12 mt-2\">\r\n            <label class=\"form-label\">Field<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matNativeControl required type=\"text\" placeholder=\"Field Name\" formControlName=\"customFieldName\"\r\n                [ngClass]=\"{\r\n                    'is-invalid': (f.customFieldName.invalid && f.customFieldName.touched) && submitted }\" />\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.customFieldName.touched) && f.customFieldName.errors?.required\">\r\n                Field Name is required!\r\n            </mat-error>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n            <!-- Type section always on the right -->\r\n            <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-12\">\r\n              <label class=\"form-label\">Type<span class=\"error-asterisk\">*</span></label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-select formControlName=\"type\" placeholder=\"Type\" required>\r\n                  <mat-option *ngFor=\"let item of types\" [value]=\"item\">\r\n                    {{ item | titlecase }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.type.touched) && f.type.errors?.required\">\r\n                Field Type is required!\r\n              </mat-error>\r\n            </div>\r\n          \r\n            <!-- Options section -->\r\n            <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-12\" *ngIf=\"f.type.value === 'dropdown'\">\r\n                <div formArrayName=\"dropdownOptions\">\r\n                  <label class=\"form-label\">Options</label>\r\n                  <div class=\"row-container\" *ngFor=\"let option of dropdownOptions.controls; let i = index\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <input matInput matNativeControl [formControl]=\"option.get('optionName')\" placeholder=\"Option {{ i + 1 }}\" />\r\n                    </mat-form-field>\r\n                    <button mat-icon-button (click)=\"removeDropdownOption(i, option.value.id)\">\r\n                      <mat-icon>close</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              \r\n                <button mat-raised-button class=\"ms-2 mt-2\" type=\"button\" (click)=\"addDropdownOption()\">Add Dropdown Option</button>\r\n            </div>              \r\n        </div> \r\n    </form>\r\n</div>\r\n<div class=\"modal-footer d-flex justify-content-end\">\r\n    <button type=\"button btnMarginRight\"  class=\"btn btn-save\" (click)=\"editField()\">\r\n        Save\r\n    </button>\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-custom-fields',\r\n  templateUrl: './edit-custom-fields.component.html',\r\n  styleUrls: ['./edit-custom-fields.component.scss']\r\n})\r\nexport class EditCustomFieldsComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  customForm: any;\r\n  fieldId: any;\r\n  categoryList: any;\r\n  submitted: boolean = false;\r\n  types: string[] = ['text', 'dropdown'];\r\n  // Define an array to store removed options\r\n  removedOptions: any[] = [];\r\n  // removedOptions: { id: number }[] = [];\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private productService: ProductService,\r\n    public dialogRef: MatDialogRef<EditCustomFieldsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private commonService: CommonService) { \r\n      this.fieldId = this.data.fieldId;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.customForm = this.formBuilder.group({\r\n      customFieldName: [\"\", [Validators.required]],\r\n      type: ['text', Validators.required],\r\n      dropdownOptions: this.formBuilder.array([]) // Initialize as an empty array\r\n    })\r\n    this.getCustomFields()\r\n  }\r\n\r\n  // Getters for easier access to form controls\r\n  get dropdownOptions() {\r\n    return this.customForm.get('dropdownOptions') as FormArray;\r\n  }\r\n\r\n  get f() {\r\n    return this.customForm.controls;\r\n  }\r\n\r\n  getCustomFields() {\r\n    this.productService.getCustomFields({\r\n      data:{}, \r\n      userId: this.currentUser.id, \r\n      size: 1000, \r\n      page: 1, \r\n      search:'', \r\n      isActive: '' \r\n    }).then(res => {\r\n      if(res.success) {\r\n        const customList = res.data.pageData\r\n        const foundField = customList.find(item => item.id === this.fieldId);\r\n\r\n        if (foundField && foundField.fieldName) {\r\n          // Check if the field is a dropdown type\r\n          const isDropdown = foundField.type === 'dropdown';\r\n        \r\n          // Create an object with the initial form values\r\n          const formValues = {\r\n            customFieldName: foundField.fieldName,\r\n            type: foundField.type,\r\n          };\r\n        \r\n          // If it's a dropdown, also set the dropdownOptions field\r\n          if (isDropdown) {\r\n            if (Array.isArray(foundField.productCustomFieldOptions)) {\r\n              // Clear existing controls in dropdownOptions FormArray\r\n              (this.customForm.get('dropdownOptions') as FormArray).clear();\r\n        \r\n              // Assuming dropdownOptions is the FormArray in your form\r\n              const optionsArray = this.formBuilder.array(\r\n                foundField.productCustomFieldOptions.map(option => this.formBuilder.group({\r\n                  id: option.id,\r\n                  optionName: option.optionName,\r\n                  isActive: option.isActive,\r\n                  productCustomFieldId: option.productCustomFieldId,\r\n                }))\r\n              );\r\n        \r\n              // Set the dropdownOptions field\r\n              this.customForm.setControl('dropdownOptions', optionsArray);\r\n            } else {\r\n              // If there are no options, set an empty FormArray\r\n              this.customForm.setControl('dropdownOptions', this.formBuilder.array([]));\r\n            }\r\n          }\r\n        \r\n          // Patch the values to the customForm\r\n          this.customForm.patchValue(formValues);\r\n        }    \r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n      // Handle error.\r\n    })\r\n  }\r\n\r\n  editField(){\r\n    this.submitted = true;\r\n    const optionsArray = this.customForm.value.dropdownOptions.map((option) => {\r\n      return {\r\n        id: option.id,\r\n        optionName: option.optionName,\r\n      };\r\n    });\r\n    if (this.customForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const requestBody = {\r\n        id: `${this.fieldId}`,\r\n        userId: this.currentUser.id,\r\n        fieldName: this.customForm.value.customFieldName,\r\n        type: this.customForm.value.type,\r\n        options: optionsArray ? optionsArray : [],\r\n        removedOptions: this.removedOptions ? this.removedOptions : [],\r\n      };\r\n\r\n      this.productService.postCustomFields(requestBody).then((res: any) => {\r\n        if(res.success){\r\n          this.commonService.notifyDataAdded();\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Field Updated Successfully\"\r\n          })\r\n          this.close();\r\n        }\r\n      },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Add a new option to the dropdownOptions array\r\n  addDropdownOption() {\r\n    const newOption = this.formBuilder.control('', Validators.required);\r\n  \r\n    const dropdownOptionsArray = this.customForm.get('dropdownOptions') as FormArray;\r\n  \r\n    dropdownOptionsArray.push(this.formBuilder.group({\r\n      optionName: newOption\r\n    }));\r\n  }\r\n  \r\n  // Remove an option from the dropdownOptions array\r\n  removeDropdownOption(index: number, id: number) {\r\n    // Get the removed option details\r\n    // const removedOption = this.dropdownOptions.at(index).value;\r\n    \r\n    // Add the removed option to the removedOptions array\r\n    this.removedOptions.push(id);\r\n\r\n    // Remove the option from the FormArray\r\n    this.dropdownOptions.removeAt(index);\r\n  }\r\n  \r\n  close(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"row mb-3\" id=\"showoptionHide\">\r\n    <div class=\"flex-item searchBar\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"search-form-control pe-5 my-2\" placeholder=\"Search\"\r\n        (input)=\"onSearchInputChange($event.target.value)\">\r\n    </div>\r\n    <!-- <div class=\"col-5\"></div>\r\n    <div class=\"col-4\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-select matNativeControl disableOptionCentering placeholder=\"Select\">\r\n                <mat-option value=\"Default\">Default</mat-option>\r\n                <mat-option value=\"Default\">Custom</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div> -->\r\n</div>\r\n<div class=\"table-container tableContainerHeight mb-2\" >\r\n    <div class=\"table-div TableHeight\">\r\n        <table class=\"table table-responsive TableHeight\">\r\n            <thead class=\"text-600\">\r\n                <tr>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;display: flex; align-items: center;\">\r\n                        <input type=\"checkbox\" class=\"form-check-input mb-2\" (change)=\"onChekMultiple($event)\"\r\n                        [value]=\"-1\" [checked]=\"upiCheckedId.length === customFieldList.length\"\r\n                        [(ngModel)]=\"allSelect\" />\r\n                    <span *ngIf=\"showDeleteButton()\">\r\n                        <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                            <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                style=\"color : red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                title=\"Delete\"\r\n                                (click)=\" upiCheckedId.length > 0? getUPIcheckId(upiCheckedId):getSingleCheckedId(checkSingleArray)\">\r\n                            </span>\r\n                        </button>\r\n                    </span>\r\n                    </th>\r\n                     <th class=\"text-nowrap varticalAlign\">#</th>\r\n                    <th class=\"text-nowrap varticalAlign\">Name</th>\r\n                    <th class=\"text-nowrap varticalAlign\">Status</th>\r\n                    <th class=\"text-nowrap flex justify-content-end varticalAlign\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of customFieldList;let i = index\">\r\n                    <td class=\"checkbox\" style=\"vertical-align: middle;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"upiCheckedId.includes(item.id)\"\r\n                            (change)=\"onChekedsingleCheck($event,item.id)\" [value]=\"item.id\"\r\n                            [disabled]=\"item.isDefault\" />\r\n                    </td>                    \r\n                    <td class=\"text-nowrap varticalAlign\">{{i+1}}</td>\r\n                    <td class=\"text-nowrap varticalAlign\">{{item.fieldName}}</td>\r\n                    <td class=\"text-nowrap varticalAlign\">\r\n                        <div class=\"\">\r\n                            <button class=\"toggle-button\" (click)=\"isActive(item.id, item.isActive)\"\r\n                                [ngClass]=\"{'active': item.isActive, 'inactive': !item.isActive}\">\r\n                                <div class=\"toggle-slider\"></div>\r\n                            </button>\r\n                        </div>\r\n                    </td>                    \r\n                    <td>\r\n                        <div class=\"flex justify-content-end\">\r\n                            <button class=\"btn \" type=\"button\" [disabled]=\"item.isDefault\">\r\n                                <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Edit\" (click)=\"editCustomField(item.id)\"></span>\r\n                            </button>\r\n\r\n                            <button class=\"btn\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\" (click)=\"OpenDeleteModal(item.id)\" [disabled]=\"item.isDefault\">\r\n                                <span class=\"bi-trash icon-color iconFontSize ps-2 deleteIconColor\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Delete\">\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody *ngIf=\"customFieldList.length === 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n<mat-paginator class=\"float-right mt-2\" *ngIf=\"customFieldList.length > 0\" [pageSize]=\"customFieldList\"\r\n    showFirstLastButtons [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\"\r\n    (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n</mat-paginator>\r\n<div >\r\n    <div class=\"d-flex justify-content-end\">\r\n        <button type=\"submit\" class=\"btn btn-save ms-auto mt-3\" (click)=\"openCategoryForm()\">Create New</button>\r\n    </div>\r\n</div>\r\n\r\n<!-- Delete Modal -->\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered modalWidth\" role=\"document\" style=\"max-width: 350px\" >\r\n      <div class=\"modal-content position-relative\">\r\n        <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n          <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"></a>\r\n        </div>\r\n        <div class=\"modal-body p-0\">\r\n          <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n            <h2  class=\"mb-1 text-center modalHeading\"\r\n              id=\"modalExampleDemoLabel\">\r\n              Delete Field?\r\n            </h2>\r\n          </div>\r\n          <h4 class=\"text-center modalfontFamily\">\r\n            Are you sure to delete field?\r\n          </h4>\r\n        </div>\r\n        <div class=\"modal-footer justify-content-center\">\r\n          <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n          <a class=\"btn btn-outline-warning\" (click)=\"deleteCategory()\"\r\n            data-bs-dismiss=\"modal\">Delete\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Field? </h2>\r\n                <h4 *ngIf=\"isChecked \" class=\"text-center \">Are You Sure To Delete All Field?</h4>\r\n                <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are You Sure To Delete Selected Field?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteCategory()\">Delete All\r\n                </a>\r\n                <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteCategory()\">Delete Selected\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { AddCustomFieldsComponent } from './components/add-custom-fields/add-custom-fields.component';\r\nimport { EditCustomFieldsComponent } from './components/edit-custom-fields/edit-custom-fields.component';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-custom-fields',\r\n  templateUrl: './custom-fields.component.html',\r\n  styleUrls: ['./custom-fields.component.scss']\r\n})\r\nexport class CustomFieldsComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  categoryForm: any;\r\n  customFieldList: any[] = [];\r\n  FieldId: any=[];\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  public p = 1;\r\n  public totalrow: any;\r\n  public toatlPages: any;\r\n  public pagesize: number = 1;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSelectsingle: boolean = false;\r\n  public upiCheckedId = [];\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public archiveIconfalse: boolean = false;\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  private searchSubscription: Subscription;\r\n  private searchSubject = new Subject<string>();\r\n  isLoading: boolean;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, \r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, \r\n    private productService: ProductService, \r\n    public dialog: MatDialog,\r\n    private commonService: CommonService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      // Fetch the updated list\r\n      this.getCustomFields();\r\n    });\r\n    this.getCustomFields();\r\n    this.searchSubscription = this.searchSubject\r\n    .pipe(debounceTime(800),\r\n      distinctUntilChanged(),\r\n      tap(() => {\r\n        this.isLoading = true; // Show the loader when the API call is initiated\r\n      })).subscribe(searchKey => {\r\n        // Call the API with the search key\r\n        if (searchKey.length >= 3) {\r\n          this.getSubCategorySearch(searchKey.trim());\r\n        } else if (searchKey === '') {\r\n          // this.isLoading = true; // Hide the loader if the search key is less than the threshold\r\n          this.getCustomFields();\r\n        } else {\r\n          this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n        }\r\n      });\r\n  }\r\n\r\n  getCustomFields(){\r\n    this.productService.getCustomFields({\r\n      data:{}, \r\n      userId: this.currentUser.id, \r\n      size: this.partyPageSize, \r\n      page: (this.currentPageNo + 1), \r\n      search: '', \r\n      isActive: '' \r\n    }).then((res: any) => {\r\n      if(res.success){\r\n        this.customFieldList = res.data.pageData;\r\n        this.p = res.data.currentPage;\r\n        this.totalrow = res.data.totalrows;\r\n        this.toatlPages = res.data.totalPages;\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteCategory() {\r\n    console.log(this.FieldId)\r\n    this.productService.deleteCustomFields({ fieldId : this.FieldId }, this.currentUser.id).then((res) => {\r\n      if(res.success) {\r\n        this.commonService.notifyDataAdded();\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Field deleted successfully\"\r\n        })\r\n        this.checkSelectsingle = false;\r\n        this.upiCheckedId = [];\r\n        this.checkSelect = false;\r\n        this.allSelect = false;\r\n        this.checkSingleArray = [];\r\n        this.archiveIconfalse = false;\r\n        this.allSelect = false;\r\n        this.checkSelectsinglefalse = false;\r\n        this.isChecked=false;\r\n        this.checkSingleArray = [];\r\n        this.getCustomFields()\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openCategoryForm() {\r\n    const dialogRef: MatDialogRef<AddCustomFieldsComponent> = this.dialog.open(AddCustomFieldsComponent, {\r\n      width: '600px',\r\n      height: 'auto',\r\n      data: {},\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n    });\r\n  }\r\n\r\n  editCustomField(fieldId) {\r\n    console.log(fieldId);\r\n    const dialogRef: MatDialogRef<EditCustomFieldsComponent> = this.dialog.open(EditCustomFieldsComponent, {\r\n      width: '600px',\r\n      height: 'auto',\r\n      data: { fieldId: fieldId },\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n    });\r\n  }\r\n\r\n  OpenDeleteModal(id){\r\n    console.log(this.FieldId)\r\n    this.FieldId.push(id);\r\n  }\r\n\r\n  isActive(id, isActive) {\r\n    const newStatus = !isActive; // Toggle between '1' and '0'\r\n    const body = { \"isActive\": newStatus };\r\n\r\n    this.productService.putCustomFields(body, id).then((res: any) => {\r\n      if (res.success) {\r\n        if (newStatus) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Status Has Changed To Active\",\r\n            });\r\n          this.getCustomFields()\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Status Has Changed To Inactive\",\r\n            });\r\n          this.getCustomFields()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  handlePage(e){\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n    if (this.customFieldList.length > 0) {\r\n      this.partyPageSize = e.pageSize;\r\n      const searchInput = document.getElementById('searchInput') as HTMLInputElement;\r\n      if (searchInput.value !== '') {\r\n        this.onSearchInputChange(searchInput.value);\r\n      } else {\r\n        this.getCustomFields();\r\n      }\r\n    }\r\n  }\r\n\r\n  onChekedsingleCheck(e, expenseId){\r\n    if (e.target.checked) {\r\n      this.upiCheckedId.push(expenseId);\r\n    } else {\r\n      const index = this.upiCheckedId.indexOf(expenseId);\r\n      if (index !== -1) {\r\n        this.upiCheckedId.splice(index, 1);\r\n      }\r\n    }\r\n    // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n    if (e.target.checked) {\r\n      this.checkSingleArray.push(e.target.value);\r\n    }\r\n    else {\r\n      this.checkSingleArray = [];\r\n    }\r\n  }\r\n  \r\n  getUPIcheckId(FieldId) {\r\n    this.FieldId = FieldId;\r\n  }\r\n\r\n  getSingleCheckedId(FieldId) {\r\n    this.FieldId = FieldId;\r\n  }\r\n\r\n  showDeleteButton(): boolean {\r\n    return this.upiCheckedId.length > 0;\r\n  }\r\n\r\n  onChekMultiple($event) {\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    this.upiCheckedId = this.customFieldList.map((item) => {\r\n      if (id == -1) {\r\n        if (this.isChecked == true) {\r\n          this.archiveIconfalse = true;\r\n          this.checkSelectsinglefalse = true;\r\n\r\n          this.checkSelectsingle = true;\r\n          return item.id;\r\n        }\r\n        else {\r\n          this.archiveIconfalse = false;\r\n          this.checkSelectsinglefalse = false;\r\n\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n        }\r\n      }\r\n    })\r\n  }\r\n \r\n  onSearchInputChange(searchKey: string) {\r\n    // Emit the search key to the searchSubject\r\n    this.searchSubject.next(searchKey);\r\n  }\r\n\r\n  getSubCategorySearch(searchKey: string) {\r\n    setTimeout(() => {\r\n      this.productService.getCustomFields({\r\n        data:{}, \r\n        userId: this.currentUser.id, \r\n        size: this.partyPageSize, \r\n        page: (this.currentPageNo + 1), \r\n        search: (searchKey.toLowerCase()), \r\n        isActive: '' \r\n      }).then((res) => {\r\n        if(res.success) {\r\n          this.customFieldList = res.data.pageData;\r\n          this.p = res.data.currentPage;\r\n          this.totalrow = res.data.totalrows;\r\n          this.toatlPages = res.data.totalPages;\r\n        }\r\n        if (this.totalrow === 0 && !(searchKey === \"\")) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Not Found!!!\",\r\n            });\r\n\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n      this.isLoading = false; // Hide the loader after the API call is completed\r\n    }, 500);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 class=\"modal-title mb-0 modalHeaderFormat \">Update Brand</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" class=\"btn btn-cancel close\" (click)=\"clearInput()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"brandForm\">\r\n        <div class=\"col-lg-6 col-md-12 col-xl-6  mt-2\">\r\n            <label class=\"form-label\">Brand<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matNativeControl required type=\"text\" placeholder=\"Brand\" formControlName=\"brandName\" [ngClass]=\"{\r\n                    'is-invalid': (f.brandName.invalid && f.brandName.touched) && submitted }\" />\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.brandName.touched) && f.brandName.errors?.required\">\r\n                Brand Name is required!\r\n            </mat-error>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer d-flex justify-content-end\">\r\n    <button type=\"button btnMarginRight\" class=\"btn btn-save\" (click)=\"addBrand()\">Save</button>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-brand',\r\n  templateUrl: './edit-brand.component.html',\r\n  styleUrls: ['./edit-brand.component.scss']\r\n})\r\nexport class EditBrandComponent implements OnInit {\r\n  brandForm: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  submitted: boolean = false;\r\n  brandId: any;\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private productService: ProductService,\r\n    public dialogRef: MatDialogRef<EditBrandComponent>, private router: Router, @Inject(MAT_DIALOG_DATA) public brandData: any,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.brandId = this.brandData.brandId\r\n    this.getBrandById()\r\n    this.brandForm = this.formBuilder.group({\r\n      brandName: [\"\", [Validators.required]],\r\n    })\r\n  }\r\n  getBrandById() {\r\n    this.productService.getBrandListById({}, this.currentUser.id, this.brandId).then((res: any) => {\r\n      if (res) {\r\n        this.brandForm.patchValue({\r\n          brandName: res.data.data.name\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  clearInput() {\r\n    this.dialogRef.close();\r\n  }\r\n  get f() {\r\n    return this.brandForm.controls;\r\n  }\r\n\r\n  addBrand() {\r\n    this.submitted = true;\r\n    if (this.brandForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      let body = {\r\n        \"id\": this.brandId.toString(),\r\n        \"name\": this.brandForm.controls.brandName.value,\r\n\r\n        \"userId\": this.currentUser.id,\r\n\r\n      }\r\n      this.productService.postBrand(body).then((res) => {\r\n        if (res) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Brand Updated Successfully!!!\",\r\n          });\r\n          this.productService.notifyProductAdded();\r\n          this.dialogRef.close();\r\n        }\r\n\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went To Wrong.\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 class=\"modal-title mb-0 modalHeaderFormat\">Update Category</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" class=\"btn btn-cancel close\" (click)=\"close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"categoryForm\">\r\n     \r\n        <div class=\"col-lg-6 col-md-12 col-xl-6  mt-2\">\r\n            <label class=\"form-label\">Category<span class=\"error-asterisk\">*</span></label>\r\n             <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matNativeControl required type=\"text\" placeholder=\"Category\" formControlName=\"categoryName\" \r\n                [ngClass]=\"{\r\n                    'is-invalid': (f.categoryName.invalid && f.categoryName.touched) && submitted }\"/>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger \" *ngIf=\"(submitted || f.categoryName.touched) && f.categoryName.errors?.required\">\r\n                    Category Name is required!\r\n            </mat-error>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer d-flex justify-content-end\">\r\n    <button type=\"button btnMarginRight\"  class=\"btn btn-save\" (click)=\"editCategory()\">\r\n        Save\r\n    </button>\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-category',\r\n  templateUrl: './edit-category.component.html',\r\n  styleUrls: ['./edit-category.component.scss']\r\n})\r\nexport class EditCategoryComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  categoryForm: any;\r\n  categoryId: any;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private productService: ProductService,\r\n    public dialogRef: MatDialogRef<EditCategoryComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private commonService: CommonService) {\r\n    this.categoryId = this.data.categoryId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryForm = this.formBuilder.group({\r\n      categoryName: [\"\", [Validators.required]],\r\n    })\r\n    this.getCategory()\r\n  }\r\n\r\n  get f() {\r\n    return this.categoryForm.controls;\r\n  }\r\n\r\n  getCategory() {\r\n    this.productService.getCategory({\r\n      data:{}, \r\n      userId: this.currentUser.id, \r\n      size: 1000, \r\n      page: (1), \r\n      search:'', \r\n      isActive: '' \r\n    }).then(res => {\r\n      if (res.success) {\r\n        const categoryList = res.data.pageData\r\n        // Find the category by ID\r\n        const foundCategory = categoryList.find(category => category.id === this.categoryId);\r\n        if (foundCategory.categoryName) {\r\n          this.categoryForm.patchValue({\r\n            categoryName: foundCategory.categoryName\r\n          });\r\n        }\r\n      }\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n        // Handle error.\r\n      })\r\n  }\r\n\r\n  editCategory() {\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const newCategory = {\r\n        id: `${this.categoryId}`, // Converts categoryIdStr to string if it's not already\r\n        categoryName: this.categoryForm.value.categoryName,\r\n        // isDefault: true, // Adjust these values as needed\r\n        userId: this.currentUser.id,\r\n        isActive: true,\r\n      };\r\n\r\n      this.productService.postCategory(newCategory).then((res: any) => {\r\n        if (res.success) {\r\n          this.commonService.notifyDataAdded();\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Category Updated Successfully\"\r\n          })\r\n          this.close();\r\n        }\r\n      },\r\n        (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went To Wrong.\",\r\n            });\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 class=\"modal-title mb-0 modalHeaderFormat\">Update Sub Category</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button type=\"button\" class=\"btn btn-cancel close\" (click)=\"close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"subCategoryFrom\">\r\n        <div class=\"col-lg-12 col-md-12 col-xl-12 mt-2\">\r\n            <label class=\"form-label\">Category<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-select placeholder=\"Select Category\" formControlName=\"category\">\r\n                    <mat-option *ngFor=\"let category of categoryList\" [value]=\"category.id\" [ngClass]=\"{\r\n                        'is-invalid': (f.category.invalid && f.category.touched) && submitted }\">\r\n                        {{ category.categoryName }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.category.touched) && f.category.errors?.required\">\r\n                Category is required!\r\n            </mat-error>\r\n        </div>        \r\n        <div class=\"col-lg-12 col-md-12 col-xl-12 mt-2\">\r\n            <label class=\"form-label\">Sub Category<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input matNativeControl required type=\"text\" placeholder=\"Sub category\" formControlName=\"subCategoryName\"\r\n                [ngClass]=\"{\r\n                    'is-invalid': (f.subCategoryName.invalid && f.subCategoryName.touched) && submitted }\" />\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.subCategoryName.touched) && f.subCategoryName.errors?.required\">\r\n               Sub Category is required!\r\n            </mat-error>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer d-flex justify-content-end\">\r\n    <button type=\"button btnMarginRight\"  class=\"btn btn-save\" (click)=\"editCategory()\">\r\n        Save\r\n    </button>\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-sub-category',\r\n  templateUrl: './edit-sub-category.component.html',\r\n  styleUrls: ['./edit-sub-category.component.scss']\r\n})\r\nexport class EditSubCategoryComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  subCategoryFrom: any;\r\n  subCategoryId: any;\r\n  categoryList: any;\r\n  submitted: boolean = false;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,private productService: ProductService,\r\n    public dialogRef: MatDialogRef<EditSubCategoryComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private commonService: CommonService) { \r\n      this.subCategoryId = this.data.subCategoryId;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.subCategoryFrom = this.formBuilder.group({\r\n      subCategoryName: [\"\", [Validators.required]],\r\n      category: [\"\", [Validators.required]],\r\n    })\r\n    this.getSubCategoryById()\r\n    this.getAllCategory()\r\n  }\r\n\r\n  getAllCategory(){\r\n    this.productService.getCategory({\r\n      data:{}, \r\n      userId: this.currentUser.id, \r\n      size: 1000, \r\n      page: (1), \r\n      search:'', \r\n      isActive: '' \r\n    }).then((res: any) => {\r\n      if(res.success){\r\n        this.categoryList = res.data.pageData;\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  getSubCategoryById() {\r\n    this.productService.getSubCategoryById({}, this.currentUser.id, this.subCategoryId).then(res => {\r\n      if(res.success) {\r\n        const subCategoryList = res.data.data\r\n        this.subCategoryFrom.patchValue({\r\n          subCategoryName: subCategoryList.name,\r\n          category: subCategoryList.categoryId\r\n        });\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n      // Handle error.\r\n    })\r\n  }\r\n  get f() {\r\n    return this.subCategoryFrom.controls;\r\n  }\r\n  editCategory() {\r\n    this.submitted = true;\r\n    if (this.subCategoryFrom.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const newCategory = {\r\n        id: `${this.subCategoryId}`, // Check if the server requires an ID or if it's auto-generated\r\n        name: this.subCategoryFrom.value.subCategoryName,\r\n        userId: this.currentUser.id,\r\n        categoryId: `${this.subCategoryFrom.value.category}`,\r\n      };\r\n\r\n      this.productService.postSubCategory(newCategory).then((res: any) => {\r\n        if (res.success) {\r\n          this.commonService.notifyDataAdded();\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Sub Category Updated Successfully\"\r\n          })\r\n          this.close();\r\n        }\r\n      },\r\n        (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  close(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-product-main',\r\n  templateUrl: './product-main.component.html',\r\n  styleUrls: ['./product-main.component.scss']\r\n})\r\nexport class ProductMainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"component-container container-fluid bg-white p-4\">\r\n    <div id=\"navPanel\" class=\"row\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row page-nav-link mt-3\">\r\n          <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./product-settings\" routerLinkActive=\"active\">Product Setting</a>\r\n          </div>\r\n          <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./invoice_generate\" routerLinkActive=\"active\">Invoice Setting</a>\r\n          </div>\r\n          <div class=\"col-lg-6 \"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"mt-1\">\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CategoryProductComponent } from './category-product/category-product.component';\r\nimport { SubCategoryProductComponent } from './sub-category-product/sub-category-product.component';\r\nimport { BrandProductComponent } from './brand-product/brand-product.component';\r\nimport { ProductMainComponent } from './product-main/product-main.component';\r\nimport { ProductSettingComponent } from './product-setting.component';\r\nimport { CustomFieldsComponent } from './custom-fields/custom-fields.component';\r\nimport { InvoiceReceiptUIComponent } from '../setting-module/invoice-receipt-ui/invoice-receipt-ui.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: ProductMainComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'product-settings',\r\n        pathMatch: 'full'\r\n      },\r\n      { \r\n        path: \"invoice_generate\",\r\n        component: InvoiceReceiptUIComponent\r\n      },\r\n      {\r\n        path:'product-settings',\r\n        component: ProductSettingComponent,\r\n        children: [\r\n          {\r\n            path:'',\r\n            redirectTo: 'category_list',\r\n            pathMatch: 'full'\r\n          },\r\n          {\r\n            path:'category_list',\r\n            component: CategoryProductComponent,\r\n          },\r\n          {\r\n            path:'sub_category_list',\r\n            component: SubCategoryProductComponent,\r\n          },\r\n          {\r\n            path:'brand_list',\r\n            component: BrandProductComponent,\r\n          },\r\n          {\r\n            path:'custom-fields',\r\n            component: CustomFieldsComponent,\r\n          },\r\n        ]\r\n      },  \r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductSettingRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-product-setting',\r\n  templateUrl: './product-setting.component.html',\r\n  styleUrls: ['./product-setting.component.scss']\r\n})\r\nexport class ProductSettingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-2\">\r\n    <!-- Side panel -->\r\n    <div class=\"col-xxl-2 col-xl-2 col-lg-2 col-md-2 col-sm-12\">\r\n        <div class=\"side-panel\">\r\n            <div class=\"side-panel-item\">\r\n                <a class=\"side-panel-link\" routerLink=\"./category_list\" routerLinkActive='active'>Category</a>\r\n            </div>\r\n            <div class=\"side-panel-item\">\r\n                <a class=\"side-panel-link\" routerLink=\"./sub_category_list\" routerLinkActive='active'>Sub Category</a>\r\n            </div>\r\n            <div class=\"side-panel-item\">\r\n                <a class=\"side-panel-link\" routerLink=\"./brand_list\" routerLinkActive='active'>Brand</a>\r\n            </div>\r\n        </div>\r\n        <div class=\"side-panel\">\r\n            <div class=\"side-panel-item\">\r\n                <a class=\"side-panel-link\" routerLink=\"./custom-fields\" routerLinkActive='active'>Custom Fields</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- Main content area -->\r\n    <div class=\"col-xxl-10 col-xl-10 col-lg-10 col-md-8 col-sm-12 mt-2 main-content\">\r\n        <router-outlet></router-outlet>\r\n    </div>    \r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductSettingRoutingModule } from './product-setting-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { ProductMainComponent } from './product-main/product-main.component';\r\nimport { BrandProductComponent } from './brand-product/brand-product.component';\r\nimport { CategoryProductComponent } from './category-product/category-product.component';\r\nimport { SubCategoryProductComponent } from './sub-category-product/sub-category-product.component';\r\nimport { AddCategoryComponent } from './add-category/add-category.component';\r\nimport { EditCategoryComponent } from './edit-category/edit-category.component';\r\nimport { AddSubCategoryComponent } from './add-sub-category/add-sub-category.component';\r\nimport { EditSubCategoryComponent } from './edit-sub-category/edit-sub-category.component';\r\nimport { AddBrandComponent } from './add-brand/add-brand.component';\r\nimport { EditBrandComponent } from './edit-brand/edit-brand.component';\r\nimport { ProductSettingComponent } from './product-setting.component';\r\nimport { CustomFieldsComponent } from './custom-fields/custom-fields.component';\r\nimport { AddCustomFieldsComponent } from './custom-fields/components/add-custom-fields/add-custom-fields.component';\r\nimport { EditCustomFieldsComponent } from './custom-fields/components/edit-custom-fields/edit-custom-fields.component';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductMainComponent,\r\n    BrandProductComponent,\r\n    CategoryProductComponent,\r\n    SubCategoryProductComponent,\r\n    AddCategoryComponent,\r\n    EditCategoryComponent,\r\n    AddSubCategoryComponent,\r\n    EditSubCategoryComponent,\r\n    AddBrandComponent,\r\n    EditBrandComponent,\r\n    ProductSettingComponent,\r\n    CustomFieldsComponent,\r\n    AddCustomFieldsComponent,\r\n    EditCustomFieldsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProductSettingRoutingModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,    \r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class ProductSettingModule { }\r\n","<div class=\"row  mb-3\" id=\"showoptionHide\">\r\n    <div class=\"col-3 flex-item searchBar\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"search-form-control pe-5 my-2\" placeholder=\"Sub Category\"\r\n        (input)=\"onSearchInputChange($event.target.value)\">\r\n    </div>\r\n    <div class=\"col-5\"></div>\r\n    <div class=\"col-4\">\r\n        <!-- <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-select matNativeControl disableOptionCentering placeholder=\"Select\">\r\n                <mat-option value=\"Default\">Default</mat-option>\r\n                <mat-option value=\"Default\">Custom</mat-option>\r\n            </mat-select>\r\n        </mat-form-field> -->\r\n    </div>\r\n</div>\r\n<div class=\"table-container tableContainerHeight mb-2\">\r\n    <div class=\"table-div TableHeight\">\r\n        <table class=\"table table-responsive TableHeight\">\r\n            <thead class=\"text-600\">\r\n                <tr>\r\n\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;display: flex; align-items: center;\">\r\n                        <input type=\"checkbox\" class=\"form-check-input mb-2\" (change)=\"onChekMultiple($event)\"\r\n                        [value]=\"-1\" [checked]=\"upiCheckedId.length === subCategoryList.length\"\r\n                        [(ngModel)]=\"allSelect\" />\r\n                    <span *ngIf=\"showDeleteButton()\">\r\n                        <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                            <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                style=\"color : red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                title=\"Delete\"\r\n                                (click)=\" upiCheckedId.length > 0? getUPIcheckId(upiCheckedId):getSingleCheckedId(checkSingleArray)\">\r\n                            </span>\r\n                        </button>\r\n                    </span>\r\n                    </th>\r\n                    <th class=\"text-nowrap varticalAlign\">#</th>\r\n                    <th class=\"text-nowrap varticalAlign\"> Sub Category</th>\r\n                    <th class=\"text-nowrap varticalAlign\"> Category</th>\r\n                    <th class=\"text-nowrap varticalAlign\"> Status</th>\r\n                    <th class=\"text-nowrap flex justify-content-end varticalAlign\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of subCategoryList;let i = index\">\r\n                    <td class=\"checkbox\" style=\"vertical-align: middle;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"upiCheckedId.includes(item.id)\"\r\n                            (change)=\"onChekedsingleCheck($event,item.id)\" [value]=\"item.id\"\r\n                            [disabled]=\"item.isDefault\" />\r\n                    </td>\r\n                    <td class=\"text-nowrap varticalAlign\">{{i+1}}</td>\r\n                    <td class=\"text-nowrap varticalAlign\">{{item.name ? item.name :'NA'}}</td>\r\n                    <td class=\"text-nowrap varticalAlign\">{{ item && item.category ? item.category.categoryName : 'NA'}}\r\n                    </td>\r\n                    <td class=\"text-nowrap varticalAlign\">\r\n                        <div class=\"\">\r\n                            <button class=\"toggle-button\" (click)=\"isActive(item.id, item.isActive)\"\r\n                                [ngClass]=\"{'active': item.isActive, 'inactive': !item.isActive}\" [disabled]=\"item.isDefault\">\r\n                                <div class=\"toggle-slider\"></div>\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"flex justify-content-end\">\r\n                            <button class=\"btn \" type=\"button\" [disabled]=\"item.isDefault\">\r\n                                <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Edit\" (click)=\"editCategory(item.id)\"></span>\r\n                            </button>\r\n\r\n                            <button class=\"btn\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                (click)=\"OpenDeleteModal(item.id)\" [disabled]=\"item.isDefault\">\r\n                                <span class=\"bi-trash icon-color iconFontSize ps-2 deleteIconColor\"\r\n                                    data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\">\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody *ngIf=\"subCategoryList.length === 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n</div>\r\n<div>\r\n    <mat-paginator class=\"float-right mt-2\" *ngIf=\"subCategoryList.length > 0\" [pageSize]=\"partyPageSize\"\r\n        showFirstLastButtons [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\"\r\n        (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n    </mat-paginator>\r\n    <div class=\"d-flex justify-content-end\">\r\n        <button type=\"submit\" class=\"btn btn-save ms-auto mt-3\" (click)=\"openCategoryForm()\">Create New</button>\r\n    </div>\r\n</div>\r\n\r\n<!-- Delete Modal -->\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered modalWidth\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center modalHeading\" id=\"modalExampleDemoLabel\">\r\n                        Delete Sub Category?\r\n                    </h2>\r\n\r\n                </div>\r\n                <h4 class=\"text-center modalfontFamily\">\r\n                    Are you sure to delete sub category?\r\n                </h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n\r\n                <a class=\"btn btn-outline-danger\" (click)=\"deleteCategory()\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Sub Category? </h2>\r\n                </div>\r\n                <!-- <h4   *ngIf=\"!isChecked  && !checkSingleArray \"class=\"text-center \">Are you sure to delete this UPI?</h4> -->\r\n                <h4 *ngIf=\"isChecked \" class=\"text-center \">Are You Sure To Delete All Sub Category?</h4>\r\n                <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are You Sure To Delete Selected Sub Category?</h4>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <!-- <a   *ngIf=\"!isChecked  && !checkSingleArray \" class=\"btn btn-outline-primary\" data-bs-dismiss=\"modal\" (click)=\"deletExpenseById()\">Delete\r\n                </a> -->\r\n                <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteCategory()\">Delete All\r\n                </a>\r\n                <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteCategory()\">Delete Selected\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AddSubCategoryComponent } from '../add-sub-category/add-sub-category.component';\r\nimport { EditSubCategoryComponent } from '../edit-sub-category/edit-sub-category.component';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sub-category-product',\r\n  templateUrl: './sub-category-product.component.html',\r\n  styleUrls: ['./sub-category-product.component.scss']\r\n})\r\nexport class SubCategoryProductComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  categoryForm: any;\r\n  subCategoryList: any = [];\r\n  subCategoryId: any = [];\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  public p = 1;\r\n  public totalrow: any;\r\n  public toatlPages: any;\r\n  public pagesize: number = 1;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSelectsingle: boolean = false;\r\n  public upiCheckedId = [];\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public archiveIconfalse: boolean = false;\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  private searchSubject = new Subject<string>();\r\n  private searchSubscription: Subscription;\r\n  isLoading: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, \r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, \r\n    private productService: ProductService, \r\n    public dialog: MatDialog,\r\n    private commonService: CommonService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      // Fetch the updated list\r\n      this.getAllCategory();\r\n    });\r\n    this.getAllCategory();\r\n    this.searchSubscription = this.searchSubject\r\n      .pipe(debounceTime(800),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true; // Show the loader when the API call is initiated\r\n        })).subscribe(searchKey => {\r\n          // Call the API with the search key\r\n          if (searchKey.length >= 3) {\r\n            this.getSubCategorySearch(searchKey.trim());\r\n          } else if (searchKey === '') {\r\n            // this.isLoading = true; // Hide the loader if the search key is less than the threshold\r\n            this.getAllCategory();\r\n          } else {\r\n            this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n          }\r\n        });\r\n  }\r\n\r\n  getAllCategory(){\r\n    this.productService.getSubCategory({\r\n      data: {}, userId: this.currentUser.id, size: this.partyPageSize, page: (this.currentPageNo + 1), categoryId: '', isActive:'', search: ''\r\n    }).then((res: any) => {\r\n      if(res.success){\r\n        this.subCategoryList = res.data.pageData;\r\n        this.p = res.data.currentPage;\r\n        this.totalrow = res.data.totalrows;\r\n        this.toatlPages = res.data.totalPages;\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteCategory() {\r\n    \r\n    this.productService.deleteSubCategory({ subCategoryId : this.subCategoryId }, this.currentUser.id).then((res) => {\r\n      if(res.success) {\r\n        this.commonService.notifyDataAdded();\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Category deleted successfully\"\r\n        })\r\n        this.getAllCategory();\r\n        this.checkSelectsingle = false;\r\n        this.upiCheckedId = [];\r\n        this.checkSelect = false;\r\n        this.allSelect = false;\r\n        this.checkSingleArray = [];\r\n        this.archiveIconfalse = false;\r\n        this.allSelect = false;\r\n        this.checkSelectsinglefalse = false;\r\n        this.isChecked=false;\r\n        this.checkSingleArray = [];\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openCategoryForm() {\r\n    const dialogRef: MatDialogRef<AddSubCategoryComponent> = this.dialog.open(AddSubCategoryComponent, {\r\n      width: '500px',\r\n      height: 'auto',\r\n      data: {},\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n    });\r\n  }\r\n\r\n  editCategory(subCategoryId) {\r\n    const dialogRef: MatDialogRef<EditSubCategoryComponent> = this.dialog.open(EditSubCategoryComponent, {\r\n      width: '500px',\r\n      height: 'auto',\r\n      data: { subCategoryId: subCategoryId },\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n    });\r\n  }\r\n\r\n  OpenDeleteModal(id){\r\n    this.subCategoryId.push(id);\r\n  }\r\n\r\n  isActive(id, isActive) {\r\n    const newStatus = !isActive // Toggle between '1' and '0'\r\n    const body = { \"isActive\": newStatus };\r\n    this.productService.subCategoryChangeStatus(body, id).then((res: any) => {\r\n      if (res.success) {\r\n        if (newStatus) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Status Has Changed To Active\",\r\n            });\r\n          this.getAllCategory()\r\n        } else {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Status Has Changed To Inactive\",\r\n            });\r\n          this.getAllCategory()\r\n        }\r\n      }\r\n    })\r\n  }\r\n  handlePage(e) {\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n    if (this.subCategoryList.length > 0) {\r\n      this.partyPageSize = e.pageSize;\r\n      const searchInput = document.getElementById('searchInput') as HTMLInputElement;\r\n      if (searchInput.value !== '') {\r\n        this.onSearchInputChange(searchInput.value);\r\n      } else {\r\n        this.getAllCategory();\r\n      }\r\n    }\r\n  }\r\n\r\n    \r\n  onChekedsingleCheck(e, expenseId){\r\n    if (e.target.checked) {\r\n      this.upiCheckedId.push(expenseId);\r\n    } else {\r\n      const index = this.upiCheckedId.indexOf(expenseId);\r\n      if (index !== -1) {\r\n        this.upiCheckedId.splice(index, 1);\r\n      }\r\n    }\r\n    // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n    if (e.target.checked) {\r\n      this.checkSingleArray.push(e.target.value);\r\n    }\r\n    else {\r\n      this.checkSingleArray = [];\r\n    }\r\n \r\n  }\r\n  getUPIcheckId(subCategoryId) {\r\n    this.subCategoryId = subCategoryId;\r\n\r\n  }\r\n  getSingleCheckedId(subCategoryId) {\r\n    this.subCategoryId = subCategoryId;\r\n\r\n  }\r\n  showDeleteButton(): boolean {\r\n    return this.upiCheckedId.length > 0;\r\n  }\r\n  onChekMultiple($event) {\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    this.upiCheckedId = this.subCategoryList.map((item) => {\r\n      if (id == -1) {\r\n        if (this.isChecked == true) {\r\n          this.archiveIconfalse = true;\r\n          this.checkSelectsinglefalse = true;\r\n\r\n          this.checkSelectsingle = true;\r\n          return item.id;\r\n        }\r\n        else {\r\n          this.archiveIconfalse = false;\r\n          this.checkSelectsinglefalse = false;\r\n\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  onSearchInputChange(searchKey: string) {\r\n    // Emit the search key to the searchSubject\r\n    this.searchSubject.next(searchKey);\r\n  }\r\n\r\n  getSubCategorySearch(searchKey: string) {\r\n    setTimeout(() => {\r\n      this.productService.getSubCategory({data: {}, userId : this.currentUser.id, size : this.partyPageSize, page: (this.currentPageNo + 1), search: (searchKey.toLowerCase()), categoryId: '', isActive: ''}).then((res) => {\r\n        if(res.success) {\r\n          this.subCategoryList = res.data.pageData;\r\n          this.p = res.data.currentPage;\r\n          this.totalrow = res.data.totalrows;\r\n          this.toatlPages = res.data.totalPages;\r\n        }\r\n        if (this.totalrow === 0 && !(searchKey === \"\")) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Not Found!!!\",\r\n            });\r\n\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n      this.isLoading = false; // Hide the loader after the API call is completed\r\n    }, 500);\r\n  }\r\n\r\n}\r\n"]}