{"version":3,"mappings":"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","names":["EmpProfileserviceService","httpClient","rxjs__WEBPACK_IMPORTED_MODULE_2__","MyProfileSource","asObservable","next","data","empId","Promise","resolve","reject","call","src_app_helpers_url_constants__WEBPACK_IMPORTED_MODULE_0__","subscribe","res","err","educationId","userId","docId","IdsId","_angular_core__WEBPACK_IMPORTED_MODULE_3__","factory","providedIn","DocumentIdcAddFormComponent","dialog","dialogRef","formBuilder","toastService","titleCasePipe","educationService","UserData","productService","JSON","parse","localStorage","getItem","createIdcForm","idcForm","group","selectIdtype","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","enterId","alphabeticOnlyValidator","controls","control","value","selectType","test","invalidAadhar","invalidPassport","invalidDrivingLicense","invalidElection","invalidPAN","invalidRation","event","source","submitted","invalid","openErrorSnackBar","Body","productPicUrl","currentEmployee","id","PostIDCORCert","then","notifyprofileAdded","openSnackBar","close","error","expose","transform","error_message","e","formdata","FormData","reader","FileReader","file","target","files","readAsDataURL","set","PostImagePdf","location","console","log","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","selectors","decls","vars","consts","template","ctx","EditIDFormComponent","IDsId","getSingleIdDataById","GetIdDataBYId","idType","patchValue","uploadDocument","UpdateIDCORCert","_angular_core__WEBPACK_IMPORTED_MODULE_5__","EmployeeDocumentComponent","rolesPermissionsService","getEmployeeByEmployeeId","leadAdded$","getIDCData","getIDOrCERT","idsData","getEmployeeById","parentId","arg0","Error","open","_document_idc_add_form_document_idc_add_form_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","disableClose","position","right","afterClosed","result","_document_idc_add_form_edit_idform_edit_idform_component__WEBPACK_IMPORTED_MODULE_1__","DeleteIdDocuments","AddEducationEmployeeComponent","cdr","router","createEductionForm","educationForm","university","qualificationType","courseName","courseType","courseStartDate","courseEndDate","addEducationDetails","selectedDate","get","isNaN","getTime","setValue","Date","_angular_core__WEBPACK_IMPORTED_MODULE_4__","EddEducationEmployeeComponent","getEducationById","valueChanges","newValue","moment__WEBPACK_IMPORTED_MODULE_0__","format","EducationUpdateByEmployeeId","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","GetEducationByEducationId","startDate","endDate","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","EmployeeEducationComponent","getEducationDetails","getAllEducationDetails","educationData","length","_add_education_employee_add_education_employee_component__WEBPACK_IMPORTED_MODULE_1__","_edd_education_employee_edd_education_employee_component__WEBPACK_IMPORTED_MODULE_0__","deleteEducation","imagelink","DataLink","pdfName","file_saver__WEBPACK_IMPORTED_MODULE_2___default","EmployeePersonalDetailsComponent","roleService","profileService","partyService","getProfileData","ProfileData","employeeId","employee","firstName","email","mobileNumber","mobile","profileImagepath","profileImage","address","useraddresses","country","state","city","pincode","gender","onload","postProfileImage","notifyPartyAdded","EmployeeWorkComponent","DateOfJoining","joiningDate","assets","designation","jobrole","roleAssign","department","empstatus","isActive","status","_angular_core__WEBPACK_IMPORTED_MODULE_2__","routes","path","component","_my_profile_employee_my_profile_employee_component__WEBPACK_IMPORTED_MODULE_4__","children","redirectTo","pathMatch","_employee_personal_details_employee_personal_details_component__WEBPACK_IMPORTED_MODULE_0__","_employee_work_employee_work_component__WEBPACK_IMPORTED_MODULE_1__","_employee_education_employee_education_component__WEBPACK_IMPORTED_MODULE_2__","_employee_document_employee_document_component__WEBPACK_IMPORTED_MODULE_3__","routerLinkActiveOptions","exact","EmployeeprofileRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_6__","imports","exports","EmployeeprofileModule","_angular_common__WEBPACK_IMPORTED_MODULE_12__","_employeeprofile_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_13__","src_app_material_module__WEBPACK_IMPORTED_MODULE_8__","_angular_forms__WEBPACK_IMPORTED_MODULE_14__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_15__","declarations","_employee_personal_details_employee_personal_details_component__WEBPACK_IMPORTED_MODULE_1__","_employee_work_employee_work_component__WEBPACK_IMPORTED_MODULE_2__","_employee_education_employee_education_component__WEBPACK_IMPORTED_MODULE_3__","_employee_document_employee_document_component__WEBPACK_IMPORTED_MODULE_4__","_my_profile_employee_my_profile_employee_component__WEBPACK_IMPORTED_MODULE_5__","_employee_education_add_education_employee_add_education_employee_component__WEBPACK_IMPORTED_MODULE_6__","_employee_education_edd_education_employee_edd_education_employee_component__WEBPACK_IMPORTED_MODULE_7__","_employee_document_document_idc_add_form_document_idc_add_form_component__WEBPACK_IMPORTED_MODULE_9__","_employee_document_document_idc_add_form_edit_idform_edit_idform_component__WEBPACK_IMPORTED_MODULE_10__","MyProfileEmployeeComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/core/services/emp-profileservice.service.ts","webpack:///src/app/pages/employeeprofile/employee-document/document-idc-add-form/document-idc-add-form.component.html","webpack:///src/app/pages/employeeprofile/employee-document/document-idc-add-form/document-idc-add-form.component.ts","webpack:///src/app/pages/employeeprofile/employee-document/document-idc-add-form/edit-idform/edit-idform.component.html","webpack:///src/app/pages/employeeprofile/employee-document/document-idc-add-form/edit-idform/edit-idform.component.ts","webpack:///src/app/pages/employeeprofile/employee-document/employee-document.component.html","webpack:///src/app/pages/employeeprofile/employee-document/employee-document.component.ts","webpack:///src/app/pages/employeeprofile/employee-education/add-education-employee/add-education-employee.component.html","webpack:///src/app/pages/employeeprofile/employee-education/add-education-employee/add-education-employee.component.ts","webpack:///src/app/pages/employeeprofile/employee-education/edd-education-employee/edd-education-employee.component.html","webpack:///src/app/pages/employeeprofile/employee-education/edd-education-employee/edd-education-employee.component.ts","webpack:///src/app/pages/employeeprofile/employee-education/employee-education.component.html","webpack:///src/app/pages/employeeprofile/employee-education/employee-education.component.ts","webpack:///src/app/pages/employeeprofile/employee-personal-details/employee-personal-details.component.ts","webpack:///src/app/pages/employeeprofile/employee-personal-details/employee-personal-details.component.html","webpack:///src/app/pages/employeeprofile/employee-work/employee-work.component.ts","webpack:///src/app/pages/employeeprofile/employee-work/employee-work.component.html","webpack:///src/app/pages/employeeprofile/employeeprofile-routing.module.ts","webpack:///src/app/pages/employeeprofile/employeeprofile.module.ts","webpack:///src/app/pages/employeeprofile/my-profile-employee/my-profile-employee.component.ts","webpack:///src/app/pages/employeeprofile/my-profile-employee/my-profile-employee.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\nimport { HttpService } from './http.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmpProfileserviceService {\r\n  \r\n  private MyProfileSource = new Subject<void>();\r\n  leadAdded$ = this.MyProfileSource.asObservable();\r\n\r\n  notifyprofileAdded() {\r\n    this.MyProfileSource.next();\r\n  }\r\n\r\n\r\n  constructor( public httpClient:HttpService ){ }\r\n  \r\n  getAllEducationDetails(data:{},empId):any{\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empeductionlist + empId , 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  addEducationDetails(data:{},empId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empaddeduction+ empId ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  deleteEducation(data:{},educationId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empdeleteduction+ educationId ,  'DELETE').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  GetEducationByEducationId(data:{},educationId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empgeteduction + educationId , 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n   \r\n  }\r\n  EducationUpdateByEmployeeId(data:{},empId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empupdateeduction+ empId ,'PUT').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  PostIDCORCert(data:{},userId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empaddidcertificate+ userId ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  UpdateIDCORCert(data:{},docId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empupdatedocument+ docId ,  'PUT').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  getIDOrCERT(data:{},empId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empgetidcertificate + empId , 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  GetIdDataBYId(data:{},IdsId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empgetdocument + IdsId , 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  DeleteIdDocuments(data:{},IdsId){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.empdeletedocument+ IdsId ,  'DELETE').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Ids</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"submit\" class=\"btn btn-save\" (click)=\"postIdc()\">Save</button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"idcForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Select ID Type<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Select ID Type\"\r\n                            formControlName=\"selectIdtype\" (selectionChange)=\"getoptionType($event)\">\r\n                            <mat-option value=\"Aadhaar\">Aadhaar</mat-option>\r\n                            <mat-option value=\"Passport\">Passport</mat-option>\r\n                            <mat-option value=\"Driving License\">Driving License</mat-option>\r\n                            <mat-option value=\"Election Commission ID Card\">Election Commission ID Card</mat-option>\r\n                            <mat-option value=\"Income Tax PAN Card\">Income Tax PAN Card</mat-option>\r\n                            <mat-option value=\"Ration Card with Photo, for the person whose photo is affixed\">Ration\r\n                                Card with Photo, for the person whose photo is affixed</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.selectIdtype.touched) && f.selectIdtype.errors?.required\">\r\n                        Select ID Type is required!\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Enter ID<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput formControlName=\"enterId\" placeholder=\"Enter ID\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                        *ngIf=\"(submitted || f.enterId.touched) && f.enterId.errors?.required\">\r\n                        Enter ID is required!\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidAadhar')\">\r\n                        Aadhar ID must contain only numbers.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidPassport')\">\r\n                        Passport ID must be alphanumeric.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidDrivingLicense')\">\r\n                        Invalid Driving License format.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidElection')\">\r\n                        Invalid Election Commission ID Card format.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidPAN')\">\r\n                        Invalid Income Tax PAN Card format.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidRation')\">\r\n                        Invalid Ration Card format.\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-xl-12 col-lg-12 col-sm-12\">\r\n                <label class=\"form-label\">Upload Document</label>\r\n                <div><input type=\"file\" accept=\".jpeg, .jpg, .png, .pdf\" (change)=\"documentChange($event)\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { EmpProfileserviceService } from 'src/app/core/services/emp-profileservice.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-document-idc-add-form',\r\n  templateUrl: './document-idc-add-form.component.html',\r\n  styleUrls: ['./document-idc-add-form.component.scss']\r\n})\r\nexport class DocumentIdcAddFormComponent implements OnInit {\r\n  public idcForm: any;\r\n  productPicUrl: any;\r\n  userId: any;\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public submitted: boolean = false;\r\n  selectType: any;\r\n\r\n  constructor(public dialog: MatDialog, public dialogRef: MatDialogRef<DocumentIdcAddFormComponent>, private formBuilder: FormBuilder,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private educationService: EmpProfileserviceService, @Inject(MAT_DIALOG_DATA) public UserData: any, private productService: ProductService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.UserData.userId\r\n\r\n    this.createIdcForm()\r\n  }\r\n  createIdcForm() {\r\n    this.idcForm = this.formBuilder.group({\r\n      selectIdtype: ['', [Validators.required]],\r\n      enterId: ['', [Validators.required, this.alphabeticOnlyValidator()]],\r\n      //uploadDocument: [\"\"],\r\n\r\n    });\r\n\r\n  }\r\n  get f() {\r\n    return this.idcForm.controls;\r\n  }\r\n\r\n  alphabeticOnlyValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      const value = control.value;\r\n     \r\n      if (this.selectType === 'Aadhaar' && !/^[0-9]{12}$/.test(value)) {\r\n        return { invalidAadhar: true };\r\n      }\r\n      else if (this.selectType === 'Passport' && !/^[a-zA-Z0-9]{8}$/.test(value)) {\r\n        return { invalidPassport: true };\r\n      }\r\n      else if (this.selectType === 'Driving License' && !/^[A-Z0-9]{15}$/.test(value)) {\r\n        return { invalidDrivingLicense: true };\r\n      }\r\n      else if (this.selectType === 'Election Commission ID Card' && !/^[A-Z0-9]{10}$/.test(value)) {\r\n        return { invalidElection: true };\r\n      }\r\n      else if (this.selectType === 'Income Tax PAN Card' && !/^[A-Z0-9]{10}$/.test(value)) {\r\n        return { invalidPAN: true };\r\n      }\r\n      else if (this.selectType === 'Ration Card with Photo, for the person whose photo is affixed' && !/^[0-9]{6}$/.test(value)) {\r\n        return { invalidRation: true };\r\n      }\r\n      \r\n      return null;\r\n    };\r\n  }\r\n\r\n  // else if (this.selectType === 'Driving License' && !this.isValidDrivingLicense(value)) {\r\n      //   return { invalidDrivingLicense: true };\r\n      // }\r\n  // isValidDrivingLicense(value: string): boolean {\r\n  //   const drivingLicensePattern = /^[A-Z0-9]{8}$/;\r\n  //   return drivingLicensePattern.test(value);\r\n  // }\r\n\r\n  getoptionType(event) {\r\n    this.selectType = event.source.value;\r\n  }\r\n\r\n\r\n  postIdc() {\r\n    this.submitted = true;\r\n    if (this.idcForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      let Body =\r\n      {\r\n        \"addId\": [\r\n          {\r\n            \"type\": \"ID\",\r\n            \"idType\": this.idcForm.controls.selectIdtype.value,\r\n            \"enterId\": this.idcForm.controls.enterId.value,\r\n            \"uploadDocument\": this.productPicUrl,\r\n            \"useItAs\": \"\",\r\n            \"employeeId\": this.currentEmployee.id\r\n          }\r\n        ]\r\n      }\r\n      this.educationService.PostIDCORCert(Body, this.userId).then((res: any) => {\r\n        this.educationService.notifyprofileAdded();\r\n        this.toastService.openSnackBar(\" Document Id Added Successfully\")\r\n        this.dialogRef.close();\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      }\r\n      )\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n  documentChange(e) {\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      if (file == null) {\r\n        this.toastService.openErrorSnackBar(\r\n          \"Please Select Image To Upload.\",\r\n        );\r\n      } else {\r\n        formdata.set(\"upload\", file)\r\n        this.productService.PostImagePdf(formdata).then((res) => {\r\n          this.productPicUrl = res.data.location;\r\n          console.log(\"this.productPicUrl\", this.productPicUrl);\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Update Ids</h1>\r\n    <div class=\"addProductButtons\">\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"submit\" class=\"btn btn-save\" (click)=\"postIdc()\">Save</button>\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"idcForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Select ID Type<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Select ID Type\"\r\n                            formControlName=\"selectIdtype\" (selectionChange)=\"getoptionType($event)\">\r\n                            <mat-option value=\"Aadhaar\">Aadhaar</mat-option>\r\n                            <mat-option value=\"Passport\">Passport</mat-option>\r\n                            <mat-option value=\"Driving License\">Driving License</mat-option>\r\n                            <mat-option value=\"Election Commission ID Card\">Election Commission ID Card</mat-option>\r\n                            <mat-option value=\"Income Tax PAN Card\">Income Tax PAN Card</mat-option>\r\n                            <mat-option value=\"Ration Card with Photo, for the person whose photo is affixed\">Ration Card with Photo, for the person whose photo is affixed</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.selectIdtype.touched) && f.selectIdtype.errors?.required\">\r\n                        Select ID Type is required!\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Enter ID<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput formControlName=\"enterId\" placeholder=\"Enter ID\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.enterId.touched) && f.enterId.errors?.required\">\r\n                        Enter ID is required!\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidAadhar')\">\r\n                        Aadhar ID must contain only numbers.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidPassport')\">\r\n                        Passport ID must be alphanumeric.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidDrivingLicense')\">\r\n                        Invalid Driving License format.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidElection')\">\r\n                        Invalid Election Commission ID Card format.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidPAN')\">\r\n                        Invalid Income Tax PAN Card format.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.enterId.hasError('invalidRation')\">\r\n                        Invalid Ration Card format.\r\n                    </mat-error>\r\n                </div>             \r\n            </div>\r\n        </form>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-xl-12 col-lg-12 col-sm-12\">\r\n                <label class=\"form-label\">Upload Document</label>\r\n               <div><input type=\"file\" accept=\".jpeg, .jpg, .png, .pdf\" (change)=\"documentChange($event)\"></div>                    \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { EmpProfileserviceService } from 'src/app/core/services/emp-profileservice.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-idform',\r\n  templateUrl: './edit-idform.component.html',\r\n  styleUrls: ['./edit-idform.component.scss']\r\n})\r\nexport class EditIDFormComponent implements OnInit {\r\n  public idcForm: any;\r\n  productPicUrl: any;\r\n  userId: any;\r\n  public IdsId: any\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public submitted: boolean = false;\r\n  selectType: string;\r\n\r\n  constructor(public dialog: MatDialog, public dialogRef: MatDialogRef<EditIDFormComponent>, private formBuilder: FormBuilder,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private educationService: EmpProfileserviceService, @Inject(MAT_DIALOG_DATA) public UserData: any, private productService: ProductService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.UserData.userId;\r\n    this.IdsId = this.UserData.IDsId;\r\n    this.createIdcForm()\r\n    this.getSingleIdDataById();\r\n  }\r\n  getSingleIdDataById() {\r\n    this.educationService.GetIdDataBYId({}, this.IdsId).then((res: any) => {\r\n      this.selectType = res.data.idType,\r\n      console.log(\"this.selectType\",this.selectType)\r\n      this.idcForm.patchValue({\r\n        selectIdtype: res.data.idType,\r\n        enterId: res.data.enterId,\r\n        uploadDocument: res.data.uploadDocument,\r\n      })\r\n    })\r\n\r\n  }\r\n  createIdcForm() {\r\n    this.idcForm = this.formBuilder.group({\r\n      selectIdtype: ['', [Validators.required]],\r\n      enterId: ['', [Validators.required,this.alphabeticOnlyValidator()]],\r\n      //uploadDocument: [\"\"],\r\n\r\n    });\r\n\r\n  }\r\n  get f() {\r\n    return this.idcForm.controls;\r\n  }\r\n  alphabeticOnlyValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      const value = control.value;\r\n     \r\n      if (this.selectType === 'Aadhaar' && !/^[0-9]{12}$/.test(value)) {\r\n        return { invalidAadhar: true };\r\n      }\r\n      else if (this.selectType === 'Passport' && !/^[a-zA-Z0-9]{8}$/.test(value)) {\r\n        return { invalidPassport: true };\r\n      }\r\n      else if (this.selectType === 'Driving License' && !/^[A-Z0-9]{15}$/.test(value)) {\r\n        return { invalidDrivingLicense: true };\r\n      }\r\n      else if (this.selectType === 'Election Commission ID Card' && !/^[A-Z0-9]{10}$/.test(value)) {\r\n        return { invalidElection: true };\r\n      }\r\n      else if (this.selectType === 'Income Tax PAN Card' && !/^[A-Z0-9]{10}$/.test(value)) {\r\n        return { invalidPAN: true };\r\n      }\r\n      else if (this.selectType === 'Ration Card with Photo, for the person whose photo is affixed' && !/^[0-9]{6}$/.test(value)) {\r\n        return { invalidRation: true };\r\n      }\r\n      \r\n      return null;\r\n    };\r\n  }\r\n\r\n  getoptionType(event) {\r\n    this.selectType = event.source.value;\r\n  }\r\n  postIdc() {\r\n    this.submitted = true;\r\n    if (this.idcForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      let Body =\r\n      {\r\n\r\n        \r\n          \"type\": \"ID\",\r\n          \"idType\": this.idcForm.controls.selectIdtype.value,\r\n          \"enterId\": this.idcForm.controls.enterId.value,\r\n          \"uploadDocument\": this.productPicUrl,\r\n          //\"useItAs\": \"\",\r\n          \"employeeId\": this.currentEmployee.id\r\n        \r\n\r\n      }\r\n      this.educationService.UpdateIDCORCert(Body, this.IdsId).then((res: any) => {\r\n        this.educationService.notifyprofileAdded();\r\n        this.toastService.openSnackBar(\"Document Id Updated Successfully\")\r\n\r\n        this.dialogRef.close();\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      }\r\n      )\r\n\r\n    }\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n  documentChange(e) {\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      if (file == null) {\r\n        this.toastService.openErrorSnackBar(\r\n          \"Please Select Image To Upload.\",\r\n        );\r\n      } else {\r\n        formdata.set(\"upload\", file)\r\n        this.productService.PostImagePdf(formdata).then((res) => {\r\n          this.productPicUrl = res.data.location;\r\n          console.log(\"this.productPicUrl\", this.productPicUrl);\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","\r\n  <div class=\"modal-body\">\r\n    <div class=\"row\">\r\n        <div class=\"mb-3 col-lg-12  col-md-12 col-xl-12 col-sm-12 \">\r\n            <div class=\"row\">\r\n              <div>\r\n               \r\n              </div>\r\n                <div class=\"card bg-white mb-3\" >\r\n                    <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: center;\">\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">ID’S</div>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-3 col-lg-3  col-xl-3 col-sm-12\">\r\n                          <button   class=\"delete-button p-3\" (click)=\"openIdcForm(userId)\">\r\n                            <i class=\"fas fa-plus \" style=\"color:rgba(252, 118, 67, 1)\"></i>\r\n                          </button> <label class=\"text-black pHeading\" style=\"margin-left: 10px;margin-top: 6px\">ADD ID'S</label>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-lg-6  col-xl-6 col-sm-12\"></div>\r\n                        <!-- <div class=\"col-md-3 col-lg-3  col-xl-3 col-sm-12\">\r\n                          <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Product Name/Barcode\"\r\n                          [(ngModel)]=\"searchKey\" (change)=\"getSearchedDoc(searchKey)\">\r\n                        </div> -->\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white mb-3\" *ngIf=\"idsData == 0\">\r\n                    <div class=\"flex d-flex flex-row\"\r\n                        style=\"justify-content: center; align-items: center; vertical-align: middle;\">\r\n                        <img class=\"image-responsive\" src=\"assets/img/icons/spot-illustrations/notfound1.png\"\r\n                        width=\"250\" height=\"180\" alt=\"\">\r\n                    </div>\r\n                </div> \r\n                <div class=\"card bg-white mb-3\" *ngFor=\"let item of idsData\" >\r\n                    <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: middle;\" >\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Identification Details</div>\r\n                        <hr>\r\n                    </div>                   \r\n                    <div class=\"card-body\">           \r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Id Type</p>\r\n                                <p>{{item.idType}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Document Id</p>\r\n                                <p>{{item.enterId}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Document Upload Date</p>\r\n                                <p>{{item.createdAt | date:\"dd MMM YYYY\"| uppercase}}\r\n                                    <button  style=\"color: rgba(252, 118, 67, 1) !important; float:right !important; text-align: end !important;\" class=\"btn \" (click)=\"getIDId(item.id)\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                                        <span class=\"bi-trash icon-color  icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                            data-bs-placement=\"top\" title=\"delete\"></span>\r\n        \r\n                                    </button>  \r\n                                    <button  style=\"color: rgba(252, 118, 67, 1) !important; float:right !important; text-align: end !important;\" class=\"btn \" (click)=\"openEditEducation(item.id,userId)\">\r\n                                        <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                            data-bs-placement=\"top\" title=\"Edit\"></span>\r\n        \r\n                                    </button>    \r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n      <div class=\"modal-content position-relative\">\r\n          <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n              <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"></a>\r\n          </div>\r\n          <div class=\"modal-body p-0\">\r\n              <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                  <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                      Delete Document? </h2>\r\n              </div>\r\n              <h4 class=\"text-center \">Are You Sure To Delete Document?</h4>\r\n\r\n          </div>\r\n          <div class=\"modal-footer justify-content-center\">\r\n              <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n              <a class=\"btn btn-outline-danger\" (click)=\"deletDocumentById()\" data-bs-dismiss=\"modal\">Delete\r\n              </a>\r\n\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { DocumentIdcAddFormComponent } from './document-idc-add-form/document-idc-add-form.component';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { EmpProfileserviceService } from 'src/app/core/services/emp-profileservice.service';\r\nimport { EditIDFormComponent } from './document-idc-add-form/edit-idform/edit-idform.component';\r\n\r\n@Component({\r\n  selector: 'app-employee-document',\r\n  templateUrl: './employee-document.component.html',\r\n  styleUrls: ['./employee-document.component.scss']\r\n})\r\nexport class EmployeeDocumentComponent implements OnInit {\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public idsData: any;\r\n  public IdsId: any\r\n  public searchKey: any;\r\n\r\n  constructor(public dialog: MatDialog, public rolesPermissionsService: RolesPermissionsService, private toastService: ToastNotificationService, private educationService: EmpProfileserviceService,\r\n    private titleCasePipe: TitleCasePipe,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployeeByEmployeeId();\r\n    this.educationService.leadAdded$.subscribe(() => {\r\n      this.getIDCData();\r\n    });\r\n    this.getIDCData();\r\n  }\r\n  getIDCData() {\r\n    this.educationService.getIDOrCERT({}, this.currentEmployee.id).then((res: any) => {\r\n      this.idsData = res.data\r\n\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  getEmployeeByEmployeeId() {\r\n    this.rolesPermissionsService.getEmployeeById({}, this.currentEmployee.id).then((res) => {\r\n      this.userId = res.data.parentId\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n\r\n  }\r\n  userId(arg0: string, userId: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n\r\n  openIdcForm(userId) {\r\n    const dialogRef: MatDialogRef<DocumentIdcAddFormComponent> = this.dialog.open(DocumentIdcAddFormComponent, {\r\n      width: '700px',\r\n      height: 'auto',\r\n      data: { userId: userId },\r\n      panelClass: 'custom-dialog-IDC-FORM-class',\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n\r\n\r\n  }\r\n  openEditEducation(IDsId, userId) {\r\n    const dialogRef: MatDialogRef<EditIDFormComponent> = this.dialog.open(EditIDFormComponent, {\r\n      width: '700px',\r\n      height: 'auto',\r\n      data: { IDsId: IDsId, userId: userId },\r\n      panelClass: 'custom-dialog-IDC-FORM-class',\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n\r\n  }\r\n\r\n  getIDId(IdsId: any) {\r\n    this.IdsId = IdsId\r\n  }\r\n  deletDocumentById() {\r\n    this.educationService.DeleteIdDocuments({}, this.IdsId).then((res: any) => {\r\n      this.toastService.openSnackBar(\"Document Id Deleted Successfully\")\r\n      this.getIDCData();\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Educational Info</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"submit\" class=\"btn btn-save\" (click)=\"postEducation()\">Save</button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"educationForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">University Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput formControlName=\"university\" placeholder=\"University Name\">\r\n                    </mat-form-field>\r\n                        \r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.university.touched) && f.university.errors?.required\">\r\n                        University Name is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Qualification Type<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Qualification Type\"\r\n                            formControlName=\"qualificationType\">\r\n                            <mat-option value=\"Graduation\">Graduation</mat-option>\r\n                            <mat-option value=\"Post Graduation\">Post Graduation </mat-option>\r\n                            <!-- <mat-option value=\"Doctorate\">Doctorate </mat-option>\r\n                            <mat-option value=\"Other Education \">Other Education </mat-option> -->\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.qualificationType.touched) && f.qualificationType.errors?.required\">\r\n                        Qualification Type is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\" *ngIf=\"educationForm.get('qualificationType').value === 'Graduation'\">\r\n                    <label class=\"form-label\">Course Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Course Name\"\r\n                            formControlName=\"courseName\">\r\n                            <mat-option value=\"BCA\">BCA</mat-option>\r\n                            <mat-option value=\"BSc\">BSc</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseName.touched) && f.courseName.errors?.required\">\r\n                        Course Name is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\" *ngIf=\"educationForm.get('qualificationType').value === 'Post Graduation'\">\r\n                    <label class=\"form-label\">Course Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Course Name\"\r\n                            formControlName=\"courseName\">\r\n                            <mat-option value=\"MCA\">MCA</mat-option>\r\n                            <mat-option value=\"MSc\">MSc</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseName.touched) && f.courseName.errors?.required\">\r\n                        Course Name is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Course Type<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Course Type\"\r\n                            formControlName=\"courseType\">\r\n                            <mat-option value=\"Full Time\">Full Time</mat-option>\r\n                            <mat-option value=\"Part Time\">Part Time</mat-option>\r\n                            <mat-option value=\"Correspondence\">Correspondence\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseType.touched) && f.courseType.errors?.required\">\r\n                        Course Type is required!\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Course Start Date<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput required ngModel bsDatepicker placeholder=\"DD MMM YYYY\"\r\n                            style=\"text-transform:uppercase!important;\" id=\"datePicker\" bsDatepicker [bsConfig]=\"{\r\n                            containerClass: 'theme-dark-blue',\r\n                            dateInputFormat: 'DD MMM YYYY',\r\n                             showWeekNumbers:false\r\n                            }\" formControlName=\"courseStartDate\" autocomplete=\"off\" (click)=\"openDatepickerstart()\">\r\n                        <span>\r\n                            <mat-icon class=\"iconcalender p-1\">date_range</mat-icon>\r\n                        </span>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseStartDate.touched) && f.courseStartDate.errors?.required\">\r\n                        Course Start Date is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Course End Date<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput required ngModel bsDatepicker placeholder=\"DD MMM YYYY\"\r\n                            style=\"text-transform:uppercase!important;\" id=\"datePicker\" bsDatepicker [bsConfig]=\"{\r\n                            containerClass: 'theme-dark-blue',\r\n                            dateInputFormat: 'DD MMM YYYY',\r\n                             showWeekNumbers:false\r\n                            }\" formControlName=\"courseEndDate\" autocomplete=\"off\"  (click)=\"openDatepickerend()\">\r\n                        <span>\r\n                            <mat-icon class=\"iconcalender p-1\">date_range</mat-icon>\r\n                        </span>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseEndDate.touched) && f.courseEndDate.errors?.required\">\r\n                        Course End Date is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n            </div>\r\n         \r\n\r\n        </form>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-xl-12 col-lg-12 col-sm-12\">\r\n                <label class=\"form-label\">Upload Document</label>\r\n                <div><input type=\"file\" accept=\".jpeg, .jpg, .png, .pdf\" (change)=\"documentChange($event)\"></div>\r\n                    \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { EmpProfileserviceService } from 'src/app/core/services/emp-profileservice.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-education-employee',\r\n  templateUrl: './add-education-employee.component.html',\r\n  styleUrls: ['./add-education-employee.component.scss']\r\n})\r\nexport class AddEducationEmployeeComponent implements OnInit {\r\n  public educationForm: any;\r\n  public userId: any;\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  productPicUrl: any;\r\n  public submitted: boolean = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddEducationEmployeeComponent>, private cdr: ChangeDetectorRef, private formBuilder: FormBuilder, public router: Router, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private educationService: EmpProfileserviceService, @Inject(MAT_DIALOG_DATA) public UserData: any, private productService: ProductService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.UserData.userId\r\n\r\n    this.createEductionForm();\r\n\r\n  }\r\n  createEductionForm(): void {\r\n    this.educationForm = this.formBuilder.group({\r\n      university : ['',[Validators.required]],\r\n      qualificationType: ['', [Validators.required]],\r\n      courseName: ['', [Validators.required]],\r\n      courseType: ['', [Validators.required]],\r\n      courseStartDate: ['', [Validators.required]],\r\n      courseEndDate: ['', [Validators.required]],\r\n      //uploadDocument: [\"\"],\r\n\r\n\r\n    });\r\n  }\r\n  get f() {\r\n    return this.educationForm.controls;\r\n  }\r\n\r\n  postEducation() {\r\n    this.submitted = true;\r\n    if (this.educationForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      let Body =\r\n      {\r\n        \"addEducation\": [\r\n          {\r\n            \"university\": this.educationForm.controls.university.value,\r\n            \"qualificationType\": this.educationForm.controls.qualificationType.value,\r\n            \"courseName\": this.educationForm.controls.courseName.value,\r\n            \"courseType\": this.educationForm.controls.courseType.value,\r\n            \"startDate\": this.educationForm.controls.courseStartDate.value,\r\n            \"endDate\": this.educationForm.controls.courseEndDate.value,\r\n            \"uploadDocument\": this.productPicUrl,\r\n            \"userId\": this.userId\r\n          }\r\n        ]\r\n      }\r\n      this.educationService.addEducationDetails(Body, this.currentEmployee.id).then(res => {\r\n        this.educationService.notifyprofileAdded();\r\n        this.toastService.openSnackBar(\" Education Added Successfully\")\r\n        this.dialogRef.close();\r\n\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n  openDatepickerstart() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.educationForm.get('courseStartDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.educationForm.get('courseStartDate').setValue(new Date());\r\n    }\r\n  }\r\n\r\n  openDatepickerend() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.educationForm.get('courseEndDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.educationForm.get('courseEndDate').setValue(new Date());\r\n    }\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n  documentChange(e) {\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      if (file == null) {\r\n        this.toastService.openErrorSnackBar(\r\n          \"Please Select Image To Upload.\",\r\n        );\r\n      } else {\r\n        formdata.set(\"upload\", file)\r\n        this.productService.PostImagePdf(formdata).then((res) => {\r\n          this.productPicUrl = res.data.location;\r\n          console.log(\"this.productPicUrl\", this.productPicUrl);\r\n\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Update Educational Info</h1>\r\n  \r\n    <div class=\"addProductButtons\">\r\n  \r\n      <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n        (click)=\"cancel()\">Cancel</button>\r\n      <button type=\"submit\" class=\"btn btn-save\" (click)=\"UpdateEducation()\">Submit</button>\r\n  \r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"educationForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">University Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput formControlName=\"university\" placeholder=\"University Name\">\r\n                    </mat-form-field>\r\n                        \r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.university.touched) && f.university.errors?.required\">\r\n                        University Name is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Qualification Type<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Qualification Type\"\r\n                            formControlName=\"qualificationType\">\r\n                            <mat-option value=\"Graduation\">Graduation</mat-option>\r\n                            <mat-option value=\"Post Graduation\">Post Graduation </mat-option>\r\n                            <!-- <mat-option value=\"Doctorate\">Doctorate </mat-option>\r\n                            <mat-option value=\"Other Education \">Other Education </mat-option> -->\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.qualificationType.touched) && f.qualificationType.errors?.required\">\r\n                        Qualification Type is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\" *ngIf=\"educationForm.get('qualificationType').value === 'Graduation'\">\r\n                    <label class=\"form-label\">Course Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Course Name\"\r\n                            formControlName=\"courseName\">\r\n\r\n                            <mat-option value=\"BCA\">BCA</mat-option>\r\n                            <mat-option value=\"BSc\">BSc</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseName.touched) && f.courseName.errors?.required\">\r\n                        Course Name is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\" *ngIf=\"educationForm.get('qualificationType').value === 'Post Graduation'\">\r\n                    <label class=\"form-label\">Course Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Course Name\"\r\n                            formControlName=\"courseName\">\r\n\r\n                            <mat-option value=\"MCA\">MCA</mat-option>\r\n                            <mat-option value=\"MSc\">MSc</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseName.touched) && f.courseName.errors?.required\">\r\n                        Course Name is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Course Type<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select matNativeControl disableOptionCentering required placeholder=\"Course Type\"\r\n                            formControlName=\"courseType\">\r\n                            <mat-option value=\"Full Time\">Full Time</mat-option>\r\n                            <mat-option value=\"Part Time\">Part Time</mat-option>\r\n                            <mat-option value=\"Correspondence\">Correspondence\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseType.touched) && f.courseType.errors?.required\">\r\n                        Course Type is required!\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Course Start Date<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput required ngModel bsDatepicker placeholder=\"DD MMM YYYY\"\r\n                            style=\"text-transform:uppercase!important;\" id=\"datePicker\" bsDatepicker [bsConfig]=\"{\r\n                            containerClass: 'theme-dark-blue',\r\n                            dateInputFormat: 'DD MMM YYYY',\r\n                             showWeekNumbers:false\r\n                            }\" formControlName=\"courseStartDate\" autocomplete=\"off\" (click)=\"openDatepickerstart()\">\r\n                        <span>\r\n                            <mat-icon class=\"iconcalender p-1\">date_range</mat-icon>\r\n                        </span>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseStartDate.touched) && f.courseStartDate.errors?.required\">\r\n                        Course Start Date is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-xl-6 col-sm-6\">\r\n                    <label class=\"form-label\">Course End Date<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput required ngModel bsDatepicker placeholder=\"DD MMM YYYY\"\r\n                            style=\"text-transform:uppercase!important;\" id=\"datePicker\" bsDatepicker [bsConfig]=\"{\r\n                            containerClass: 'theme-dark-blue',\r\n                            dateInputFormat: 'DD MMM YYYY',\r\n                             showWeekNumbers:false\r\n                            }\" formControlName=\"courseEndDate\" autocomplete=\"off\"  (click)=\"openDatepickerend()\">\r\n                        <span>\r\n                            <mat-icon class=\"iconcalender p-1\">date_range</mat-icon>\r\n                        </span>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.courseEndDate.touched) && f.courseEndDate.errors?.required\">\r\n                        Course End Date is required!\r\n                    </mat-error>\r\n\r\n                </div>\r\n            </div>\r\n         \r\n\r\n        </form>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-xl-12 col-lg-12 col-sm-12\">\r\n                <label class=\"form-label\">Upload Document</label>\r\n                <div><input type=\"file\" accept=\".jpeg, .jpg, .png, .pdf\" (change)=\"documentChange($event)\"></div>\r\n                    \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { EmpProfileserviceService } from 'src/app/core/services/emp-profileservice.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport * as moment from 'moment';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-edd-education-employee',\r\n  templateUrl: './edd-education-employee.component.html',\r\n  styleUrls: ['./edd-education-employee.component.scss']\r\n})\r\nexport class EddEducationEmployeeComponent implements OnInit {\r\n  public educationForm: any;\r\n  public  userId: any;\r\n  public educationId:any;\r\n  productPicUrl: any;\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public submitted: boolean = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<EddEducationEmployeeComponent>,private cdr: ChangeDetectorRef,private formBuilder: FormBuilder, public router: Router,private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, @Inject(MAT_DIALOG_DATA) public UserData: any,private educationService:EmpProfileserviceService,private productService: ProductService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId=this.UserData.userId\r\n    this.educationId=this.UserData.educationId\r\n    this.createEductionForm();\r\n    this.getEducationById();\r\n\r\n    this.educationForm.get('qualificationType').valueChanges.subscribe((newValue) => {\r\n      // Check if the qualification type has changed to something other than 'Graduation'\r\n      if (newValue !== 'Graduation') {\r\n        // Reset the courseName control to an empty value\r\n        this.educationForm.get('courseName').setValue('');\r\n      }\r\n\r\n      if (newValue !== 'Post Graduation') {\r\n        // Reset the courseName control to an empty value\r\n        this.educationForm.get('courseName').setValue('');\r\n      }\r\n    });\r\n  }\r\n  get f() {\r\n    return this.educationForm.controls;\r\n  }\r\n  UpdateEducation(){\r\n    this.submitted = true;\r\n    if (this.educationForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else{\r\n      let Body={\r\n        \"updateEducations\": [\r\n         {\r\n           \"id\":this.educationId,\r\n           \"university\": this.educationForm.controls.university.value,\r\n           \"qualificationType\": this.educationForm.controls.qualificationType.value,\r\n           \"courseName\": this.educationForm.controls.courseName.value,\r\n           \"courseType\": this.educationForm.controls.courseType.value,\r\n           \"startDate\": moment(this.educationForm.controls.courseStartDate.value, 'DD-MMM-YYYY').format('YYYY-MM-DD'),\r\n           \"endDate\":moment(this.educationForm.controls.courseEndDate.value, 'DD-MMM-YYYY').format('YYYY-MM-DD'),\r\n           \"uploadDocument\":this.productPicUrl ,\r\n           \"userId\": this.userId,\r\n         },\r\n       ]\r\n     }\r\n     this.educationService.EducationUpdateByEmployeeId(Body,this.currentEmployee.id).then((res:any)=>{\r\n       this.educationService.notifyprofileAdded();\r\n       this.toastService.openSnackBar(\" Education Updated Successfully\")\r\n       this.dialogRef.close();\r\n     },(err) => {\r\n       if (err.error.expose) {\r\n         this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n       }\r\n       else {\r\n         this.toastService.openErrorSnackBar(\"Something Went Wrong.\");      \r\n       } \r\n      })\r\n\r\n    }\r\n   \r\n  }\r\n  openDatepickerstart() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.educationForm.get('courseStartDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.educationForm.get('courseStartDate').setValue(new Date());\r\n    }\r\n  }\r\n\r\n  openDatepickerend() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.educationForm.get('courseEndDate').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.educationForm.get('courseEndDate').setValue(new Date());\r\n    }\r\n  }\r\n  cancel(){\r\n    this.dialogRef.close();\r\n  }\r\n  createEductionForm(){\r\n    this.educationForm = this.formBuilder.group({\r\n      university :  ['',[Validators.required]],\r\n      qualificationType: ['',[Validators.required]],\r\n      courseName: ['',[Validators.required]],\r\n      courseType: ['',[Validators.required]],\r\n      courseStartDate: ['',[Validators.required]],\r\n      courseEndDate: ['',[Validators.required]],\r\n   //uploadDocument: [\"\"],\r\n    });\r\n  }\r\n  getEducationById(){\r\n    this.educationService.GetEducationByEducationId({},this.educationId).then((res:any)=>{\r\n\r\n      this.educationForm.patchValue({\r\n        university : res.data.university,\r\n        qualificationType:res.data.qualificationType,\r\n        courseName: res.data.courseName,\r\n        courseType:res.data.courseType,\r\n        courseStartDate:res.data.startDate ? (moment(res.data.startDate).format(\"DD-MMM-YYYY\")) : (moment(res.data.startDate).format(\"DD-MMM-YYYY\")),\r\n        courseEndDate: res.data.endDate? (moment(res.data.endDate).format(\"DD-MMM-YYYY\")) : (moment(res.data.endDate).format(\"DD-MMM-YYYY\")),\r\n        uploadDocument:res.data.uploadDocument ,\r\n\r\n      })\r\n      \r\n    })\r\n\r\n  }\r\n  documentChange(e){\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n        if (file == null) {\r\n          this.toastService.openErrorSnackBar(\r\n            \"Please Select Image To Upload.\",\r\n          );\r\n        } else {\r\n          formdata.set(\"upload\", file)\r\n          this.productService.PostImagePdf(formdata).then((res) => {\r\n            this.productPicUrl = res.data.location;\r\n            console.log(\"this.productPicUrl\", this.productPicUrl);\r\n  \r\n          });\r\n        }\r\n      }\r\n\r\n  }\r\n}\r\n","<div class=\"modal-body\">\r\n    <div class=\"row\">\r\n        <!-- <div class=\"mb-3 col-lg-2 col-md-2 col-xl-2 col-sm-12\">\r\n            <div class=\"image-wrapper flex d-flex flex-row\">\r\n                <label class=\"profile-pic\" \r\n                   >\r\n                    <img  height=\"150\" width=\"150\" [src]=\"profilePic ? profilePic : '/assets/images/default-profile-pic.JPG'\"\r\n                        class=\"shadow-sm\" />\r\n                    <input type=\"file\" name=\"file\" accept=\"image/*\">\r\n                </label>\r\n            </div>\r\n        </div> -->\r\n        <div class=\"mb-3 col-lg-12  col-md-12 col-xl-12 col-sm-12 \">\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white mb-3\">\r\n                    <div class=\"card-header\"\r\n                        style=\"justify-content: center; align-items: center; vertical-align: center;\">\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Educational Info</div>\r\n                        <hr>\r\n                    </div>\r\n\r\n                    <div class=\"card-body\">\r\n                        <button class=\"delete-button p-3\" (click)=\"openADDEducation(userId)\">\r\n                            <i class=\"fas fa-plus \" style=\"color:rgba(252, 118, 67, 1)\"></i>\r\n                        </button> <label class=\"text-black pHeading\"\r\n                            style=\"margin-left: 10px;margin-top: 6px;\">ADD</label>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white mb-3\" *ngIf=\"educationData == 0\">\r\n                    <div class=\"flex d-flex flex-row\"\r\n                        style=\"justify-content: center; align-items: center; vertical-align: middle;\">\r\n                        <img class=\"image-responsive\" src=\"assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            width=\"250\" height=\"180\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-white mb-3\" *ngFor=\"let item of educationData\">\r\n                    <div class=\"card-header\"\r\n                        style=\"justify-content: center; align-items: center; vertical-align: middle;\">\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">\r\n                            {{item.qualificationType}}</div>\r\n                        <hr>\r\n                    </div>\r\n\r\n                    <div class=\"card-body\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Course Name</p>\r\n                                <p>{{item.courseName}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Start Date</p>\r\n                                <p>{{item.startDate | date:\"dd MMM YYYY\"| uppercase}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">End Date</p>\r\n                                <p>{{item.endDate | date:\"dd MMM YYYY\"| uppercase}}\r\n\r\n                                </p>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p *ngIf=\"item.uploadDocument !== null\">\r\n                                    <!-- <img style=\"background-color:#FFEBD2 ;\" height=\"100\" width=\"100\" (click)=\"GotoImageOrPDF(item.uploadDocument)\"\r\n                                     [src]=\"item.uploadDocument ? item.uploadDocument : 'assets/img/icons/spot-illustrations/pdfLogo.jpg'\"> -->\r\n\r\n                                    <span><img [src]=\"item.uploadDocument\" (click)=\"GotoImageOrPDF(item.uploadDocument)\"\r\n                                            onerror=\"this.src='assets/img/icons/spot-illustrations/pdfLogo.jpg'\"\r\n                                            alt=\"Profile\" width=\"50\" height=\"50\" class=\"rounded-circle\" style=\"cursor:pointer;\">\r\n                                    </span>\r\n                                </p>\r\n                                <button\r\n                                    style=\"color: rgba(252, 118, 67, 1) !important; float:right !important; text-align: end !important;\"\r\n                                    class=\"btn \" (click)=\"getEducationId(item.id)\" data-bs-toggle=\"modal\"\r\n                                    data-bs-target=\"#errorDelete-modal\">\r\n                                    <span class=\"bi-trash icon-color  icon-color iconFontSize ps-2\"\r\n                                        data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"delete\"></span>\r\n\r\n                                </button>\r\n                                <button\r\n                                    style=\"color: rgba(252, 118, 67, 1) !important; float:right !important; text-align: end !important;\"\r\n                                    class=\"btn \" (click)=\"openEditEducation(item.id,userId)\">\r\n                                    <span class=\"bi-pencil-square icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                        data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Education? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are You Sure To Delete Education?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" (click)=\"deletEductionById()\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { EddEducationEmployeeComponent } from './edd-education-employee/edd-education-employee.component';\r\nimport { AddEducationEmployeeComponent } from './add-education-employee/add-education-employee.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { EmpProfileserviceService } from 'src/app/core/services/emp-profileservice.service';\r\nimport FileSaver from \"file-saver\";\r\nimport { saveAs } from \"file-saver/dist/FileSaver\";\r\n\r\n@Component({\r\n  selector: 'app-employee-education',\r\n  templateUrl: './employee-education.component.html',\r\n  styleUrls: ['./employee-education.component.scss']\r\n})\r\nexport class EmployeeEducationComponent implements OnInit {\r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public educationData: any;\r\n  public userId: any;\r\n  public profilePic = \"\";\r\n  public educationId: any;\r\n  public course = {\r\n    \"courseName\": \"BE\",\r\n    \"startDate\": \"11/08/2023\",\r\n    \"endDate\": \"15/08/2023\"\r\n  }\r\n  DataLink: any;\r\n\r\n  constructor(public dialog: MatDialog, public rolesPermissionsService: RolesPermissionsService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, public educationService: EmpProfileserviceService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getEmployeeByEmployeeId();\r\n    this.educationService.leadAdded$.subscribe(() => {\r\n      this.getEducationDetails();\r\n    });\r\n    this.getEducationDetails();\r\n  }\r\n  getEducationDetails() {\r\n    this.educationService.getAllEducationDetails({}, this.currentEmployee.id).then((res) => {\r\n\r\n      this.educationData = res.data;\r\n      console.log(\"data length\",this.educationData.length)\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n\r\n  }\r\n  getEmployeeByEmployeeId() {\r\n    this.rolesPermissionsService.getEmployeeById({}, this.currentEmployee.id).then((res) => {\r\n\r\n\r\n      this.userId = res.data.parentId\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n\r\n  }\r\n  openADDEducation(userId) {\r\n    const dialogRef: MatDialogRef<AddEducationEmployeeComponent> = this.dialog.open(AddEducationEmployeeComponent, {\r\n      width: '700px',\r\n      height: 'auto',\r\n      data: { userId: userId },\r\n      panelClass: 'custom-dialog-educationAdd-class',\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n\r\n  }\r\n  openEditEducation(educationId, userId) {\r\n    const dialogRef: MatDialogRef<EddEducationEmployeeComponent> = this.dialog.open(EddEducationEmployeeComponent, {\r\n      width: '700px',\r\n      height: 'auto',\r\n      data: { educationId: educationId, userId: userId },\r\n      panelClass: 'custom-dialog-educationUpdate-class',\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n\r\n  }\r\n  getEducationId(educationId) {\r\n    this.educationId = educationId\r\n\r\n  }\r\n  deletEductionById() {\r\n    this.educationService.deleteEducation({}, this.educationId).then(res => {\r\n      this.toastService.openSnackBar(\" Education Deleted Successfully\")\r\n      this.getEducationDetails();\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n\r\n  }\r\n  GotoImageOrPDF(imagelink){\r\n    this.DataLink=imagelink\r\n    const pdfName = \"invoice.pdf\";\r\n    FileSaver.saveAs(this.DataLink, pdfName);\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { PartyService } from 'src/app/core/services/party.service';\r\nimport { ProfileService } from 'src/app/core/services/profile.service';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-personal-details',\r\n  templateUrl: './employee-personal-details.component.html',\r\n  styleUrls: ['./employee-personal-details.component.scss']\r\n})\r\nexport class EmployeePersonalDetailsComponent implements OnInit {\r\n\r\n  public ProfileData:any\r\n  public firstName:any;\r\n  public email:any;\r\n  public mobileNumber:any;\r\n  public address:any;\r\n  public country:any\r\n  public state:any\r\n  public city:any;\r\n  public pincode:any\r\n  public profileImagepath:any;\r\n  public gender:any;\r\n  \r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  employeeId: any;\r\n\r\n\r\n\r\n  constructor(private roleService:RolesPermissionsService,private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, public profileService: ProfileService, public partyService : PartyService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfileData();\r\n  }\r\n  getProfileData(){\r\n    this.roleService.getEmployeeById({}, this.currentEmployee.id).then((res:any)=>{\r\n      this.ProfileData=res.data;\r\n\r\n      this.employeeId=this.ProfileData.employee.id\r\n      this.firstName=this.ProfileData.firstName;\r\n      this.email=this.ProfileData.email;\r\n      this.mobileNumber=this.ProfileData.mobile;\r\n      this.profileImagepath=this.ProfileData.profileImage;\r\n      this.address=this.ProfileData.useraddresses[0].address\r\n      this.country=this.ProfileData.useraddresses[0].country\r\n      this.state=this.ProfileData.useraddresses[0].state\r\n      this.city=this.ProfileData.useraddresses[0].city\r\n      this.pincode=this.ProfileData.useraddresses[0].pincode\r\n      this.gender=this.ProfileData.employee.gender ? this.ProfileData.employee.gender :\"-\"\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n    \r\n    )\r\n\r\n  }\r\n  documentChange(e){\r\n  \r\n      let formdata = new FormData();\r\n      let reader = new FileReader();\r\n      let file = e.target.files[0];\r\n \r\n     \r\n\r\n      if (e.target.files && e.target.files[0]) {\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n          this.profileImagepath = reader.result;\r\n        };\r\n        if (file == null) {\r\n          this.toastService.openErrorSnackBar(\"Please Select Image To Upload.\");\r\n        } else {\r\n          formdata.set(\"upload\", file);\r\n          this.profileService\r\n            .postProfileImage(formdata, this.currentEmployee.id)\r\n            .then((res) => {\r\n              this.toastService.openSnackBar(\"Image Uploaded Successfully\");\r\n              this.getProfileData();\r\n              this.partyService.notifyPartyAdded();\r\n            });\r\n        }\r\n      }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-body\">\r\n    <div class=\"row\">\r\n        <div class=\"mb-3 col-lg-2 col-md-2 col-xl-2 col-sm-12\">\r\n            <div class=\"image-wrapper flex d-flex flex-row\">\r\n                <label class=\"profile-pic\" \r\n                   >\r\n                   <i class=\"bi bi-camera profile-icon bottom-right2 fw-bold\" style=\"font-size: 2rem; text-align: center; opacity:0.5; cursor : pointer\" ></i>\r\n\r\n                    <img  height=\"150\" width=\"150\" [src]=\"profileImagepath ? profileImagepath : '/assets/images/default-profile-pic.JPG'\"\r\n                        class=\"shadow-sm\" />\r\n                    <input type=\"file\" name=\"file\" accept=\"image/*\" (change)=\"documentChange($event)\">\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"mb-3 col-lg-10  col-md-10 col-xl-10 col-sm-12 \">\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white mb-3\">\r\n                    <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: center;\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-6  col-md-6 col-xl-6 col-sm-6\">\r\n                                <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Personal Details</div>\r\n                            </div>\r\n                            <div class=\"col-lg-6  col-md-6 col-xl-6 col-sm-6\">\r\n                                <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;float: right !important;\">Emp Id : {{this.employeeId}}</div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <hr>\r\n                    </div>\r\n                   \r\n                    <div class=\"card-body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Name</p>\r\n                                 <p>{{firstName}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Gender</p>\r\n                                <p>{{gender}}</p>\r\n        \r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Email Id</p>\r\n                                <p>{{email}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Mobile Number</p>\r\n                                <p>{{mobileNumber}}</p>\r\n                            </div>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n              \r\n\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white\">\r\n                    <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: middle;\" >\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Address Details</div>\r\n                        <hr>\r\n                    </div>\r\n                    \r\n                    <div class=\"card-body\">\r\n                        <div class=\"row mb-3\">\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Address</p>\r\n                                <p>{{address}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Country</p>\r\n                                <p>{{country}}</p>\r\n        \r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">State</p>\r\n                                <p>{{state}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">City</p>\r\n                                <p>{{city}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Pin Code</p>\r\n                                <p>{{pincode}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\"></div>\r\n    \r\n                        </div>\r\n                        \r\n                       \r\n                    </div>\r\n                </div>\r\n            \r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-work',\r\n  templateUrl: './employee-work.component.html',\r\n  styleUrls: ['./employee-work.component.scss']\r\n})\r\nexport class EmployeeWorkComponent implements OnInit {\r\n  public ProfileData:any\r\n  public employeeId:any;\r\n  public DateOfJoining:any\r\n  public assets:any;\r\n  public designation:any;\r\n  public jobrole:any;\r\n  public department:any\r\n  public profileImagepath:any;\r\n  public status:any;\r\n  \r\n  public currentEmployee = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  public profilePic=\"\";\r\n  constructor(private roleService:RolesPermissionsService,private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfileData();\r\n  }\r\n  getProfileData(){\r\n    this.roleService.getEmployeeById({}, this.currentEmployee.id).then((res:any)=>{\r\n      this.ProfileData=res.data;\r\n      this.employeeId=this.ProfileData.employee.id\r\n      this.DateOfJoining=this.ProfileData.employee.joiningDate\r\n      this.assets=this.ProfileData.employee.assets\r\n      this.designation=this.ProfileData.employee.designation\r\n      this.jobrole=this.ProfileData.employee.roleAssign\r\n      this.department=this.ProfileData.employee.department\r\n      this.profileImagepath=this.ProfileData.profileImage;\r\n      let empstatus=this.ProfileData.isActive\r\n      if(empstatus == true){\r\n        this.status=\"Active\"\r\n      }else{\r\n        this.status=\"Inactive\"\r\n      }\r\n   \r\n\r\n    },(err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    }\r\n    \r\n    )\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-body\">\r\n\r\n    <div class=\"row\">\r\n        <!-- <div class=\"mb-3 col-lg-2 col-md-2 col-xl-2 col-sm-12\">\r\n            <div class=\"image-wrapper flex d-flex flex-row\">\r\n                <label class=\"profile-pic\" \r\n                   >\r\n                    <img  height=\"150\" width=\"150\" [src]=\"profileImagepath ? profileImagepath : '/assets/images/default-profile-pic.JPG'\"\r\n                        class=\"shadow-sm\" />\r\n                     <input type=\"file\" name=\"file\" accept=\"image/*\"> -->\r\n                <!-- </label>\r\n            </div>\r\n        </div> --> \r\n        <div class=\"mb-3 col-lg-12  col-md-12 col-xl-12 col-sm-12 \">\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white mb-3\">\r\n                    <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: center;\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-6  col-md-6 col-xl-6 col-sm-6\">\r\n                                <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Basic Info</div>\r\n                            </div>\r\n                            <div class=\"col-lg-6  col-md-6 col-xl-6 col-sm-6\">\r\n                                <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;float: right !important;\">Emp Id : {{this.employeeId}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <hr>\r\n                    </div>\r\n                   \r\n                    <!-- <div class=\"card-body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Employee Id</p>\r\n                                <p>\r\n                                    {{employeeId}}\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Date of Joining</p>\r\n                                <p>{{DateOfJoining | date:\"dd MMM YYYY\"| uppercase}}</p>\r\n        \r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Employee Status</p>\r\n                                <p>{{status}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xl-3 col-lg-3 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Assets</p>\r\n                                <p>{{assets}}</p>\r\n                            </div>\r\n                        </div>\r\n                      \r\n                    </div> -->\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row mb-3\">\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Date of Joining</p>\r\n                                <p>{{DateOfJoining | date:\"dd MMM YYYY\"| uppercase}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Employee Status</p>\r\n                                <p>{{status}}</p>\r\n        \r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Assets</p>\r\n                                <p>{{assets}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              \r\n\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"card bg-white\">\r\n                    <div class=\"card-header\" style=\"justify-content: center; align-items: center; vertical-align: middle;\" >\r\n                        <div class=\"text-black\" style=\"font-weight:600;font-size:14px!important;\">Work Info</div>\r\n                        <hr>\r\n                    </div>\r\n                    \r\n                    <div class=\"card-body\">\r\n                        <div class=\"row mb-3\">\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Designation</p>\r\n                                <p>{{designation}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Job Role</p>\r\n                                <p>{{jobrole}}</p>\r\n        \r\n                            </div>\r\n                            <div class=\"col-md-4 col-xl-4 col-lg-4 col-sm-12\">\r\n                                <p class=\"text-black pHeading\">Department</p>\r\n                                <p>{{department}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmployeePersonalDetailsComponent } from './employee-personal-details/employee-personal-details.component';\r\nimport { EmployeeWorkComponent } from './employee-work/employee-work.component';\r\nimport { EmployeeEducationComponent } from './employee-education/employee-education.component';\r\nimport { EmployeeDocumentComponent } from './employee-document/employee-document.component';\r\nimport { MyProfileEmployeeComponent } from './my-profile-employee/my-profile-employee.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:MyProfileEmployeeComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'emp-profile',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'emp-profile',\r\n        component:EmployeePersonalDetailsComponent,\r\n      },\r\n      {\r\n        path:'emp-work',\r\n        component:EmployeeWorkComponent,\r\n      },\r\n      {\r\n        path:'emp-education',\r\n        component:EmployeeEducationComponent,\r\n      },\r\n      {\r\n        path:'emp-document',\r\n        component:EmployeeDocumentComponent,\r\n    \r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeeprofileRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmployeeprofileRoutingModule } from './employeeprofile-routing.module';\r\nimport { EmployeePersonalDetailsComponent } from './employee-personal-details/employee-personal-details.component';\r\nimport { EmployeeWorkComponent } from './employee-work/employee-work.component';\r\nimport { EmployeeEducationComponent } from './employee-education/employee-education.component';\r\nimport { EmployeeDocumentComponent } from './employee-document/employee-document.component';\r\nimport { MyProfileEmployeeComponent } from './my-profile-employee/my-profile-employee.component';\r\nimport { AddEducationEmployeeComponent } from './employee-education/add-education-employee/add-education-employee.component';\r\nimport { EddEducationEmployeeComponent } from './employee-education/edd-education-employee/edd-education-employee.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { DocumentIdcAddFormComponent } from './employee-document/document-idc-add-form/document-idc-add-form.component';\r\nimport { EditIDFormComponent } from './employee-document/document-idc-add-form/edit-idform/edit-idform.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmployeePersonalDetailsComponent,\r\n    EmployeeWorkComponent,\r\n    EmployeeEducationComponent,\r\n    EmployeeDocumentComponent,\r\n    MyProfileEmployeeComponent,\r\n    AddEducationEmployeeComponent,\r\n    EddEducationEmployeeComponent,\r\n    DocumentIdcAddFormComponent,\r\n    EditIDFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EmployeeprofileRoutingModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class EmployeeprofileModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-my-profile-employee',\r\n  templateUrl: './my-profile-employee.component.html',\r\n  styleUrls: ['./my-profile-employee.component.scss']\r\n})\r\nexport class MyProfileEmployeeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-4\">\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"row mt-3 page-nav-link\">\r\n             <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\" id=\"productlistLink\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-profile\" routerLinkActive='active'>Profile Details</a>\r\n              </div>\r\n              <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-work\" routerLinkActive='active'>Work</a>\r\n              </div>\r\n             <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-education\" routerLinkActive='active'>Education</a>\r\n              </div>\r\n              <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\">\r\n                <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./emp-document\" routerLinkActive='active'>Document</a>\r\n            </div>\r\n              <div class=\"col-xxl-9 col-xl-9 col-lg-9 col-md-3 col-sm-0 col-xs-0\"></div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <hr  class = \"mt-1\" />\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n  "]}