{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_5__","ctx_r10","appointment_r12","ctx_r3","AppointmentPageComponent","dialog","ScheduleAppointmentService","route","toastService","commonService","titleCasePipe","JSON","parse","localStorage","getItem","getAllAppointment","rowAdded$","subscribe","getAllAppointMent","currentUser","id","appointmentPageSize","currentPageNo","then","res","console","log","data","appointListRes","pageData","totalrow","totalrows","currentPage","toatlPages","totalPages","searchTerm","trim","filter","item","name","toLowerCase","includes","locationType","length","openErrorSnackBar","e","dialogRef","open","_add_appointment_add_appointment_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","disableClose","position","right","afterClosed","result","startIndex","pageIndex","pageSize","endIndex","Math","min","pageNumberDisplay","i","push","pagesize","$event","target","value","isChecked","checked","upiCheckedId1","map","archiveIconfalse","checkSelectsinglefalse","upiCheckedId","appointId","index","indexOf","splice","checkSingleArray","deletemultipleAppointment","openSnackBar","allSelect","err","error","expose","transform","error_message","appointmentId","deleteAppointmentById","_updateappointment_updateappointment_component__WEBPACK_IMPORTED_MODULE_1__","element","document","getElementById","ws","xlsx__WEBPACK_IMPORTED_MODULE_6__","wb","fileName","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_4__","UpdateappointmentComponent","formBuilder","scheduleAppointmentService","appointmentService","router","getmultipleShop","addAppointmentform","group","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","duration","LocationType","UserRole","Description","Cancellation","isDisable","withinDays","params","shopID","getappointment","controls","submitted","invalid","body","Name","Duration","postAppointDetails","resetForm","locations","tradeName","client","shopId","getAppointmentById","patchValue","userRole","description","cancellation","UpdateAppointmentDetails","notifyDataAdded","close","reset","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__","MainShopShcedulePageComponent","isActive","_angular_core__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_main_shop_shcedule_page_main_shop_shcedule_page_component__WEBPACK_IMPORTED_MODULE_0__","children","redirectTo","pathMatch","_shop_details_page_shop_details_page_component__WEBPACK_IMPORTED_MODULE_1__","_appointment_page_appointment_page_component__WEBPACK_IMPORTED_MODULE_2__","_time_schedule_page_time_schedule_page_component__WEBPACK_IMPORTED_MODULE_3__","_shop_details_page_update_shop_update_shop_component__WEBPACK_IMPORTED_MODULE_4__","routerLinkActiveOptions","exact","NewShopScheduleRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_6__","imports","exports","NewShopScheduleModule","_angular_common__WEBPACK_IMPORTED_MODULE_12__","_new_shop_schedule_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_13__","src_app_material_module__WEBPACK_IMPORTED_MODULE_7__","_angular_material_input__WEBPACK_IMPORTED_MODULE_14__","_angular_material_button__WEBPACK_IMPORTED_MODULE_15__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_16__","_angular_material_core__WEBPACK_IMPORTED_MODULE_17__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_19__","_angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_20__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_21__","declarations","_main_shop_shcedule_page_main_shop_shcedule_page_component__WEBPACK_IMPORTED_MODULE_1__","_shop_details_page_shop_details_page_component__WEBPACK_IMPORTED_MODULE_2__","_appointment_page_appointment_page_component__WEBPACK_IMPORTED_MODULE_3__","_time_schedule_page_time_schedule_page_component__WEBPACK_IMPORTED_MODULE_4__","_appointment_page_add_appointment_add_appointment_component__WEBPACK_IMPORTED_MODULE_5__","_shop_details_page_update_shop_update_shop_component__WEBPACK_IMPORTED_MODULE_6__","_time_schedule_page_add_time_schedule_add_time_schedule_component__WEBPACK_IMPORTED_MODULE_8__","_appointment_page_updateappointment_updateappointment_component__WEBPACK_IMPORTED_MODULE_9__","_time_schedule_page_edit_time_schedule_page_edit_time_schedule_page_component__WEBPACK_IMPORTED_MODULE_10__","_angular_core__WEBPACK_IMPORTED_MODULE_3__","ShopDetailsPageComponent","ScheduleShopService","scheduleScheduleService","getShopList","rows","ShopListResponse","isActiveById","isActiveShop","success","email","ctx_r82","_r85","_r81","ctx_r21","UpdateShopComponent","profileService","partyService","scheduleShopService","fb","cdr","Date","setDate","getDate","label","getMonth","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","today","maxDate","getFullYear","TradeForm","ProfileForm","firstName","disabled","legalName","businessType","mobile","gstType","gstStatus","gstinNo","state","city","pincode","district","landmark","country","homeno","address","accountMethod","compositeType","businessNature","panNumber","financialYearFrom","bookBeginningFrom","cinNumber","profileImage","signatureImage","getType","getBusinessCategory","getTradeDetails","addressForm","addresses","businessPlaceAdd","areaStreet","setTimeout","detectChanges","showAdditionalFields","cin","cinNo","toUpperCase","regex","test","setErrors","incorrect","pan","panNo","GSTIN","gstNumber","getGstNumber","get","createAddress","removeAt","businessForm","isShown","clearValidators","updateValueAndValidity","setValidators","getshopListBYshopId","constitutionBusinessType","primaryAddress","addressId","addressControls","isRegistered","toggleShow","additional","basicdetails","totalPlaces","fullName","moment__WEBPACK_IMPORTED_MODULE_0__","format","pin","getUserPincode","pinDetails","districtName","stateName","at","gstin","gstDetails","constitution","taxPayerType","status","isDisabledGST","getTypes","response","typeList","registerdProfileData","basicDetails","lastName","parentId","shopDetails","category","categoryId","businesses","categoryBusiness","finalObject","valid","UpdateShopDetails","navigate","ststus","newAddress","addressData","toString","postMultipleAddress","window","location","reload","addressArray","event","updateMultipleAddress","deleteAddressById","updateClientMobileOTP","mobileotp","mobileOtp","updateClientMobile","input","categoryCtrl","setValue","categoryName","newValue","option","viewValue","fruit","categoryInput","nativeElement","requestAnimationFrame","openAuto","matACTrigger","trigger","openPanel","focus","getCategoryBySearch","serachByCategory","getBuisnessCategoryAll","filteredCategory","valueChanges","pipe","filterNames","slice","list","array","self","charCode","which","keyCode","viewQuery","EditTimeSchedulePageComponent","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","schedule_r12","TimeSchedulePageComponent","modal","getAllSchedule","schedulePageSize","schduleAllRes","scheduleName","appointmentType","shopListWithId","dismissAll","scheduleId","currentScheduleId","deletemultipleSchedule","deleteschedulybyId","_add_time_schedule_add_time_schedule_component__WEBPACK_IMPORTED_MODULE_0__","_edit_time_schedule_page_edit_time_schedule_page_component__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///src/app/pages/new-shop-schedule/appointment-page/appointment-page.component.html","webpack:///src/app/pages/new-shop-schedule/appointment-page/appointment-page.component.ts","webpack:///src/app/pages/new-shop-schedule/appointment-page/updateappointment/updateappointment.component.html","webpack:///src/app/pages/new-shop-schedule/appointment-page/updateappointment/updateappointment.component.ts","webpack:///src/app/pages/new-shop-schedule/main-shop-shcedule-page/main-shop-shcedule-page.component.ts","webpack:///src/app/pages/new-shop-schedule/main-shop-shcedule-page/main-shop-shcedule-page.component.html","webpack:///src/app/pages/new-shop-schedule/new-shop-schedule-routing.module.ts","webpack:///src/app/pages/new-shop-schedule/new-shop-schedule.module.ts","webpack:///src/app/pages/new-shop-schedule/shop-details-page/shop-details-page.component.html","webpack:///src/app/pages/new-shop-schedule/shop-details-page/shop-details-page.component.ts","webpack:///src/app/pages/new-shop-schedule/shop-details-page/update-shop/update-shop.component.html","webpack:///src/app/pages/new-shop-schedule/shop-details-page/update-shop/update-shop.component.ts","webpack:///src/app/pages/new-shop-schedule/time-schedule-page/edit-time-schedule-page/edit-time-schedule-page.component.ts","webpack:///src/app/pages/new-shop-schedule/time-schedule-page/edit-time-schedule-page/edit-time-schedule-page.component.html","webpack:///src/app/pages/new-shop-schedule/time-schedule-page/time-schedule-page.component.html","webpack:///src/app/pages/new-shop-schedule/time-schedule-page/time-schedule-page.component.ts"],"sourcesContent":["<div class=\"container-fluid bg-white p-0\">\r\n    <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n        <div class=\"flex-item searchBar\">\r\n            <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Location Type\"\r\n                [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchAppoint()\" autocomplete=\"off\">\r\n        </div>\r\n        <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n            <button id=\"saleButtonPrint1\" class=\"btn text-nowrap my-2\" type=\"button\" (click)=\"openDialogAppointment()\">\r\n                <i class=\"fas fa-plus me-2\"> </i>Add Appointment\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <hr class=\"my-0 py-0\" /> -->\r\n    <div style=\"width:100% ; overflow-x: auto;\">\r\n        <table class=\"table table-responsive table-bordered fs--1 mb-0\">\r\n            <thead class=\"text-600\">\r\n                <tr>\r\n                    <!-- <th class=\"text-nowrap col-1\" style=\"vertical-align:middle;\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\" (change)=\"onChekMultiple($event)\"\r\n                            [value]=\"-1\" [checked]=\"checkSelect\" [(ngModel)]=\"allSelect\" />\r\n\r\n                        <span *ngIf=\"archiveIconfalse\">\r\n                            <button style=\"padding: 0px!important;\"\r\n                                *ngIf=\"checkSingleArray.length > 0 || upiCheckedId.length > 0\" class=\"btn ms-3\"\r\n                                data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                                <span *ngIf=\"checkSingleArray.length > 0 || upiCheckedId.length > 0\"\r\n                                    class=\"bi-trash icon-color fs-1\" style=\"color: red;\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Archive\"\r\n                                    (click)=\" upiCheckedId.length > 0? getUPIcheckId($event,upiCheckedId):getSingleCheckedId($event,checkSingleArray)\"></span>\r\n                            </button>\r\n                        </span>\r\n                        </th> -->\r\n                        <th class=\"text-nowrap\" style=\"vertical-align:middle;width:6%;\">\r\n\r\n                            <input type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\" (change)=\"onChekMultiple($event)\"\r\n                                [value]=\"-1\" [checked]=\"upiCheckedId.length === appointListRes.length\"\r\n                                [(ngModel)]=\"allSelect\" />\r\n                            <span *ngIf=\"showDeleteButton()\">\r\n                                <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                                    <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                        class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                        style=\"color : red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                        title=\"Delete\"\r\n                                        (click)=\" upiCheckedId.length > 0? getUPIcheckId($event,upiCheckedId):getSingleCheckedId($event,checkSingleArray)\">\r\n                                    </span>\r\n                                </button>\r\n                            </span>\r\n\r\n                    </th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Name</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Duration</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Location Type</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Description</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">User Role</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Cancellation</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">IsDisable</th>\r\n\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\"></th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr class=\"btn-reveal-trigger text-left\" *ngFor=\"let appointment of appointListRes; let i = index\"\r\n                    style=\"color: #676398!important;\">\r\n                    <!-- <td scope=\"row\" style=\"vertical-align:middle;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"checkSelectsinglefalse\"\r\n                            (change)=\"onChekedsingleCheckfalse($event,appointment.id)\" [value]=\"appointment.id\" />\r\n                    </td> -->\r\n                    <td scope=\"row\" style=\"vertical-align:middle;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\"\r\n                            [checked]=\"upiCheckedId.includes(appointment.id)\"\r\n                            (change)=\"onChekedsingleCheck($event, appointment.id)\" [value]=\"appointment.id\" />\r\n                    </td>\r\n                    <td style=\"vertical-align:middle;\">{{ appointment.name }}</td>\r\n                    <td class=\"barcode\" style=\"vertical-align:middle;\">{{ appointment.duration }}</td>\r\n                    <td class=\"category\" style=\"vertical-align:middle;\">{{ appointment?.shopInfo.client.tradeName ? appointment?.shopInfo.client.tradeName : ''}}</td>\r\n\r\n                    <td class=\"openingStock\" style=\"vertical-align:middle;\">{{ appointment.description }}</td>\r\n                    <td class=\"openingStock\" style=\"vertical-align:middle;\">{{ appointment.userRole }}</td>\r\n                    <td class=\"openingStock\" style=\"vertical-align:middle;\">{{ appointment.cancellation }}</td>\r\n                    <td class=\"openingStock\" style=\"vertical-align:middle;\">{{ appointment.isDisable }}</td>\r\n\r\n                    <td style=\"vertical-align:middle; white-space:nowrap; \">\r\n                        <div class=\"ps-5\">\r\n                            <button class=\"btn p-2 mx-1\" type=\"button\" (click)=\"updateModal(appointment.id)\"\r\n                                routerLinkActive=\"active\">\r\n                                <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                            </button>\r\n\r\n                            <button class=\"btn p-0 m-2\" data-bs-toggle=\"modal\"\r\n                                data-bs-target=\"#errorDelete-modal\">\r\n                                <span class=\"bi-trash icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Delete\" style=\"color: red;\"\r\n                                    (click)=\" deleteAppointMent(appointment.id)\"></span>\r\n                                <!-- Delete -->\r\n                                <!-- <button class=\"btn col-4 p-0 m-0\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                                <span class=\"bi-trash icon-color iconFontSize\" data-bs-toggle=\"tooltip\" style=\"color: red;\"\r\n                                    data-bs-placement=\"top\" title=\"Delete\" (click)=\"GetGroupById(item.id)\"></span>\r\n                            </button> -->\r\n                            </button>\r\n\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n            <tbody *ngIf=\"appointListRes == 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <mat-paginator sticky class=\"float-right mt-2\" *ngIf=\"toatlPages > 0\" [pageSize]=\"appointmentPageSize\"\r\n            [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo -1\" showFirstLastButtons\r\n            (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n        </mat-paginator>\r\n    </div>\r\n\r\n\r\n    <!-- <mat-paginator sticky class=\"float-right mt-2\" *ngIf=\"appointListRes.length > 0\" [pageSize]=\"appointmentPageSize\"\r\n        [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\" showFirstLastButtons\r\n        (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n    </mat-paginator> -->\r\n\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Appointment? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are you sure to Delete this Appointment?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"removeAppointMent()\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Appointment? </h2>\r\n                </div>\r\n                <!-- <h4   *ngIf=\"!isChecked  && !checkSingleArray \"class=\"text-center \">Are you sure to delete this UPI?</h4> -->\r\n                <h4 *ngIf=\"isChecked \" class=\"text-center \">Are you sure to Delete All Appointment?</h4>\r\n                <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are you sure to Delete selected Appointment?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <!-- <a   *ngIf=\"!isChecked  && !checkSingleArray \" class=\"btn btn-outline-primary\" data-bs-dismiss=\"modal\" (click)=\"deletExpenseById()\">Delete\r\n                </a> -->\r\n                <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteByAppointment()\">Delete All\r\n                </a>\r\n                <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteByAppointment()\">Delete Selected\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AddAppointmentComponent } from './add-appointment/add-appointment.component';\r\nimport { ScheduleAppointmentService } from 'src/app/core/services/schedule-appointment.service';\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UpdateappointmentComponent } from './updateappointment/updateappointment.component';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-appointment-page',\r\n  templateUrl: './appointment-page.component.html',\r\n  styleUrls: ['./appointment-page.component.scss']\r\n})\r\nexport class AppointmentPageComponent implements OnInit {\r\n  public AppointmentList: any = [];\r\n  fileName = 'Appointment.xlsx';\r\n  public userId: any\r\n  public shopID: any;\r\n  public toatlPages: number;\r\n  public currentPageNo: number = 1;\r\n  public appointmentPageSize: number = 5;\r\n  public pagesize: number = 1;\r\n  public count: number = 0;\r\n  public appointListRes: any = [];\r\n  public totalrow: any;\r\n  pageNumberDisplay: number[] = [];\r\n  searchTerm: string;\r\n  public appointId: any;\r\n  public searchKey: any;\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  public archiveIconfalse: boolean = false;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSingleArray: any = [];\r\n  appointments: any[] = [];\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  constructor(public dialog: MatDialog,\r\n    private ScheduleAppointmentService: ScheduleAppointmentService,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastNotificationService,\r\n    private commonService: CommonService,\r\n    private titleCasePipe: TitleCasePipe,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllAppointment();\r\n\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getAllAppointment();\r\n    });\r\n  }\r\n\r\n  getAllAppointment() {\r\n    this.ScheduleAppointmentService.getAllAppointMent({}, this.currentUser.id, this.appointmentPageSize, this.currentPageNo).then((res) => {\r\n      console.log(res.data)\r\n      this.appointListRes = res.data.pageData;\r\n      this.totalrow = res.data.totalrows;\r\n      // this.totalPages = res.data.totalPages;\r\n      this.currentPageNo = res.data.currentPage;\r\n      this.toatlPages = res.data.totalPages;\r\n    })\r\n  }\r\n\r\n  searchAppoint() {\r\n    // debugger\r\n    console.log(\"search\", this.searchTerm);\r\n    if (this.searchTerm.trim() === '') {\r\n      console.log('No search term')\r\n      this.ScheduleAppointmentService.getAllAppointMent({}, this.currentUser.id, this.appointmentPageSize, 1).then((res) => {\r\n        this.appointListRes = res.data.pageData;\r\n        this.currentPageNo = res.data.currentPage;\r\n})\r\n    } else {\r\n      this.ScheduleAppointmentService.getAllAppointMent({}, this.currentUser.id, this.appointmentPageSize, (this.currentPageNo )).then((res: any) => {\r\n        console.log(res.data.pageData)\r\n        this.appointListRes = res.data.pageData.filter(item => {\r\n          return (\r\n            // item.scheduleName.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n            item.locationType.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n            // item.appointmentType.locationType.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n          );\r\n        });\r\n        console.log(this.appointListRes);\r\n      });\r\n      if (this.appointListRes.length === 0) {\r\n        this.toastService.openErrorSnackBar(this.searchTerm + \" is not found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  startUpload() {\r\n\r\n  }\r\n  handleInputChange(e) {\r\n  }\r\n  openDialogAppointment() {\r\n    const dialogRef: MatDialogRef<AddAppointmentComponent> = this.dialog.open(AddAppointmentComponent, {\r\n      width: '600px',\r\n      height: '730px',\r\n      data: {},\r\n      panelClass: 'custom-dialog-AddAppointment-class',\r\n      disableClose: true,\r\n      // position: {\r\n      //   center: '0',\r\n      // },\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  // public handlePage(e: any) {\r\n  //   this.currentPageNo = e.pageIndex;\r\n  //   this.pagesize = e.pageSize;\r\n  //   if (this.appointListRes.length > 0) {\r\n  //     this.appointmentPageSize = e.pageSize;\r\n  //     this.getAppointmentDetails();\r\n  //   }\r\n  // }\r\n  public handlePage(e: any) {\r\n    const startIndex = e.pageIndex * e.pageSize + 1;\r\n    const endIndex = Math.min(startIndex + e.pageSize - 1, e.length);\r\n\r\n    this.pageNumberDisplay = [];\r\n    for (let i = startIndex; i <= endIndex; i++) {\r\n      this.pageNumberDisplay.push(i);\r\n    }\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n    // if (this.partyList.length > 0) {\r\n    this.appointmentPageSize = e.pageSize;\r\n    this.getAllAppointment();\r\n    // }\r\n  }\r\n  getDeleteAppoint() {\r\n\r\n  }\r\n  onChekMultiple($event) {\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    console.log(\"this.isChecked\", this.isChecked)\r\n    this.upiCheckedId1 = this.appointListRes.map((item) => {\r\n      if (id == -1) {\r\n        if (this.isChecked == true) {\r\n          this.archiveIconfalse = true;\r\n          this.checkSelectsinglefalse = true;\r\n          return item;\r\n        }\r\n        else {\r\n          this.archiveIconfalse = false;\r\n          this.checkSelectsinglefalse = false;\r\n          this.upiCheckedId = [];\r\n          this.upiCheckedId1=[];\r\n        }\r\n      }\r\n    })\r\n    console.log(\"multiple click\", this.upiCheckedId1)\r\n    for (var i = 0; i < this.upiCheckedId1.length; i++) {\r\n        this.upiCheckedId.push(this.upiCheckedId1[i].id);\r\n    }\r\n    console.log(\"multiple click\", this.upiCheckedId)\r\n\r\n  }\r\n  // onChekedsingleCheckfalse(e, id) {\r\n  //   console.log(\"checked\", e.target.checked)\r\n\r\n  //   if (e.target.checked == true) {\r\n  //     this.archiveIconfalse = true;\r\n  //     this.checkSingleArray.push(e.target.value);\r\n\r\n  //   }\r\n  //   else {\r\n  //     if (this.upiCheckedId.length > this.checkSingleArray.length) {\r\n\r\n  //       var index1 = this.upiCheckedId.indexOf(id);\r\n  //       console.log(index1)\r\n  //       this.upiCheckedId.splice(index1, 1);\r\n  //       console.log(\"after single click upiCheckedId\", this.upiCheckedId)\r\n\r\n  //       if (this.upiCheckedId.length > 0) {\r\n  //         this.archiveIconfalse = true;\r\n  //         this.checkSelect = false;\r\n  //         this.isChecked=false;\r\n  //       }\r\n  //       else {\r\n  //         this.archiveIconfalse = false;\r\n  //         this.upiCheckedId = [];\r\n  //       }\r\n\r\n  //     }\r\n  //     else {\r\n  //       var index = this.checkSingleArray.indexOf(id);\r\n  //       console.log(index)\r\n  //       this.checkSingleArray.splice(index, 1);\r\n  //       console.log(\"this.checkSingleArray\", this.checkSingleArray)\r\n\r\n  //       if (this.checkSingleArray.length > 0) {\r\n  //         this.archiveIconfalse = true;\r\n  //       }\r\n  //       else {\r\n  //         this.archiveIconfalse = false;\r\n  //         this.checkSingleArray = [];\r\n  //       }\r\n\r\n  //     }\r\n  //   }\r\n  // }\r\n  onChekedsingleCheck(e, appointId){\r\n    if (e.target.checked) {\r\n      this.upiCheckedId.push(appointId);\r\n    } else {\r\n      const index = this.upiCheckedId.indexOf(appointId);\r\n      if (index !== -1) {\r\n        this.upiCheckedId.splice(index, 1);\r\n      }\r\n    }\r\n    // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n    if (e.target.checked) {\r\n      this.checkSingleArray.push(e.target.value);\r\n    }\r\n    else {\r\n      this.checkSingleArray = [];\r\n    }\r\n \r\n  }\r\n  getUPIcheckId(e, appointId) {\r\n    this.appointId = appointId;\r\n    console.log(\"this.appointId\",this.appointId)\r\n    \r\n  }\r\n  getSingleCheckedId(e, appointId) {\r\n    this.appointId = appointId;\r\n\r\n  }\r\n  showDeleteButton(): boolean {\r\n    return this.upiCheckedId.length > 0;\r\n  }\r\n  deleteByAppointment(){\r\n    this.ScheduleAppointmentService.deletemultipleAppointment({\"appointmentsId\": this.upiCheckedId}, this.currentUser.id).then((res) => {\r\n      if (res) {\r\n        // this.goodsData = res.data.pageData;\r\n        this.toastService.openSnackBar(\"Appointment Deleted Successfully!!!\");\r\n        this.archiveIconfalse = false;\r\n        this.allSelect = false;\r\n        this.checkSelectsinglefalse = false;\r\n        this.isChecked=false;\r\n        this.upiCheckedId = [];\r\n        this.checkSingleArray = [];\r\n       \r\n        this.getAllAppointment();  \r\n      }\r\n\r\n    }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n  deleteAppointMent(appointmentId : any) {\r\n    console.log(\"InDeleteAppointment\")\r\n    this.appointId = appointmentId\r\n    // console.log(\"appointment\",this.appointId)\r\n  }\r\n\r\n  removeAppointMent() {\r\n    console.log(\"removeAppointMent\")\r\n\r\n    this.ScheduleAppointmentService.deleteAppointmentById({}, this.appointId).then((res : any) => {\r\n      console.log(\"----------\", res)\r\n      this.toastService.openSnackBar(\"Appointment Deleted Successfully!!!\");\r\n      this.getAllAppointment();\r\n\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n\r\n      })\r\n  }\r\n  updateModal(appointmentId): void {\r\n    const dialogRef: MatDialogRef<UpdateappointmentComponent> = this.dialog.open(UpdateappointmentComponent, {\r\n      width: '600px',\r\n      height: '730px',\r\n      data: { appointmentId: appointmentId },\r\n      panelClass: 'custom-dialog-Updateappointment',\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  ExcelDownlod() {\r\n    /* pass here the table id */\r\n    let element = document.getElementById('excel-table');\r\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(element);\r\n\r\n    /* generate workbook and add the worksheet */\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n    /* save to file */\r\n    XLSX.writeFile(wb, this.fileName);\r\n\r\n  }\r\n}\r\n","<!-- <div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-1\">Update Appointment</h1>\r\n\r\n    <div class=\"flex d-flex flex-row\" style=\"margin-left: auto;\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"getAppointmentType()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div> -->\r\n\r\n<div class=\"modal-header pt-0\">\r\n\r\n  <h1 style=\"color: #EB8B3F; font-weight: 500;\" class=\"modal-title mb-0 \">Update Appointment</h1>\r\n\r\n  <div class=\"addProductButtons\">\r\n\r\n    <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n\r\n    <button type=\"button\" class=\"btn btn-save\" (click)=\"getAppointmentType()\">Save</button>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"addAppointmentform\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Name<span class=\"error-asterisk\">*</span> </label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Name\" formControlName=\"name\" required autocomplete=\"off\"\r\n                        [ngClass]=\"{\r\n                            'is-invalid':\r\n                              f.name.invalid && f.name.touched && submitted\r\n                          }\" >\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"submitted || f.name.touched\">\r\n                            <mat-error *ngIf=\"f.name.errors?.required\">\r\n                                Name Is Required!\r\n                            </mat-error>\r\n                        </mat-error>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Duration<span class=\"error-asterisk\">*</span> </label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Duration\" formControlName=\"duration\" required autocomplete=\"off\"\r\n                        [ngClass]=\"{\r\n                            'is-invalid':\r\n                              f.duration.invalid && f.duration.touched && submitted\r\n                          }\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.duration.touched\">\r\n                        <mat-error *ngIf=\"f.duration.errors?.required\">\r\n                            Duration Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Shop Location<span class=\"error-asterisk\">*</span> </label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"LocationType\" placeholder=\"Shop Location\" [ngClass]=\"{\r\n                            'is-invalid':\r\n                            f.LocationType.invalid && f.LocationType.touched && submitted\r\n                          }\">\r\n                                <mat-option *ngFor=\"let location of locations\" [value]=\"location.shopId\">\r\n                                    {{ location.tradeName }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"submitted || f.LocationType.touched\">\r\n                            <mat-error *ngIf=\"f.LocationType.errors?.required\">\r\n                                Shop Location Is Required!\r\n                            </mat-error>\r\n                        </mat-error>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">User Role<span class=\"error-asterisk\">*</span> </label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"UserRole\" [ngClass]=\"{\r\n                            'is-invalid':\r\n                            f.UserRole.invalid && f.UserRole.touched && submitted\r\n                          }\">\r\n                                    <mat-option *ngFor=\"let userR of userRoles\" [value]=\"userR.userRole\">\r\n                                        {{userR.userRole}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-error class=\"text-danger\" *ngIf=\"submitted || f.UserRole.touched\">\r\n                                <mat-error *ngIf=\"f.UserRole.errors?.required\">\r\n                                    User Role Is Required!\r\n                                </mat-error>\r\n                            </mat-error>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Description<span class=\"error-asterisk\">*</span> </label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput cols=\"35\" rows=\"4\" placeholder=\"Description\" formControlName=\"Description\"\r\n                        [ngClass]=\"{\r\n                            'is-invalid':\r\n                            f.Description.invalid && f.Description.touched && submitted\r\n                          }\">\r\n                        </textarea>\r\n                            </mat-form-field>\r\n                            <mat-error class=\"text-danger\" *ngIf=\"submitted || f.Description.touched\">\r\n                                <mat-error *ngIf=\"f.Description.errors?.required\">\r\n                                    Description Is Required!\r\n                                </mat-error>\r\n                            </mat-error>\r\n                </div>\r\n            </div>\r\n\r\n            <div  class = \"my-2\">\r\n                <mat-checkbox formControlName=\"Cancellation\"  style = \"margin-left: 5px;\">\r\n                    <span style = \"font-size: 14px;\">Cancellation</span>\r\n                </mat-checkbox>\r\n\r\n            </div>\r\n            <!-- <div>\r\n                <mat-checkbox formControlName=\"isDisable\">\r\n                    Is Disable\r\n                </mat-checkbox>\r\n\r\n            </div> -->\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Within Days<span class=\"error-asterisk\">*</span> </label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matNativeControl type=\"number\" required matInput formControlName=\"withinDays\"\r\n                            placeholder=\"Enter Days\" min=\"0\" oninput=\"this.value = Math.abs(this.value)\" [ngClass]=\"{\r\n                                'is-invalid':\r\n                                f.withinDays.invalid && f.withinDays.touched && submitted\r\n                              }\">\r\n                            </mat-form-field>\r\n                            <mat-error class=\"text-danger\" *ngIf=\"submitted || f.withinDays.touched\">\r\n                                <mat-error *ngIf=\"f.withinDays.errors?.required\">\r\n                                    Within Days Is Required!\r\n                                </mat-error>\r\n                            </mat-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppointmentService } from 'src/app/core/services/appointment.service';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ScheduleAppointmentService } from 'src/app/core/services/schedule-appointment.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-updateappointment',\r\n  templateUrl: './updateappointment.component.html',\r\n  styleUrls: ['./updateappointment.component.scss']\r\n})\r\nexport class UpdateappointmentComponent implements OnInit {\r\n  public submitted: boolean;\r\n  isActive: boolean;\r\n  public ShopListResponse: any;\r\n  public appointmentId: any;\r\n  public appointListRes: any = [];\r\n\r\n  public addAppointmentform: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  shopID: any;\r\n\r\n  locations = [];\r\n\r\n  userRoles = [\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"Admin\"\r\n\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"User\"\r\n\r\n    }\r\n  ]\r\n  constructor(private formBuilder: FormBuilder,\r\n    private scheduleAppointmentService: ScheduleAppointmentService,\r\n    private commonService : CommonService,\r\n\r\n    private appointmentService: AppointmentService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n\r\n    public dialogRef: MatDialogRef<UpdateappointmentComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getmultipleShop();\r\n    this.appointmentId = this.data.appointmentId\r\n\r\n    this.addAppointmentform = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      duration: ['', Validators.required],\r\n      LocationType: [\"\", [Validators.required]],\r\n      UserRole: [\"\", Validators.required],\r\n      Description: [\"\", Validators.required],\r\n      Cancellation: [false, Validators.required],\r\n      isDisable: [false, Validators.required],\r\n      withinDays: [\"\",[Validators.required]]\r\n\r\n    });\r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n    this.getappointment();\r\n  }\r\n  get f() {\r\n    return this.addAppointmentform.controls;\r\n  }\r\n\r\n  saveAppointForm() {\r\n    this.submitted = true;\r\n    if (this.addAppointmentform.invalid) {\r\n      console.log(this.addAppointmentform.controls);\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    let body = {\r\n      \"name\": this.addAppointmentform.controls.Name.value,\r\n      \"duration\": this.addAppointmentform.controls.Duration.value,\r\n      \"locationType\": this.addAppointmentform.controls.LocationType.value,\r\n      \"userRole\": this.addAppointmentform.controls.UserRole.value,\r\n      \"description\": this.addAppointmentform.controls.Description.value,\r\n      \"cancellation\": this.addAppointmentform.controls.Cancellation.value ? this.addAppointmentform.controls.Cancellation.value : false,\r\n      \"isDisable\": this.addAppointmentform.controls.isDisable.value ? this.addAppointmentform.controls.isDisable.value : false,\r\n      \"withinDays\": this.addAppointmentform.controls.withinDays.value,\r\n      \"userId\": this.currentUser.id,\r\n      \"shopId\": this.shopID\r\n    }\r\n\r\n    this.scheduleAppointmentService.postAppointDetails(body).then((res) => {\r\n      if (res) {\r\n        this.toastService.openSnackBar(\"Shop Appointment Added Successfully.\");\r\n        // this.router.navigate([\"/pages/shop-setting/shopID/shop-appointment/shopID\"]);\r\n        // this.appointMentForm.reset();\r\n        this.resetForm();\r\n        this.submitted = false;\r\n\r\n      }\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  getmultipleShop(){\r\n    this.scheduleAppointmentService.getmultipleShop({},this.currentUser.id).then((res) => {\r\n      console.log(\"response\", res);\r\n      this.locations = res.data.map((data : any) => {\r\n        console.log(\"data\", data);\r\n        return {\r\n          // shopId: data[0].client.shopId,\r\n            tradeName: data.client.tradeName,\r\n            shopId: data.id\r\n          // tradeName: data[0].client.tradeName\r\n        }\r\n       \r\n      })\r\n      if (this.locations.length === 0) {\r\n        this.toastService.openErrorSnackBar(\"No shops available. Please create a new shop before adding a new appointment.\");\r\n    }\r\n      console.log(\"locations\", this.locations); \r\n\r\n    })\r\n  }\r\n  resetForm() {\r\n    // this.appointMentForm.reset();\r\n    this.addAppointmentform = this.formBuilder.group({\r\n      Name: [\"\", [Validators.required,]],\r\n      Duration: [\"\", [Validators.required]],\r\n      LocationType: [\"\", [Validators.required]],\r\n      UserRole: [\"\", Validators.required],\r\n      Description: [\"\", Validators.required],\r\n      Cancellation: [false, Validators.required],\r\n      isDisable: [false, Validators.required],\r\n      withinDays: [\"\"]\r\n\r\n    });\r\n  }\r\n  getappointment() {\r\n    // console.log(\"update\");\r\n    console.log(this.appointmentId)\r\n\r\n    this.appointmentService.getAppointmentById({}, this.appointmentId).then((res) => {\r\n      this.appointListRes = res.data.pageData;\r\n      this.addAppointmentform.patchValue({\r\n        name: res.data.name,\r\n        duration: res.data.duration,\r\n        LocationType: res.data.locationType,\r\n        UserRole: res.data.userRole,\r\n        Description: res.data.description,\r\n        Cancellation: res.data.cancellation,\r\n        isDisable: res.data.isDisable,\r\n        withinDays: res.data.withinDays,\r\n      })\r\n    });\r\n  }\r\n  getAppointmentType(){\r\n    this.submitted = true;\r\n    // if (this.appointMentForm.valid) {\r\n    //   return false;\r\n    // }\r\n    let body = {\r\n      \"name\": this.addAppointmentform.controls.name.value,\r\n      \"duration\": this.addAppointmentform.controls.duration.value,\r\n      \"locationType\": this.addAppointmentform.controls.LocationType.value,\r\n      \"userRole\": this.addAppointmentform.controls.UserRole.value,\r\n      \"description\": this.addAppointmentform.controls.Description.value,\r\n      \"cancellation\": this.addAppointmentform.controls.Cancellation.value,\r\n      \"isDisable\": this.addAppointmentform.controls.isDisable.value,\r\n      \"withinDays\": this.addAppointmentform.controls.withinDays.value\r\n    }\r\n\r\n\r\n    this.appointmentService.UpdateAppointmentDetails(body, this.appointmentId).then((res) => {\r\n      if (res) {\r\n        this.toastService.openSnackBar(\"Record Updated Successfully!!!\")\r\n        this.getappointment();\r\n        this.commonService.notifyDataAdded()\r\n\r\n        this.submitted = false;\r\n        this.dialogRef.close();\r\n\r\n      }\r\n      // this.router.navigate([\"/pages/shop-setting/shopID/shop-appointment/shopID\"]);\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      })\r\n\r\n  }\r\n    \r\n  \r\n\r\n  cancel() {\r\n    // Reset the form and submitted flag\r\n    this.addAppointmentform.reset();\r\n    this.submitted = false;\r\n    this.dialogRef.close();\r\n\r\n  }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-main-shop-shcedule-page',\r\n  templateUrl: './main-shop-shcedule-page.component.html',\r\n  styleUrls: ['./main-shop-shcedule-page.component.scss']\r\n})\r\nexport class MainShopShcedulePageComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  isLinkActive(route: string): boolean {\r\n    return this.router.isActive(route, true);\r\n  }\r\n}\r\n","<div class=\"component-container container-fluid p-4\">\r\n    <div id=\"navPanel\" class=\"row\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row page-nav-link mt-3\">\r\n          <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./shop-details-list\" routerLinkActive=\"active\">Shop Details</a>\r\n          </div>\r\n          <div class=\"col-xxl-2 col-xl-2 col-lg-2 col-md-4 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./appointment-list\" routerLinkActive=\"active\">Appointment</a>\r\n          </div>\r\n          <div class=\"col-xxl-2 col-xl-2 col-lg-3 col-md-4 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./time-schedule-list\" routerLinkActive=\"active\">Time Schedule</a>\r\n          </div>\r\n          <div class=\"col-lg-5\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"mt-1\">\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainShopShcedulePageComponent } from './main-shop-shcedule-page/main-shop-shcedule-page.component';\r\nimport { ShopDetailsPageComponent } from './shop-details-page/shop-details-page.component';\r\nimport { AppointmentPageComponent } from './appointment-page/appointment-page.component';\r\nimport { TimeSchedulePageComponent } from './time-schedule-page/time-schedule-page.component';\r\nimport { UpdateShopComponent } from './shop-details-page/update-shop/update-shop.component';\r\nimport { ActivePageComponent } from '../campaign/active-page/active-page.component';\r\nimport { DraftPageComponent } from '../campaign/draft-page/draft-page.component';\r\nimport { EndedPageComponent } from '../campaign/ended-page/ended-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MainShopShcedulePageComponent,\r\n    children: [\r\n      {\r\n        path: '', \r\n        redirectTo: 'shop-details-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: \"shop-details-list\",\r\n        component: ShopDetailsPageComponent,\r\n      },\r\n      {\r\n        path: \"appointment-list\",\r\n        component: AppointmentPageComponent,\r\n      },\r\n      {\r\n        path: \"time-schedule-list\",\r\n        component: TimeSchedulePageComponent,\r\n      },\r\n      {\r\n        path: \"edit-trade-details/:id\",\r\n        component: UpdateShopComponent,\r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NewShopScheduleRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NewShopScheduleRoutingModule } from './new-shop-schedule-routing.module';\r\nimport { MainShopShcedulePageComponent } from './main-shop-shcedule-page/main-shop-shcedule-page.component';\r\nimport { ShopDetailsPageComponent } from './shop-details-page/shop-details-page.component';\r\nimport { AppointmentPageComponent } from './appointment-page/appointment-page.component';\r\nimport { TimeSchedulePageComponent } from './time-schedule-page/time-schedule-page.component';\r\nimport { AddAppointmentComponent } from './appointment-page/add-appointment/add-appointment.component';\r\nimport { UpdateShopComponent } from './shop-details-page/update-shop/update-shop.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { AddTimeScheduleComponent } from './time-schedule-page/add-time-schedule/add-time-schedule.component';\r\nimport { UpdateappointmentComponent } from './appointment-page/updateappointment/updateappointment.component';\r\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\r\nimport { EditTimeSchedulePageComponent } from './time-schedule-page/edit-time-schedule-page/edit-time-schedule-page.component';\r\n\r\n// import { MatDatetimepickerModule, MatNativeDatetimeModule } from '@angul/ar-material-components/datetime-picker';\r\n// Import other required modules as needed\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainShopShcedulePageComponent,\r\n    ShopDetailsPageComponent,\r\n    AppointmentPageComponent,\r\n    TimeSchedulePageComponent,\r\n    AddAppointmentComponent,\r\n    UpdateShopComponent,\r\n    AddTimeScheduleComponent,\r\n    UpdateappointmentComponent,\r\n    EditTimeSchedulePageComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NewShopScheduleRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialExampleModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,\r\n    // MatTimepickerModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class NewShopScheduleModule { }\r\n","<div class=\"container-fluid bg-white p-0\">\r\n    <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n        <div class=\"flex-item searchBar me-4\">\r\n            <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Email\"\r\n                [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchShop()\" autocomplete=\"off\">\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <hr class=\"my-0 py-0\" /> -->\r\n    <div style=\"width:100% ; overflow-x: auto;\">\r\n        <table class=\"table table-responsive table-bordered fs--1 mb-0\">\r\n            <thead class=\"text-600\">\r\n                <tr>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Trade Name</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Business Type</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Registered</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Email</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Appointments</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr class=\"btn-reveal-trigger text-left\" *ngFor=\"let shop of ShopListResponse; let i = index\"\r\n                    style=\"color: #676398!important;\">\r\n                    <td style=\"vertical-align:middle;\">{{ shop.client == null ? 'no data' : shop.client.tradeName |\r\n                        titlecase }}</td>\r\n                    <td class=\"barcode\" style=\"vertical-align:middle;\">{{ shop.client == null ? 'no data' :\r\n                        shop.client.businessType}}</td>\r\n                    <td class=\"category\" style=\"vertical-align:middle;\">{{ shop.client == null ? 'no data' :\r\n                        shop.client.isRegistered}}</td>\r\n\r\n                    <td class=\"openingStock\" style=\"vertical-align:middle;\">{{ shop.email == \"\" ? 'no data' :\r\n                        shop.email}}</td>\r\n\r\n                    <td style=\"vertical-align:middle; white-space:nowrap; \">\r\n                        <div class=\"ps-5\">\r\n                            <button class=\"toggle-button\" (click)=\"isActiveShop(shop.id, shop.isActive)\"\r\n                                [ngClass]=\"{'active': shop.isActive, 'inactive': !shop.isActive}\">\r\n                                <div class=\"toggle-slider\"></div>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n            <tbody *ngIf=\"ShopListResponse == 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- Ṃultiple Delete -->\r\n<!-- <div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n            <div class=\"modal-content position-relative\">\r\n                <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                    <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                        aria-label=\"Close\"></a>\r\n                </div>\r\n                <div class=\"modal-body p-0\">\r\n                    <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                        <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                            Delete Parties? </h2>\r\n                    </div>\r\n                    <h4 *ngIf=\"isChecked \" class=\"text-center \">Are you sure to delete all employees?</h4>\r\n                    <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are you sure to delete all selected employees?</h4>\r\n\r\n                </div>\r\n                <div class=\"modal-footer justify-content-center\">\r\n                    <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                    <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"multipleEmployeeDel()\">Continue</a>\r\n                    <a *ngIf=\"!isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"multipleEmployeeDel()\">Continue</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n\r\n<!-- Signle Delete  -->\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Shop? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are you sure to delete this Shop?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ScheduleShopService } from 'src/app/core/services/schedule-shop.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ScheduleScheduleService } from 'src/app/core/services/schedule-schedule.service';\r\n\r\n@Component({\r\n  selector: 'app-shop-details-page',\r\n  templateUrl: './shop-details-page.component.html',\r\n  styleUrls: ['./shop-details-page.component.scss']\r\n})\r\nexport class ShopDetailsPageComponent implements OnInit {\r\n  searchTerm: string;\r\n\r\n  shops = [\r\n    {\r\n      \"id\": 1,\r\n      \"email\": \"demo21@gmail.com\",\r\n      \"mobile\": \"8783459890\",\r\n      \"firstName\": \"john\",\r\n      \"lastName\": \"hi\",\r\n      \"parentId\": \"478d3543-d30d-43f2-9559-a080f7b93025\",\r\n      \"isRegistered\": true,\r\n      \"legalName\": \"NH_SHOP\",\r\n      \"accountMethod\": \"Accounts With Stock Management\",\r\n      \"businessType\": \"Proprietorship\",\r\n      \"gstinNo\": \"22\",\r\n      \"gstType\": \"Regular\",\r\n      \"compositeType\": \"Trader\",\r\n      \"homeno\": \"2\",\r\n      \"pincode\": \"390011\",\r\n      \"address\": \"10,abcd road\",\r\n      \"city\": \"vadodara\",\r\n      \"district\": \"vadodara\",\r\n      \"landmark\": \"vadodara\",\r\n      \"state\": \"GUJARAT\",\r\n      \"country\": \"INDIA\"\r\n    }\r\n  ]\r\n\r\n  public shopForm: FormGroup;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public ShopListResponse: any;\r\n\r\n  constructor(private formBuilder: FormBuilder, private ScheduleShopService: ScheduleShopService, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe, private scheduleScheduleService: ScheduleScheduleService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getShopList();\r\n  }\r\n\r\n  getShopList() {\r\n    this.ScheduleShopService.getShopList({}, this.currentUser.id).then((res) => {\r\n      if (res.data.rows) {\r\n        this.ShopListResponse = res.data.rows;\r\n      }\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.ShopListResponse = [];\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  isActiveShop(shopId, isActiveById) {\r\n    const isActive = !isActiveById;\r\n    const body = { \"isActive\": isActive };\r\n\r\n    this.ScheduleShopService.isActiveShop(body, shopId).then((res: any) => {\r\n      if (res.success) {\r\n        if (isActive) {\r\n          this.toastService.openSnackBar(\"Shop status changed to active\")\r\n          this.getShopList()\r\n        } else {\r\n          this.toastService.openSnackBar(\"Shop status changed to inactive\")\r\n          this.getShopList()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  searchShop() {\r\n    if (this.searchTerm.trim() === '') {\r\n      this.getShopList();\r\n    } else {\r\n      this.ScheduleShopService.getShopList({}, this.currentUser.id).then((res) => {\r\n        this.ShopListResponse = res.data.rows.filter(item => {\r\n            return (\r\n                // item.scheduleName.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n                item.email && item.email.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n                (item.client.tradeName && item.client.tradeName.toLowerCase().includes(this.searchTerm.toLowerCase()))\r\n                // item.appointmentType.locationType.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n            );\r\n        });\r\n    });\r\n    \r\n      \r\n      if (this.ShopListResponse.length === 0) {\r\n        this.toastService.openErrorSnackBar(this.searchTerm + \" is not found\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"container-fluid pt-3 bg-white\">\r\n    <div class=\"fixed-nav-panel row\">\r\n        <div class=\"nav-panel-header col-lg-4\">\r\n            <h2>Update Trade Name</h2>\r\n        </div>\r\n        <div class=\"nav-panel-actions col-lg-8\">\r\n            <div class=\"nav-panel-btns row\">\r\n                <div class=\"col-sm-6\"></div>\r\n                <div class=\"col-lg-2 d-grid\">\r\n                    <button mat-raised-button class=\"text-nowrap\" style=\"border: 1px solid #000;\"\r\n                    *appHasPermission=\"['modify']; name 'profile'\">Cancel</button>\r\n                </div>\r\n                <div class=\"col-lg-3 d-grid\">\r\n                    <button mat-raised-button class=\"text-nowrap text-light\" style=\"background: #a0a0a0;\" type=\"button\"\r\n                    *appHasPermission=\"['modify']; name 'profile'\" (click)=\"UpdateNewShop()\">Save Changes</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n<hr style=\"background-color: black;font-weight: bold;\">\r\n    <form [formGroup]=\"ProfileForm\" autocomplete=\"off\">\r\n        <div class=\"profile-options row\">\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 pe-4\">\r\n                <div class=\"row mb-5\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Admin Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required formControlName=\"firstName\" maxLength=\"50\"\r\n                            placeholder=\"First Name\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group col-sm-12 col-md-6\">\r\n                        <mat-label>Email Address</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"email\" readonly matInput required formControlName=\"email\"\r\n                                placeholder=\"Email\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"form-group col-sm-12 col-md-6\">\r\n                        <mat-label>Mobile Number</mat-label>\r\n                        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                            <input type=\"text\" matInput formControlName=\"mobile\" minlength=\"10\" maxlength=\"10\"\r\n                                placeholder=\"Mobile Number\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>GSTIN</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput formControlName=\"gstinNo\"\r\n                                (keyup)=\"validateGSTIN($event.target.value)\" maxlength=\"15\" #input1\r\n                                placeholder=\"GSTIN\" (input)=\"input1.value=$event.target.value.toUpperCase()\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"(ProfileForm.get('businessType').value =='Private Limited Company' || ProfileForm.get('businessType').value =='Public Limited Company') && isShown\">\r\n                        <mat-label>CIN</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"cinNumber\"\r\n                                (keyup)=\"validatecinNumber($event.target.value)\" #input1\r\n                                (input)=\"input1.value=$event.target.value.toUpperCase()\" placeholder=\"CIN\">\r\n                        </mat-form-field>\r\n                        <mat-error\r\n                            *ngIf=\"f.cinNumber.invalid && (f.cinNumber.dirty || f.cinNumber.touched)\"\r\n                            class=\"invalid-feedback\">\r\n                            <mat-error *ngIf=\"f.cinNumber.errors?.required\"> CINI is Required!</mat-error>\r\n                            <mat-error class=\"text-danger\"\r\n                                *ngIf=\"(submitted || f.cinNumber.touched) && f.cinNumber.errors?.pattern\">\r\n                                CIN pattern is Required!\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"ProfileForm.get('businessType').value =='Proprietorship' || ProfileForm.get('businessType').value =='Hindu Undivided Family' && isShown\">\r\n                        <mat-label>Legal Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"legalName\"\r\n                                placeholder=\"Legal Name\" [ngClass]=\"{\r\n                                    'is-invalid': (f.legalName.invalid && f.legalName.touched) && submitted }\" requied>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors\">\r\n                            Legal name must be in Alphabets\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors?.required\">\r\n                            Legal Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>PAN Number</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput formControlName=\"panNumber\" placeholder=\"PAN\"\r\n                                (keyup)=\"validatepanNumber($event.target.value)\" #input1\r\n                                (input)=\"input1.value=$event.target.value.toUpperCase()\">\r\n                        </mat-form-field>\r\n                        <mat-error style=\"font-weight: 400; font-size: 11px; \"\r\n                            *ngIf=\"f.panNumber.invalid && (f.panNumber.dirty || f.panNumber.touched)\"\r\n                            class=\"invalid-feedback\">\r\n                            <mat-error *ngIf=\"f.panNumber.errors?.required\"> PAN Number Is Required!</mat-error>\r\n                            <mat-error class=\"text-danger\"\r\n                                *ngIf=\"(submitted || f.panNumber.touched) && f.panNumber.errors?.pattern\">\r\n                                PAN pattern is Required!\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"row mb-3\">\r\n\r\n                </div> -->\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Financial Year Start From</mat-label>\r\n                        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matInput ngModel bsDatepicker placeholder=\"Financial Year From\" [maxDate]=\"today\"\r\n                                formControlName=\"financialYearFrom\" style=\"text-transform:uppercase!important;\"\r\n                                bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue',\r\n                          dateInputFormat: 'DD MMM YYYY',\r\n                          showWeekNumbers:false }\"\r\n                                [ngClass]=\"{\r\n                            'is-invalid': (f.financialYearFrom.invalid && f.financialYearFrom.touched) && submitted }\">\r\n                            <span>\r\n                                <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                            </span>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.financialYearFrom.touched) && f.financialYearFrom.errors?.required\">\r\n                            financialYearFrom is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Book Beginning From</mat-label>\r\n                        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matInput ngModel bsDatepicker placeholder=\"Book Beginning From\"\r\n                                formControlName=\"bookBeginningFrom\" style=\"text-transform:uppercase!important;\"\r\n                                bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue',\r\n                          dateInputFormat: 'DD MMM',\r\n                          showWeekNumbers:false }\">\r\n                            <span>\r\n                                <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                            </span>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12\">\r\n                        <mat-label for=\"billingAddress\">Billing Address</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <textarea matNativeControl matInput required type=\"text\" formControlName=\"address\" row=\"2\"\r\n                                placeholder=\"Billing Address\" [ngClass]=\"{\r\n                                'is-invalid': (f.address.invalid && f.address.touched) && submitted }\" required></textarea>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                            Billing Address is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Pincode</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required maxlength=\"6\" minlength=\"6\" name=\"pincodetxt\"\r\n                                id=\"pincodetxt\" formControlName=\"pincode\" placeholder=\"Pincode\" [ngClass]=\"{\r\n                                    'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\"\r\n                                (change)=\"getPincodeDetails($event.target.value)\">\r\n\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                            Pincode is Required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                            Pincode should be only digits\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>State</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput\r\n                                formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\" [ngClass]=\"{\r\n                                    'is-invalid': (f.state.invalid && f.state.touched) && submitted }\" value=\"\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                            State is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>City</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                            placeholder=\"City\" [ngClass]=\"{\r\n                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                            District is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Country</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"country\"\r\n                                placeholder=\"Country\" [ngClass]=\"{\r\n                                'is-invalid': (f.country.invalid && f.country.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                            Country is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"card mb-3\" *appHasPermission=\"['read']; name: 'profile'\">\r\n                    <form [formGroup]=\"addressForm\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:16px!important;\">Add multiple Business Addresses</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n                            <div formArrayName=\"addresses\" *ngFor=\"let item of addressControls.controls; let i = index\">\r\n                                <div [formGroupName]=\"i\" class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input type=\"text\" matInput required\r\n                                                (input)=\"getPincodeDetailsForAdditionalAddress($event.target.value,i)\" maxlength=\"6\"\r\n                                                minlength=\"6\" formControlName=\"pincode\" placeholder=\"Pincode\" [ngClass]=\"{\r\n                                                    'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\"\r\n                                                value=\"\">\r\n                                        </mat-form-field>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                                            Pincode is Required !\r\n                                        </mat-error>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                                            Pincode should be only digits.\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>State</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput\r\n                                                formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\" [ngClass]=\"{\r\n                                                'is-invalid': (f.state.invalid && f.state.touched) && submitted }\" value=\"\">\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                                            State is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>District</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                                                placeholder=\"District\" [ngClass]=\"{\r\n                                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                                            District is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"country\"\r\n                                                placeholder=\"Country\" [ngClass]=\"{\r\n                                            'is-invalid': (f.country.invalid && f.country.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                                            Country is Required!\r\n                                        </mat-error>\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"city\"\r\n                                                placeholder=\"Town/City\" [ngClass]=\"{\r\n                                            'is-invalid': (f.city.invalid && f.city.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.city.touched) && f.city.errors?.required\">\r\n                                            Town/City is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>House No</mat-label>\r\n                                         <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"homeno\"\r\n                                                placeholder=\"House No,Apartment,Building,Company\" [ngClass]=\"{\r\n                                            'is-invalid': (f.homeno.invalid && f.homeno.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.homeno.touched) && f.homeno.errors?.required\">\r\n                                            House No is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"address\"\r\n                                                placeholder=\"Area\" [ngClass]=\"{\r\n                                            'is-invalid': (f.address.invalid && f.address.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                                            Area, Street, Sector, Village is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"landmark\"\r\n                                                placeholder=\"Landmark\" [ngClass]=\"{\r\n                                                'is-invalid': (f.landmark.invalid && f.country.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.landmark.touched) && f.landmark.errors?.required\">\r\n                                            Landmark is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"offset-3 col-9 ml-10\">\r\n                                        <div class=\"d-flex justify-content-end row\">\r\n                                            <div *ngIf=\"item.value.id\">\r\n                                                <a class=\"col-6 btn btn-cancel margin-right mb-1\" (click)=\"deleteAddress(item)\"\r\n                                                    style=\"margin-right: 10px\">Cancel\r\n                                                </a>\r\n\r\n                                                <a class=\"col-6 btn btn-save margin-right mb-1\"\r\n                                                    *appHasPermission=\"['modify']; name: 'profile'\"\r\n                                                    (click)=\"updateMultipleAddress(item)\">\r\n                                                    Update\r\n                                                </a>\r\n                                            </div>\r\n                                            <div>\r\n                                                <a class=\"btn btn-outline-warn margin-right\" *ngIf=\"!item.value.id\"\r\n                                                    (click)=\"deleteAddressForm(i)\" style=\"margin-right: 10px\">\r\n                                                    -\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-end\">\r\n                                <a class=\"btn btn-cancel margin-right\" (click)=\"addAddress()\">\r\n                                    +\r\n                                </a>\r\n\r\n                                <button mat-flat-button class=\"btn btn-save\" *appHasPermission=\"['modify']; name: 'profile'\"\r\n                                    (click)=\"addMultipleAddress()\">\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 ps-4\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Tax Payer Type</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering formControlName=\"gstType\"\r\n                                placeholder=\"GST Type\" [ngClass]=\"{\r\n                                    'is-invalid': (f.gstType.invalid && f.gstType.touched) && submitted }\"\r\n                                [disabled]=\"!isDisabledGST\">\r\n                                <mat-option value=\"Regular\">Regular</mat-option>\r\n                                <mat-option value=\"Composite\">Composite\r\n                                </mat-option>\r\n                                <mat-option value=\"Exempted\">Exempted</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.gstType.touched) && f.gstType.errors?.required\">\r\n                            Tax Payer Type is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <!-- <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown && ProfileForm.get('gstType').value =='Composite'\"> -->\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Trade Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput formControlName=\"tradeName\" placeholder=\"Trade Name\"\r\n                                [ngClass]=\"{\r\n                                    'is-invalid': (f.tradeName.invalid && f.tradeName.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.tradeName.touched) && f.tradeName.errors?.required\">\r\n                            Trade Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown && ProfileForm.get('gstType').value =='Composite'\">\r\n                        <mat-label>Composition Dealer *</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering\r\n                                placeholder=\"Composition Dealer\">\r\n                                <mat-option value=\"Manufacturer & Trader (Goods)\">Manufacturer & Trader (Goods)</mat-option>\r\n                                <mat-option value=\"Restaurant (Not Serving Alcohol)\">Restaurant (Not Serving Alcohol)\r\n                                </mat-option>\r\n                                <mat-option value=\"Service\">Service</mat-option>\r\n                                <mat-option value=\"Manufacturers of Bricks\">Manufacturers of Bricks</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Constitution of Business</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select formControlName=\"businessType\" matNativeControl matInput disableOptionCentering\r\n                                placeholdeer=\"Constitution of Business\" [disabled]=\"!isDisabledGST\"\r\n                                [ngClass]=\"{\r\n                                    'is-invalid': (f.businessType.invalid && f.businessType.touched) && submitted }\">\r\n                                <mat-option *ngFor=\"let item of cosntBusiness\" [value]=\"item\">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessType.touched) && f.businessType.errors?.required\">\r\n                            Constitution of Business is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Account Method</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering required formControlName=\"accountMethod\"\r\n                                placeholdeer=\"Constitution of Business\" [ngClass]=\"{\r\n                                    'is-invalid': (f.accountMethod.invalid && f.accountMethod.touched) && submitted }\"\r\n                                required>\r\n                                <mat-option value=\"Accounts\">Only Accounts</mat-option>\r\n                                <mat-option value=\"Accounts With Stock Management\">Accounts With Stock Management</mat-option>\r\n                                <!-- <option value=\"Both\">Both</option> -->\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.accountMethod.touched) && f.accountMethod.errors?.required\">\r\n                            Account Method is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Business Type(Select multiple, if applicable)</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering formControlName=\"businessNature\" multiple\r\n                            [ngClass]=\"{'is-invalid': (f.businessNature.invalid && f.businessNature.touched) && submitted }\" required>\r\n                                <mat-option *ngFor=\"let type of typeList\" [value]=\"type.id\">{{type.businessType}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessNature.touched) && f.businessNature.errors?.required\">\r\n                            Business Type is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Business Category</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-chip-list #chipList aria-label=\"category selection\" [multiple]=\"true\">\r\n                                <mat-chip *ngFor=\"let category of categoryName\" [selectable]=\"category=='Education'\"\r\n                                    [removable]=\"removable\" (removed)=\"remove(category)\">\r\n                                    {{category}}\r\n                                    <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                                </mat-chip>\r\n                                <input placeholder=\"Business Category\" #categoryInput\r\n                                    #autocompleteTrigger=\"matAutocompleteTrigger\" [formControl]=\"categoryCtrl\"\r\n                                    [matAutocomplete]=\"auto\" [matChipInputFor]=\"chipList\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    (matChipInputTokenEnd)=\"add($event)\" [ngClass]=\"{\r\n                                        'is-invalid': (categoryCtrl.invalid && categoryCtrl.touched) && submitted }\" required>\r\n                            </mat-chip-list>\r\n                            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n                                <mat-option *ngFor=\"let item of filteredCategory | async\" [value]=\"item.id\"\r\n                                    (onSelectionChange)=\"getCategoryId(item)\">\r\n                                    <mat-checkbox color=\"primary\" style=\"padding: 0 12px;\"\r\n                                        [checked]=\"categoryName.indexOf(item.category) >=0\"></mat-checkbox>\r\n                                    {{item.category}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <a mat-icon-button matSuffix style=\"width: 34px; height: 34px;\"\r\n                                (click)=\"openAuto(autocompleteTrigger)\">\r\n                                <mat-icon style=\"width: 34px;\">expand_more</mat-icon>\r\n                            </a>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || categoryCtrl.touched) && categoryCtrl.errors?.required\">\r\n                            Category is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"card mb-3\" *ngIf=\"showAdditionalFields\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:16px!important;\">Add Additional Place of Business</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n                            <form [formGroup]=\"businessPlaceAdd\" (ngSubmit)=\"addPlaceOfBusiness()\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input type=\"text\" matInput required formControlName=\"pincode\" placeholder=\"Pincode\">\r\n                                        </mat-form-field>\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>State</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput type=\"text\" ngxOnlyString required formControlName=\"state\" placeholder=\"State\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>District</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\" placeholder=\"District\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl type=\"text\" matInput required formControlName=\"country\" placeholder=\"Country\">\r\n                                        </mat-form-field>\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"city\" placeholder=\"City\">\r\n                                        </mat-form-field>\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>House No</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"homeno\" placeholder=\"House No, Apartment, Building, Company\">\r\n                                        </mat-form-field>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"areaStreet\" placeholder=\"Area\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"landmark\" placeholder=\"Landmark\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <!-- Add a submit button -->\r\n                                    <div class=\"d-flex justify-content-end\">\r\n                                        <button type=\"submit\" mat-flat-button class=\"btn btn-save\">Add Address</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Add additional Trade Name -->\r\n                    <div class=\"card mb-3\" *ngIf=\"showAdditionalFields\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:18px!important;\">Add Addtional Trade Name</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Additional Trade Name </mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            placeholder=\"Additional Trade Name \">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Address</mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            formControlName=\"address\" placeholder=\"Additional Trade Name \">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Add Addtional Place of Business</mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            formControlName=\"additionalplaces\" placeholder=\"Add Addtional Place of Business\">\r\n                                    </mat-form-field>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <h3 style=\"font-weight:500;\">ADDRESS</h3>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <input type=\"text\" matInput required>\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>State</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput>\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>District</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <input matNativeControl matInput required>\r\n                                    </mat-form-field>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>House No, Apartment, Building, Company</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <h3 style=\"font-weight:500;\">Add Addtional Place of Business</h3>\r\n                            </div>\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <input type=\"text\" matInput required>\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>State</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput>\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>District</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <input matNativeControl matInput required>\r\n                                    </mat-form-field>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>House No, Apartment, Building, Company</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-12\">\r\n                        <div class=\"notes-section\">\r\n                            <p class=\"notes-textarea text-black\" style=\"background: #e4e3e6;\">\r\n                                <b>Note:</b> Terms & condition and Signature added below will be shown on your invoices.\r\n                            </p>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-12\">\r\n                        <div class=\"terms-section\">\r\n\r\n                          </div>\r\n                          <label class=\"form-label\">Terms & Conditions</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <textarea matInput required rows=\"3\" placeholder=\"Terms & Conditions\"\r\n                       >\r\n                       1. Goods once sold will not be taken back or exchanged.\r\n                       1. Goods once sold will not be taken back or exchanged.</textarea>\r\n                </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n","import { TitleCasePipe, formatDate } from \"@angular/common\";\r\n  import { Component, ElementRef, OnInit, ViewChild,AfterViewInit, ChangeDetectorRef, OnChanges, SimpleChanges } from \"@angular/core\";\r\n  import {\r\n    FormArray,\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators,\r\n  } from \"@angular/forms\";\r\n  import { ActivatedRoute, Router } from \"@angular/router\";\r\n  import { ProfileService } from \"src/app/core/services/profile.service\";\r\n  import { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\n  import {\r\n    MatAutocomplete,\r\n    MatAutocompleteSelectedEvent,\r\n    MatAutocompleteTrigger,\r\n  } from \"@angular/material/autocomplete\";\r\n  import { Observable, pipe } from \"rxjs\";\r\n  import { map, startWith } from \"rxjs/operators\";\r\n  import { MatChipInputEvent } from \"@angular/material/chips\";\r\n  import { COMMA, ENTER } from \"@angular/cdk/keycodes\";\r\n  import * as moment from \"moment\";\r\n  import { createFalse } from \"typescript\";\r\n  import { log } from \"console\";\r\n  import { PartyService } from \"src/app/core/services/party.service\";\r\n  import { MatDialog } from '@angular/material/dialog';\r\n  import { ScheduleShopService } from \"src/app/core/services/schedule-shop.service\";\r\n  \r\n  interface IRange {\r\n    value: Date[];\r\n    label: string;\r\n  }\r\n@Component({\r\n  selector: 'app-update-shop',\r\n  templateUrl: './update-shop.component.html',\r\n  styleUrls: ['./update-shop.component.scss']\r\n})\r\nexport class UpdateShopComponent implements OnInit {\r\n\r\n    public dragging: boolean = false;\r\n    public loaded: boolean = false;\r\n    public imageLoaded: boolean = false;\r\n    public activeColor: string = 'green';\r\n    public baseColor: string = '#ccc';\r\n    public signImg: any = '';\r\n    public profilePic: any = '';\r\n    public overlayColor: string = 'rgba(255,255,255,0.5)';\r\n    partners: any[] = [];\r\n  \r\n    ranges: IRange[] = [\r\n      {\r\n        value: [\r\n          new Date(new Date().setDate(new Date().getDate() - 7)),\r\n          new Date(),\r\n        ],\r\n        label: \"Last 7 Days\",\r\n      },\r\n      {\r\n        value: [\r\n          new Date(new Date().setDate(new Date().getMonth() - 1)),\r\n          new Date(),\r\n        ],\r\n        label: \"Last Month\",\r\n      },\r\n    ];\r\n    today: Date;\r\n    maxDate: Date;\r\n    public typeList = [];\r\n    public value: any;\r\n    public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    public data: any;\r\n    public ProfileForm: FormGroup;\r\n    public TradeForm:FormGroup;\r\n    public addressForm: FormGroup;\r\n    public businessForm: FormGroup;\r\n    public dateRange: FormGroup;\r\n    public updated: boolean = false;\r\n    public submitted: boolean;\r\n    public date = new Date();\r\n    public addressId: string = \"\";\r\n    public additionalPlaceOfBusiness: FormArray;\r\n    public addressLength;\r\n    public pinDetails: any;\r\n    public gstDetails: any;\r\n    public finalAddress: any;\r\n    public pin: any;\r\n    public businessNature: any = [];\r\n    public compositeType: boolean = false;\r\n    public isShown: boolean = true;\r\n    public mobileOtp: any;\r\n    public visible = true;\r\n    public selectable = true;\r\n    public removable = true;\r\n    public separatorKeysCodes: number[] = [ENTER, COMMA];\r\n    public categoryCtrl = new FormControl();\r\n    public filteredCategory: Observable<string[]>;\r\n    public categoryBusiness: any = [];\r\n    public categoryName: any = [];\r\n    public categoryId: any = [];\r\n    public opened = false;\r\n    public isDisabledGST: boolean = true;\r\n    public addressArray = [];\r\n    public partenerAray=[]\r\n    public businessType: any;\r\n    public constitutionBusinessType: any;\r\n    public legTrad: boolean = false;\r\n    public cinFlag: boolean = false;\r\n    public partnerSubmitted=false\r\n    partnerDetails: any[] = [];\r\n    additionaDetailsData: any[] = [];\r\n    public cosntBusiness = [\r\n      \"Proprietorship\",\r\n      \"Partnership\",\r\n      \"Private Limited Company\",\r\n      \"Public Limited Company\",\r\n      \"Limited Liability Partnership\",\r\n      \"Hindu Undivided Family\"\r\n    ];\r\n    @ViewChild(\"categoryInput\") categoryInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild(\"auto\") matAutocomplete: MatAutocomplete;\r\n    @ViewChild(\"autocompleteTrigger\") matACTrigger: MatAutocompleteTrigger;\r\n    serachByCategory: any;\r\n    public ischecked: boolean = false;\r\n    signatureData: string;\r\n    imgNumber: any;\r\n    showUploadInput: boolean = false;\r\n    public imageSrc: any = \"\";\r\n    profileImage: File;\r\n    signatureImage: File;\r\n    showAdditionalFields = false;\r\n    editedRowIndex: number = -1;  //to store the index of the currently edited row\r\n    additionaList: any[] = [];\r\n    businessPlaceAdd: FormGroup;\r\n    shopId: any;\r\n    isFirstChange: boolean = true;\r\n    // showAdditionalFields = false;\r\n    // @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n  \r\n    constructor(\r\n      public profileService: ProfileService, public partyService: PartyService, public scheduleShopService: ScheduleShopService,\r\n      public fb: FormBuilder, private cdr: ChangeDetectorRef,\r\n      public router: Router, private route: ActivatedRoute,\r\n      private toastService: ToastNotificationService, private titleCasePipe: TitleCasePipe,\r\n      private dialog: MatDialog\r\n    ) {\r\n      this.today = new Date();\r\n      this.maxDate = new Date(\r\n        this.today.getFullYear(),\r\n        this.today.getMonth(),\r\n        25\r\n      );\r\n  \r\n      // this.today = new Date();\r\n      // this.maxDate = new Date(this.today.getFullYear(), this.today.getMonth(), 25)\r\n    }\r\n  \r\n    async ngOnInit() {\r\n      //form for profile data\r\n      try {\r\n        this.TradeForm =this.fb.group({\r\n    \r\n        })\r\n\r\n        // Get the shop ID from the route parameters\r\n        this.route.params.subscribe(params => {\r\n          this.shopId = params['id'];\r\n        });\r\n        // Update the position based on the default value\r\n        // this.businessForm.get('position')?.valueChanges.subscribe(value => {\r\n        //   if (value === 'Partner') {\r\n        //     this.businessForm.get('position')?.setValue('Managing Partner');\r\n        //   }\r\n        // });\r\n  \r\n        this.ProfileForm = this.fb.group({\r\n          firstName: [{value: \"\", disabled: true}],\r\n          legalName: [{value: \"\", disabled: true}],\r\n          businessType: [{value: \"\", disabled: true}],\r\n          email: [{value: \"\", disabled: true}],\r\n          mobile: [{value: \"\", disabled: true}],\r\n          gstType: [{value: \"\", disabled: true}],\r\n          gstStatus: [{value: \"\", disabled: true}],\r\n          gstinNo: [{value: \"\", disabled: true}],\r\n          state: [\"\", [Validators.required]],\r\n          city: [\"\", [Validators.required]],\r\n          pincode: [\"\", [Validators.required]],\r\n          district: [\"\", [Validators.required]],\r\n          landmark: [\"\"],\r\n          country: [\"\", [Validators.required]],\r\n          homeno: [\"\", ],\r\n          // homeno: [\"\", [Validators.required]],\r\n          address: [\"\", [Validators.required]],\r\n          accountMethod: [{value: \"\", disabled: true}],\r\n          compositeType: [{value: \"\", disabled: true}],\r\n          businessNature: [\"\"],\r\n          panNumber: [{value: \"\", disabled: true}],\r\n          tradeName: [\"\",  [Validators.required]],\r\n          financialYearFrom: [{value: \"\", disabled: true}],\r\n          bookBeginningFrom: [{value: \"\", disabled: true}],\r\n          cinNumber: [{value: \"\", disabled: true}],\r\n          profileImage: [null],\r\n          signatureImage: [null],\r\n          // profileImage : this.imageSrc,\r\n          // signatureImage : this.imageSrcSeven,\r\n        });\r\n        this.getType();\r\n  \r\n        this.getBusinessCategory();\r\n        //calling get data api for profile\r\n        this.getTradeDetails();\r\n  \r\n        //form for multiple address\r\n        this.addressForm = this.fb.group({\r\n          addresses: new FormArray([]),\r\n        });\r\n  \r\n        // For Additional place of Business \r\n        this.businessPlaceAdd = this.fb.group({\r\n          pincode: ['', Validators.required],\r\n          state: ['', Validators.required],\r\n          district: ['', Validators.required],\r\n          country: ['', Validators.required],\r\n          city: ['', Validators.required],\r\n          homeno: ['', Validators.required],\r\n          address: ['adress'],\r\n          areaStreet: ['', Validators.required],\r\n          landmark: ['', Validators.required],\r\n        });\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  \r\n    ngAfterViewInit() {\r\n      setTimeout(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n\r\n    toggleAdditionalFields() {\r\n      this.showAdditionalFields = !this.showAdditionalFields;\r\n    }\r\n  \r\n    validatecinNumber(cin) {\r\n      let cinNo = cin.toUpperCase();\r\n      var regex =\r\n        /^([L|U]{1})([0-9]{5})([A-Za-z]{2})([0-9]{4})([A-Za-z]{3})([0-9]{6})$/;\r\n  \r\n      if (regex.test(cinNo)) {\r\n      } else {\r\n        this.ProfileForm.controls.cinNumber.setErrors({ incorrect: true });\r\n      }\r\n    }\r\n  \r\n    validatepanNumber(pan) {\r\n      let panNo = pan.toUpperCase();\r\n      var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}/;\r\n  \r\n      if (regex.test(panNo)) {\r\n      } else {\r\n        this.ProfileForm.controls.panNumber.setErrors({ incorrect: true });\r\n      }\r\n    }\r\n    validateGSTIN(GSTIN) {\r\n      let gstNumber = GSTIN.toUpperCase();\r\n      var regex =\r\n        /^([0][1-9]|[1-2][0-9]|[3][0-7])([a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9a-zA-Z]{1}[zZ]{1}[0-9a-zA-Z]{1})+$/;\r\n      if (gstNumber.length == 15) {\r\n        if (regex.test(gstNumber)) {\r\n          //this.ProfileForm.controls.gstinNo.setErrors({'incorrect': false});\r\n          this.getGstNumber(gstNumber);\r\n          //this.setGSTINError = false\r\n        } else {\r\n          this.ProfileForm.controls.gstinNo.setErrors({ incorrect: true });\r\n          // this.setGSTINError = true;\r\n        }\r\n        // this.businessDetailsForm.controls.gstNumber.setErrors({'incorrect': true});\r\n      } else {\r\n        this.ProfileForm.controls.gstinNo.setErrors({ incorrect: true });\r\n        // this.setGSTINError = true;\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * get gst type\r\n     * @param gstType\r\n     */\r\n    \r\n    /**\r\n     * Get Controls of FormArray\r\n     */\r\n    get addressControls() {\r\n      return this.addressForm.get(\"addresses\") as FormArray;\r\n    }\r\n   \r\n  \r\n    addAddress(): void {\r\n      try{\r\n        const data = this.addressForm.get(\"addresses\") as FormArray;\r\n        this.cdr.detectChanges();\r\n        if (data) {\r\n          data.push(this.createAddress());\r\n        }\r\n      } catch {\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Delete array index from FormArray\r\n     * @param index\r\n     */\r\n    deleteAddressForm(index): void {\r\n      const data = this.addressForm.get(\"addresses\") as FormArray;\r\n      data.removeAt(index);\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Add index to FormArray\r\n     * @returns\r\n     */\r\n    createAddress(): FormGroup {\r\n      return new FormGroup({\r\n        homeno: new FormControl(),\r\n        pincode: new FormControl(),\r\n        address: new FormControl(),\r\n        city: new FormControl(),\r\n        state: new FormControl(),\r\n        country: new FormControl(),\r\n        district: new FormControl(),\r\n        landmark: new FormControl(),\r\n      });\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Remove index from FormArray\r\n     * @param i\r\n     */\r\n    removeAddress(i: number) {\r\n      (<FormArray>this.addressForm.get(\"addresses\")).removeAt(i);\r\n    }\r\n  \r\n    /**\r\n     * Get Formcontrol of FormGroup\r\n     */\r\n    get f() {\r\n      return this.ProfileForm.controls;\r\n    }\r\n    get fpart(){\r\n      return this.businessForm.controls;\r\n    }\r\n  \r\n    toggleShow(checked: boolean) {\r\n      this.isShown = checked;\r\n      \r\n      if (!this.isShown) {\r\n        this.ProfileForm.get(\"gstinNo\").clearValidators();\r\n        this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n      } else {\r\n        this.ProfileForm.get(\"gstinNo\").setValidators([]);\r\n        this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n      }\r\n    }\r\n    \r\n  \r\n    /**\r\n     * Get user profile data\r\n     */\r\n    async getTradeDetails() {\r\n      await this.scheduleShopService.getshopListBYshopId({}, this.shopId).then((res : any) => {\r\n        console.log(res);\r\n        this.data = res.data;\r\n        this.constitutionBusinessType = res.data.client.businessType\r\n        let primaryAddress = res.data.primaryAddress;\r\n        if (res.data.client.gstType == \"Composite\") {\r\n          this.compositeType = true;\r\n        }\r\n        if (primaryAddress.length > 0) {\r\n          for (let i = 0; i < primaryAddress.length; i++) {\r\n            this.addressId = primaryAddress[i].id;\r\n            this.addressControls.push(\r\n              new FormGroup({\r\n                address: new FormControl(primaryAddress[i].address),\r\n                city: new FormControl(primaryAddress[i].city),\r\n                country: new FormControl(primaryAddress[i].country),\r\n                homeno: new FormControl(primaryAddress[i].homeno),\r\n                pincode: new FormControl(primaryAddress[i].pincode),\r\n                state: new FormControl(primaryAddress[i].state),\r\n                landmark: new FormControl(primaryAddress[i].landmark),\r\n                district: new FormControl(primaryAddress[i].district),\r\n                id: new FormControl(primaryAddress[i].id),\r\n              })\r\n            );\r\n          }\r\n        }\r\n        if (res.data.client.isRegistered != null) {\r\n          this.toggleShow(res.data.additional.isRegistered);\r\n          // this.isShown = res.data.additional.isRegistered;\r\n        }\r\n        if (res.data.client.gstinNo != null) {\r\n          // this.getGstNumber(res.data.additional.gstinNo);\r\n          // this.getGstNumber(res.data.additional.gstinNo);\r\n        }\r\n        // let businessNatureData = res.data.client.businessTypes.map((item) => item.id);\r\n        // console.log(\"Business ----\", businessNatureData);\r\n        // let businesscategory = res.data.businessCategory.client.map((item) => item.id);\r\n        // console.log(\"Business category -----\", businesscategory);\r\n        // this.categoryCtrl.setValue(businesscategory);\r\n        //sending data from get api to form by patching\r\n        this.ProfileForm.patchValue({\r\n          email: res.data.basicdetails.email,\r\n          businessType: res.data.additional.businessType,\r\n          firstName: res.data.basicdetails.firstName,\r\n          // firstName: res.data.basicdetails.fullName,\r\n          totalPlaces: res.data.additional.totalPlaces,\r\n          legalName: res.data.additional.legalName,\r\n          gstType: res.data.additional.gstType,\r\n          gstinNo: res.data.additional.gstinNo\r\n            ? res.data.additional.gstinNo\r\n            : null,\r\n          compositeType: res.data.additional.compositeType,\r\n          fullName: res.data.basicdetails.firstName,\r\n          // fullName: res.data.basicdetails.fullName,\r\n          // lastName: res.data.basicdetails.lastName,\r\n          // profileImage: res.data.basicdetails.profileImage,\r\n          mobile: res.data.basicdetails.mobile,\r\n          tradeName: res.data.additional.tradeName,\r\n          accountMethod: res.data.additional.accountMethod,\r\n          pincode: res.data.primaryAddress.pincode ? res.data.primaryAddress.pincode : \"\",\r\n          state: res.data.primaryAddress.state ? res.data.primaryAddress.state : \"\",\r\n          city: res.data.primaryAddress.city ? res.data.primaryAddress.city : \"\",\r\n          country: res.data.primaryAddress.country ? res.data.primaryAddress.country : \"\",\r\n          address: res.data.primaryAddress.address ? res.data.primaryAddress.address : \"\",\r\n          landmark: res.data.primaryAddress.landmark ? res.data.primaryAddress.landmark : \"\",\r\n          district: res.data.primaryAddress.district ? res.data.primaryAddress.district : \"\",\r\n          homeno: res.data.primaryAddress.homeno ? res.data.primaryAddress.homeno : \"\",\r\n          panNumber: res.data.additional.panNumber ? res.data.additional.panNumber : \"\",\r\n          // tradeName:res.data.additional.tradeName,\r\n          financialYearFrom: res.data.additional.financialYearFrom ? moment(res.data.additional.financialYearFrom).format(\r\n            \"DD-MMM-YYYY\"\r\n          ) : \"\",\r\n          bookBeginningFrom: res.data.additional.bookBeginningFrom ? moment(res.data.additional.bookBeginningFrom).format(\r\n            \"DD-MMM-YYYY\"\r\n          ) : \"\",\r\n  \r\n          cinNumber: res.data.additional.cinNumber,\r\n          // businessNature: businessNatureData,\r\n        });\r\n      });\r\n    }\r\n    //get pincode api\r\n  \r\n    getPincodeDetails(pin) {\r\n      this.profileService.getUserPincode({}, pin).then((res) => {\r\n        this.pinDetails = res;\r\n        this.ProfileForm.patchValue({\r\n          district: res.data.districtName,\r\n          state: res.data.stateName,\r\n        });\r\n      });\r\n    }\r\n  \r\n    getPincodeDetailsForAdditionalAddress(pin, index) {\r\n      if (pin.length == 6) {\r\n        this.profileService.getUserPincode({}, pin).then((res) => {\r\n          this.pinDetails = res.data;\r\n          this.addressControls.controls[index].patchValue({\r\n            pincode: this.pinDetails.pincode,\r\n            state: this.pinDetails.stateName,\r\n            district: this.pinDetails.districtName,\r\n          });\r\n          this.addressControls\r\n            .at(index)\r\n            .patchValue(res.data.stateName, res.data.districtName);\r\n        });\r\n      }\r\n    }\r\n  \r\n    getGstNumber(gstin) {\r\n      this.profileService.getGstNumber({}, gstin).then(\r\n        (res) => {\r\n          this.gstDetails = res;\r\n          if (res) {\r\n            this.ProfileForm.patchValue({\r\n              legalName: res.data.legalName,\r\n              businessType: res.data.constitution,\r\n              gstType: res.data.taxPayerType,\r\n              gstStatus: res.data.status,\r\n            });\r\n            this.isDisabledGST = false;\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isDisabledGST = true;\r\n        }\r\n      );\r\n    }\r\n  \r\n    /**\r\n     * get nature of business list\r\n     */\r\n    public getType() {\r\n      this.profileService.getTypes({}).then((response) => {\r\n        this.typeList = response.data;\r\n      });\r\n  }\r\n  \r\n    /**\r\n     * Update user profile\r\n     * @returns\r\n     */\r\n    UpdateNewShop() {\r\n      this.submitted = true;\r\n  \r\n      let registerdProfileData = {\r\n        basicDetails: {\r\n          firstName: this.ProfileForm.controls.firstName.value,\r\n          mobile: this.ProfileForm.controls.mobile.value,\r\n          lastName : \"SHOP\",  // need to remove from Backend\r\n          email : this.ProfileForm.controls.email.value,  // need to remove from Backend\r\n          parentId : this.currentUser.id,\r\n          // addSignature : this.signImg,\r\n          // profileImage : this.profileImage,\r\n        },\r\n        shopDetails: {\r\n          isRegistered: this.isShown,\r\n          legalName: this.ProfileForm.controls.legalName.value\r\n            ? this.ProfileForm.controls.legalName.value\r\n            : null,\r\n          businessType: this.ProfileForm.controls.businessType.value\r\n            ? this.ProfileForm.controls.businessType.value\r\n            : null,\r\n          gstType: this.ProfileForm.controls.gstType.value,\r\n          // ...(this.ProfileForm.controls.compositeType.value == \"Composite\") && ({ \"compositeType\": this.ProfileForm.controls.compositeType.value }),\r\n          compositeType: this.ProfileForm.controls.compositeType.value\r\n            ? this.ProfileForm.controls.compositeType.value\r\n            : \"Trader\",\r\n          gstinNo: this.ProfileForm.controls.gstinNo.value\r\n            ? this.ProfileForm.controls.gstinNo.value.toUpperCase()\r\n            : null,\r\n          accountMethod: this.ProfileForm.controls.accountMethod.value,\r\n          //   \"legalName\": this.ProfileForm.controls.legalName.value,\r\n          totalPlaces: 0,\r\n          category: this.categoryId,\r\n          tradeName: this.ProfileForm.controls.tradeName.value,\r\n          panNumber: this.ProfileForm.controls.panNumber.value,\r\n          financialYearFrom: this.ProfileForm.controls.financialYearFrom.value,\r\n          bookBeginningFrom: this.ProfileForm.controls.bookBeginningFrom.value,\r\n          cinNumber: this.ProfileForm.controls.cinNumber.value?this.ProfileForm.controls.cinNumber.value: null,\r\n        },\r\n        address: {\r\n          state: this.ProfileForm.controls.state.value,\r\n          pincode: this.ProfileForm.controls.pincode.value,\r\n          city: \"city\",\r\n          // city: this.ProfileForm.controls.city.value,\r\n          district: this.ProfileForm.controls.district.value,\r\n          landmark: this.ProfileForm.controls.landmark.value\r\n            ? this.ProfileForm.controls.landmark.value\r\n            : \"landmark\",\r\n          country: this.ProfileForm.controls.country.value,\r\n          homeno: \"homeno\",\r\n          // homeno: this.ProfileForm.controls.homeno.value,\r\n          address: this.ProfileForm.controls.address.value,\r\n        },\r\n        businesses: this.ProfileForm.controls.businessNature.value,\r\n        categoryBusiness: this.categoryId,\r\n      };\r\n  \r\n      let finalObject;\r\n  \r\n      console.log(\"User object\", this.ProfileForm);\r\n      if (!this.isShown) {\r\n        finalObject = registerdProfileData;\r\n      } else {\r\n        finalObject = registerdProfileData;\r\n        // finalObject = profileData;\r\n      }\r\n  \r\n      if(this.ProfileForm.valid){\r\n        this.scheduleShopService.UpdateShopDetails(finalObject, this.shopId).then((res : any) => {\r\n            if (res.success) {\r\n              this.router.navigate([\"/pages/shop-schedule-page/shop-details-list\"]);\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.ststus == 500) {\r\n              this.toastService.openErrorSnackBar(err.error.error_message);\r\n            } else{\r\n              this.toastService.openErrorSnackBar(err.error.error_message);\r\n            }\r\n          }\r\n          );\r\n        } else {\r\n          this.toastService.openErrorSnackBar(\"Please fill up mandatory details first before submit\")\r\n        }\r\n      }\r\n        \r\n    /**\r\n     * Add multiple address\r\n     */\r\n    addMultipleAddress() {\r\n      console.log(\"addMultipleAddress\")\r\n    const newAddress = this.addressForm.get('addresses').value[this.addressControls.length - 1];\r\n  \r\n    // Check if the new address is not null and contains valid data\r\n    if (newAddress && newAddress.address && newAddress.city && newAddress.country && newAddress.district && newAddress.homeno && newAddress.landmark && newAddress.pincode && newAddress.state) {\r\n      const addressData = {\r\n        id: newAddress.id || \"\",\r\n        address: newAddress.address,\r\n        city: newAddress.city,\r\n        country: newAddress.country,\r\n        district: newAddress.district,\r\n        homeno: newAddress.homeno,\r\n        landmark: newAddress.landmark,\r\n        pincode: newAddress.pincode.toString(),\r\n        state: newAddress.state\r\n      };\r\n  \r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.currentUser.id)\r\n          .then(\r\n            (res) => {\r\n              if (res.success) {\r\n                this.toastService.openSnackBar(\"Address Added Successfully!!!\");\r\n                window.location.reload();\r\n                this.addressArray = [];\r\n              }\r\n            },\r\n            (err) => {\r\n              if (err.error.status == 400) {\r\n                this.toastService.openErrorSnackBar(\r\n                  \"Fill All Additional Address Details.\"\r\n                );\r\n              }\r\n            }\r\n          );\r\n      }\r\n    }\r\n  \r\n    isInvalidDate(event) {\r\n      let test = event.target.value;\r\n  \r\n      if (test == \"Invalid date\") {\r\n        event.target.value = formatDate(new Date(), \"DD/MM/\", \"en\"); // Change it here\r\n      }\r\n    }\r\n    /**\r\n     * update multiple address by addressId\r\n     * @param item\r\n     */\r\n    updateMultipleAddress(item) {\r\n      let data = {\r\n        homeno: item.value.homeno ? item.value.homeno : \"\",\r\n        landmark: item.value.landmark ? item.value.landmark : \"\",\r\n        district: item.value.district ? item.value.district : \"\",\r\n        pincode: item.value.pincode ? item.value.pincode : \"\",\r\n        address: item.value.address ? item.value.address : \"\",\r\n        city: item.value.city ? item.value.city : \"\",\r\n        state: item.value.state ? item.value.state : \"\",\r\n        country: item.value.country ? item.value.country : \"\",\r\n      };\r\n      console.log(data)\r\n      this.profileService\r\n        .updateMultipleAddress(data, item.value.id)\r\n        .then((res) => {\r\n          if (res) {\r\n            this.toastService.openSnackBar(\"Address Updated Successfully!!!\");\r\n             window.location.reload()\r\n          }\r\n        }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        });\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Delete Addresses by addressId\r\n     * @param item\r\n     */\r\n    deleteAddress(item) {\r\n      this.profileService.deleteAddressById({}, item.value.id).then((res) => {\r\n        if (res) {\r\n          this.toastService.openSnackBar(\"Address Deleted Successfully!!!\");\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n  \r\n    // Additional Place Of Business\r\n    addPlaceOfBusiness() {\r\n      if (this.businessPlaceAdd.valid) {\r\n        const addressData = this.businessPlaceAdd.value;\r\n        this.profileService.postMultipleAddress({ addresses: [addressData] }, this.shopId)\r\n          .then(\r\n            (res) => {\r\n              if (res.success) {\r\n                this.toastService.openSnackBar(\"Address Added Successfully!!!\");\r\n                // window.location.reload();\r\n                this.businessPlaceAdd.reset();\r\n              }\r\n            },\r\n            (err) => {\r\n              if (err.error.status == 400) {\r\n                this.toastService.openErrorSnackBar(\"Fill All Additional Address Details.\");\r\n              } else {\r\n                this.toastService.openErrorSnackBar(\"Something went wrong\")\r\n              }\r\n            }\r\n          );\r\n      } else {\r\n        this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Update Mobile\r\n     */\r\n    updateMobile() {\r\n      let data = {\r\n        mobile: this.ProfileForm.controls.mobile.value,\r\n      };\r\n      this.profileService\r\n        .updateClientMobileOTP(data, this.currentUser.id)\r\n        .then((res) => {\r\n          this.toastService.openSnackBar(\"OTP Sent Successfully!!!\");\r\n        });\r\n    }\r\n  \r\n    /**\r\n     *\r\n     */\r\n    updateMobileNumber() {\r\n      let data = {\r\n        email: this.ProfileForm.controls.email.value,\r\n        mobile: this.ProfileForm.controls.mobile.value,\r\n        mobileotp: this.mobileOtp,\r\n      };\r\n      this.profileService.updateClientMobile(data).then((res) => {\r\n        this.toastService.openSnackBar(\"Mobile Number Verified Successfully!!!\");\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * add category name in categortNames array\r\n     * @param event\r\n     */\r\n    add(event: MatChipInputEvent): void {\r\n      let input = event.input;\r\n      let value = event.value;\r\n      // Add our category\r\n      if ((value || \"\").trim()) {\r\n        this.typeList.push(value.trim());\r\n      }\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = \"\";\r\n      }\r\n      this.categoryCtrl.setValue(value);\r\n    }\r\n  \r\n    /**\r\n     * remove/delete selected category\r\n     * @param category\r\n     */\r\n    remove(category: any): void {\r\n      let index = this.categoryName.indexOf(category);\r\n      if (index >= 0) {\r\n        this.categoryName.splice(index, 1);\r\n        this.categoryId.splice(index, 1);\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * called when category selected from dropdown\r\n     * @param event\r\n     */\r\n    selected(event: MatAutocompleteSelectedEvent): void {\r\n      let newValue = event.option.viewValue;\r\n      if (this.categoryName.includes(newValue)) {\r\n        this.categoryName = [\r\n          ...this.categoryName.filter((fruit) => fruit !== newValue),\r\n        ];\r\n      } else {\r\n        this.categoryName.push(event.option.viewValue);\r\n      }\r\n      this.categoryInput.nativeElement.value = \"\";\r\n      // this.categoryCtrl.setValue(null);\r\n  \r\n      // keep the autocomplete opened after each item is picked.\r\n      requestAnimationFrame(() => {\r\n        this.openAuto(this.matACTrigger);\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * open category dropdown panel\r\n     * @param trigger\r\n     */\r\n    openAuto(trigger: MatAutocompleteTrigger) {\r\n      trigger.openPanel();\r\n      this.categoryInput.nativeElement.focus();\r\n    }\r\n  \r\n    searchCategoryByCategory(categoryInput) {\r\n      this.profileService.getCategoryBySearch({}, categoryInput).then((res) => {\r\n        this.serachByCategory = res.data;\r\n      });\r\n    }\r\n    /**\r\n     * Get all categories\r\n     */\r\n    getBusinessCategory() {\r\n      this.profileService.getBuisnessCategoryAll({}).then((res) => {\r\n        this.categoryBusiness = res.data.rows;\r\n        this.filteredCategory = this.categoryCtrl.valueChanges.pipe(\r\n          startWith(\"\"),\r\n          map((name) =>\r\n            name ? this.filterNames(name) : this.categoryBusiness.slice()\r\n          )\r\n        );\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * filter search category names\r\n     * @param name\r\n     * @returns\r\n     */\r\n    private filterNames(name: string): string[] {\r\n      return this.categoryBusiness.filter((list) => {\r\n          list.category.toLowerCase().indexOf(name) === 0\r\n        }\r\n      );\r\n    }\r\n  \r\n    public array = [];\r\n    getCategoryId(list) {\r\n      this.array.push(list.id);\r\n      this.categoryId = this.array.filter(\r\n        (item, index, self) => self.indexOf(item) === index\r\n      );\r\n    }\r\n    numberOnly(event): boolean {\r\n      const charCode = event.which ? event.which : event.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  \r\n  }\r\n  ","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-time-schedule-page',\r\n  templateUrl: './edit-time-schedule-page.component.html',\r\n  styleUrls: ['./edit-time-schedule-page.component.scss']\r\n})\r\nexport class EditTimeSchedulePageComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<EditTimeSchedulePageComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formBuilder: FormBuilder,\r\n    public router: Router, \r\n    public route: ActivatedRoute,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>edit-time-schedule-page works!</p>\r\n","<div class=\"container-fluid bg-white p-0\">\r\n    <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n        <div class=\"flex-item searchBar\">\r\n            <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name/Location type\"\r\n                [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchFunc()\" autocomplete=\"off\">\r\n        </div>\r\n        <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n            <button id=\"saleButtonPrint1\" class=\"btn text-nowrap my-2\" type=\"button\" (click)=\"addTimeScheduleModal()\">\r\n                <i class=\"fas fa-plus me-2\"> </i>Add Time Schedule\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <hr class=\"my-0 py-0\" /> -->\r\n    <div style=\"width:100% ; overflow-x: auto;\">\r\n        <table class=\"table table-responsive table-bordered fs--1 mb-0\">\r\n            <thead class=\"text-600\">\r\n                <tr>\r\n                    <!-- <th class=\"text-nowrap col-1\" style=\"vertical-align:middle;\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\" (change)=\"onChekMultiple($event)\"\r\n                            [value]=\"-1\" [checked]=\"checkSelect\" [(ngModel)]=\"allSelect\" />\r\n\r\n                        <span *ngIf=\"archiveIconfalse\">\r\n                            <button style=\"padding: 0px!important;\"\r\n                                *ngIf=\"checkSingleArray.length > 0 || upiCheckedId.length > 0\" class=\"btn ms-3\"\r\n                                data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                                <span *ngIf=\"checkSingleArray.length > 0 || upiCheckedId.length > 0\"\r\n                                    class=\"bi-trash icon-color fs-1\" style=\"color: red;\" data-bs-toggle=\"tooltip\"\r\n                                    data-bs-placement=\"top\" title=\"Archive\"\r\n                                    (click)=\" upiCheckedId.length > 0? getUPIcheckId($event,upiCheckedId):getSingleCheckedId($event,checkSingleArray)\"></span>\r\n                            </button>\r\n                        </span>\r\n                        </th> -->\r\n                        <th class=\"text-nowrap col-1\" style=\"vertical-align:middle;\">\r\n\r\n                            <input type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\" (change)=\"onChekMultiple($event)\"\r\n                                [value]=\"-1\" [checked]=\"upiCheckedId.length === schduleAllRes.length\"\r\n                                [(ngModel)]=\"allSelect\" />\r\n                            <span *ngIf=\"showDeleteButton()\">\r\n                                <button *ngIf=\"checkSingleArray.length > 0 || isChecked\" class=\"btn\"\r\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#errorDeleteSelect-modal\">\r\n                                    <span *ngIf=\"checkSingleArray.length > 0 || isChecked\"\r\n                                        class=\"bi-trash icon-color fs-1 iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                        style=\"color : red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                        title=\"Delete\"\r\n                                        (click)=\" upiCheckedId.length > 0? getUPIcheckId($event,upiCheckedId):getSingleCheckedId($event,checkSingleArray)\">\r\n                                    </span>\r\n                                </button>\r\n                            </span>\r\n\r\n                    </th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Schedule Name</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Appointment Name</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Duration</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\">Location Type</th>\r\n                    <th class=\"text-nowrap\" style=\"vertical-align:middle;\"></th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr class=\"btn-reveal-trigger text-left\" *ngFor=\"let schedule of schduleAllRes; let i = index\"\r\n                    style=\"color: #676398!important;\">\r\n                    <!-- <td scope=\"row\" style=\"vertical-align:middle;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"checkSelectsinglefalse\"\r\n                            (change)=\"onChekedsingleCheckfalse($event,schedule.id)\" [value]=\"schedule.id\" />\r\n                    </td> -->\r\n                    <td scope=\"row\" style=\"vertical-align:middle;\">\r\n                        <input class=\"form-check-input mt-3\" type=\"checkbox\"\r\n                            [checked]=\"upiCheckedId.includes(schedule.id)\"\r\n                            (change)=\"onChekedsingleCheck($event, schedule.id)\" [value]=\"schedule.id\" />\r\n                    </td>\r\n                    <td style=\"vertical-align:middle;\">{{ schedule.scheduleName }}</td>\r\n                    <td class=\"barcode\" style=\"vertical-align:middle;\">{{ schedule.appointmentType.name }}</td>\r\n                    <td class=\"category\" style=\"vertical-align:middle;\">{{ schedule.appointmentType.duration }}</td>\r\n\r\n                    <td class=\"openingStock\" style=\"vertical-align:middle;\">{{ schedule.shopInfo.client.tradeName }}\r\n                    </td>\r\n\r\n                    <td style=\"vertical-align:middle; white-space:nowrap; \">\r\n                        <div class=\"ps-5\">\r\n                            <button class=\"btn\" type=\"button\" data-bs-toggle=\"modal\"\r\n                                data-bs-target=\"#errorDelete-modal\">\r\n                                <span class=\"bi-trash iconFontSize\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                    title=\"Delete\" style=\"color: red;\" (click)=\"getTimeScheduleId(schedule.id)\">\r\n                                </span>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n            <tbody *ngIf=\"schduleAllRes?.length === 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <img class=\"image-responsive\" src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\"\r\n                            alt=\"notfound1\" width=\"200\" height=\"150\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <mat-paginator sticky class=\"float-right mt-2\" *ngIf=\"toatlPages > 0\" [pageSize]=\"schedulePageSize\"\r\n            [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo - 1\" showFirstLastButtons\r\n            (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n        </mat-paginator>\r\n    </div>\r\n\r\n\r\n    <!-- Single Delete -->\r\n\r\n    <div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n            <div class=\"modal-content position-relative\">\r\n                <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                    <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                        aria-label=\"Close\"></a>\r\n                </div>\r\n                <div class=\"modal-body p-0\">\r\n                    <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                        <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                            Delete Schedule? </h2>\r\n                    </div>\r\n                    <h4 class=\"text-center \">Are you sure to delete this Schedule?</h4>\r\n\r\n                </div>\r\n                <div class=\"modal-footer justify-content-center\">\r\n                    <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                    <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"deleteSchedule()\">Delete\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <!-- Multiple Delete -->\r\n    <div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n            <div class=\"modal-content position-relative\">\r\n                <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                    <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                        aria-label=\"Close\"></a>\r\n                    </div>\r\n                <div class=\"modal-body p-0\">\r\n                    <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                        <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                            Delete Offer? </h2>\r\n                    </div>\r\n                    <!-- <h4   *ngIf=\"!isChecked  && !checkSingleArray \"class=\"text-center \">Are you sure to delete this UPI?</h4> -->\r\n                    <h4 *ngIf=\"isChecked \" class=\"text-center \">Are you sure to Delete All Appointment?</h4>\r\n                    <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are you sure to Delete selected Appointment?</h4>\r\n\r\n                </div>\r\n                <div class=\"modal-footer justify-content-center\">\r\n                    <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                    <!-- <a   *ngIf=\"!isChecked  && !checkSingleArray \" class=\"btn btn-outline-primary\" data-bs-dismiss=\"modal\" (click)=\"deletExpenseById()\">Delete\r\n                    </a> -->\r\n                    <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                    (click)=\"deleteBySchedule()\">Delete All\r\n                </a>\r\n                <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                (click)=\"deleteBySchedule()\">Delete Selected\r\n            </a>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ScheduleScheduleService } from 'src/app/core/services/schedule-schedule.service';\r\nimport { AddTimeScheduleComponent } from './add-time-schedule/add-time-schedule.component';\r\nimport { ScheduleShopService } from 'src/app/core/services/schedule-shop.service';\r\nimport { EditTimeSchedulePageComponent } from './edit-time-schedule-page/edit-time-schedule-page.component';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-time-schedule-page',\r\n  templateUrl: './time-schedule-page.component.html',\r\n  styleUrls: ['./time-schedule-page.component.scss']\r\n})\r\nexport class TimeSchedulePageComponent implements OnInit {\r\n\r\n  schedules=[\r\n    {\r\n      \"id\":1,\r\n      \"appointmentType\":\"Routine Visit\",\r\n      \"shopName\":\"Chinchwad East Pune\",\r\n      \"breakTime\":\"2pm -3pm\",\r\n      \"bufferTime\":\"15min\",\r\n    },\r\n    {\r\n      \"id\":2,\r\n      \"appointmentType\":\"Virtual Appt.\",\r\n      \"shopName\":\"Chinchwad East Pune\",\r\n      \"breakTime\":\"12pm -1pm\",\r\n      \"bufferTime\":\"30 min\",\r\n    },\r\n  ]\r\n  appointMentType=[\r\n    {\r\n    \"id\":1,\r\n    \"appointMent\":\"Routine Visit\"\r\n    },\r\n    {\r\n      \"id\":2,\r\n      \"appointMent\":\"Virtual appt\t\"\r\n    },\r\n    {\r\n      \"id\":3,\r\n      \"appointMent\":\"One To One\"\r\n    },\r\n  ]\r\n\r\n  public totalrow: number;\r\n  public toatlPages: number;\r\n  public currentPageNo: number = 1;\r\n  public schedulePageSize: number = 5;\r\n  public count: number = 0;\r\n  shopID:any;\r\n  public schduleAllRes:any[] = [];\r\n  shopListWithId: any[] = [];\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  currentScheduleId: any;\r\n  searchTerm: string;\r\n  public scheduleId: any;\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n  public archiveIconfalse: boolean = false;\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSingleArray: any = [];\r\n  constructor(private formBuilder:FormBuilder,\r\n    private modal:NgbModal,private route: ActivatedRoute,private scheduleScheduleService:ScheduleScheduleService,\r\n    public dialog: MatDialog, private scheduleShopService : ScheduleShopService,\r\n    private commonService : CommonService, private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n     ) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getAllSchedule();\r\n   this.commonService.rowAdded$.subscribe(() => {\r\n     // Fetch the updated list of users\r\n     this.getAllSchedule();\r\n    });\r\n  }\r\n\r\n  getAllSchedule(){\r\n    console.log(\"getAllSchedule\");\r\n    console.log(this.schedulePageSize);\r\n    console.log(this.currentPageNo);\r\n    this.scheduleScheduleService.getAllSchedule({}, this.currentUser.id, this.schedulePageSize, this.currentPageNo).then((res) => {\r\n      this.schduleAllRes = res.data.pageData;\r\n      console.log(\"schduleAllRes\", res.data);\r\n      this.currentPageNo = res.data.currentPage;\r\n      this.totalrow = res.data.totalrows;\r\n      this.toatlPages = res.data.totalPages;\r\n     })\r\n  }\r\n\r\n  searchFunc(){\r\n    if (this.searchTerm.trim() === '') {\r\n      this.getAllSchedule();\r\n    } else {\r\n      this.scheduleScheduleService.getAllSchedule({}, this.currentUser.id, this.schedulePageSize, this.currentPageNo).then((res:any) => {\r\n        this.schduleAllRes = res.data.pageData.filter(item => {\r\n          return (\r\n            item.scheduleName.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n            item.appointmentType.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n            item.appointmentType.locationType.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n          );\r\n        });\r\n      });\r\n      if(this.schduleAllRes.length === 0){\r\n        this.toastService.openErrorSnackBar(this.searchTerm + \" is not found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  getShopList(){\r\n    this.scheduleShopService.getShopList({},this.currentUser.id).then((res) => {\r\n\r\n        this.shopListWithId = res.data.rows.map((data : any) => {\r\n          return {\r\n            tradeName: data.client.tradeName,\r\n            shopId: data.id\r\n          };\r\n    })\r\n    })\r\n  }\r\n\r\n  modalDismiss(){\r\n    this.modal.dismissAll();\r\n  }\r\n  onChekMultiple($event) {\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    console.log(\"this.isChecked\", this.isChecked)\r\n    this.upiCheckedId1 = this.schduleAllRes.map((item) => {\r\n      if (id == -1) {\r\n        if (this.isChecked == true) {\r\n          this.archiveIconfalse = true;\r\n          this.checkSelectsinglefalse = true;\r\n          return item;\r\n        }\r\n        else {\r\n          this.archiveIconfalse = false;\r\n          this.checkSelectsinglefalse = false;\r\n          this.upiCheckedId = [];\r\n          this.upiCheckedId1=[];\r\n        }\r\n      }\r\n    })\r\n    console.log(\"multiple click\", this.upiCheckedId1)\r\n    for (var i = 0; i < this.upiCheckedId1.length; i++) {\r\n        this.upiCheckedId.push(this.upiCheckedId1[i].id);\r\n    }\r\n    console.log(\"multiple click\", this.upiCheckedId)\r\n\r\n  }\r\n\r\n  getSingleCheckedId(e, scheduleId : any){\r\n    this.currentScheduleId =this.scheduleId\r\n\r\n  }\r\n  getUPIcheckId(e, scheduleId : any) {\r\n    this.currentScheduleId = this.scheduleId;\r\n    console.log(\"this.scheduleId\",this.upiCheckedId1)\r\n    \r\n  }\r\n  // onChekedsingleCheckfalse(e, id) {\r\n  //   console.log(\"checked\", e.target.checked)\r\n\r\n  //   if (e.target.checked == true) {\r\n  //     this.archiveIconfalse = true;\r\n  //     this.checkSingleArray.push(e.target.value);\r\n\r\n  //   }\r\n  //   else {\r\n  //     if (this.upiCheckedId.length > this.checkSingleArray.length) {\r\n\r\n  //       var index1 = this.upiCheckedId.indexOf(id);\r\n  //       console.log(index1)\r\n  //       this.upiCheckedId.splice(index1, 1);\r\n  //       console.log(\"after single click upiCheckedId\", this.upiCheckedId)\r\n\r\n  //       if (this.upiCheckedId.length > 0) {\r\n  //         this.archiveIconfalse = true;\r\n  //         this.checkSelect = false;\r\n  //         this.isChecked=false;\r\n  //       }\r\n  //       else {\r\n  //         this.archiveIconfalse = false;\r\n  //         this.upiCheckedId = [];\r\n  //       }\r\n\r\n  //     }\r\n  //     else {\r\n  //       var index = this.checkSingleArray.indexOf(id);\r\n  //       console.log(index)\r\n  //       this.checkSingleArray.splice(index, 1);\r\n  //       console.log(\"this.checkSingleArray\", this.checkSingleArray)\r\n\r\n  //       if (this.checkSingleArray.length > 0) {\r\n  //         this.archiveIconfalse = true;\r\n  //       }\r\n  //       else {\r\n  //         this.archiveIconfalse = false;\r\n  //         this.checkSingleArray = [];\r\n  //       }\r\n\r\n  //     }\r\n  //   }\r\n  // }\r\n  onChekedsingleCheck(e, scheduleId){\r\n    if (e.target.checked) {\r\n      this.upiCheckedId.push(scheduleId);\r\n    } else {\r\n      const index = this.upiCheckedId.indexOf(scheduleId);\r\n      if (index !== -1) {\r\n        this.upiCheckedId.splice(index, 1);\r\n      }\r\n    }\r\n    // const checkArray: FormArray = this.form.get('checkArray') as FormArray;\r\n    if (e.target.checked) {\r\n      this.checkSingleArray.push(e.target.value);\r\n    }\r\n    else {\r\n      this.checkSingleArray = [];\r\n    }\r\n \r\n  }\r\n  showDeleteButton(): boolean {\r\n    return this.upiCheckedId.length > 0;\r\n  }\r\n  deleteBySchedule(){\r\n      this.scheduleShopService.deletemultipleSchedule({\"schedulesId\": this.upiCheckedId}, this.currentUser.id).then((res) => {\r\n        if (res.success) {\r\n          // this.goodsData = res.data.pageData;\r\n          this.toastService.openSnackBar(\"Schedule Deleted Successfully!!!\");\r\n          this.archiveIconfalse = false;\r\n          this.allSelect = false;\r\n          this.checkSelectsinglefalse = false;\r\n          this.isChecked=false;\r\n          this.upiCheckedId = [];\r\n          this.checkSingleArray = [];\r\n         \r\n          this.getAllSchedule()\r\n        }\r\n  \r\n      }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n  \r\n        }\r\n      );\r\n    }\r\n\r\n\r\n  deleteSchedule(){\r\n    this.scheduleShopService.deleteschedulybyId({}, this.currentScheduleId).then((res : any) => {\r\n      if(res.success){\r\n        this.toastService.openSnackBar(\"Schedule Deleted Successfully!!!\");\r\n        this.getAllSchedule()\r\n      }\r\n    })\r\n  }\r\n\r\n  getTimeScheduleId(scheduleId : any){\r\n    this.currentScheduleId = scheduleId\r\n  }\r\n\r\n  addTimeScheduleModal() {\r\n    console.log(\"in here\");\r\n    const dialogRef: MatDialogRef<AddTimeScheduleComponent>  = this.dialog.open(AddTimeScheduleComponent, {\r\n      width: '700px', // Adjust the width as per your requirement\r\n      height: '730px', // Adjust the height as per your requirement\r\n      panelClass: 'custom-dialog-add-time-schedule',\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  openViewModal(scheduleId) { // Not yet implemented\r\n    const dialogRef: MatDialogRef<EditTimeSchedulePageComponent>  = this.dialog.open(EditTimeSchedulePageComponent, {\r\n      width: '700px', // Adjust the width as per your requirement\r\n      height: '730px', // Adjust the height as per your requirement\r\n      panelClass: 'custom-dialog-edit-time-schedule',\r\n      data: { scheduleId: scheduleId },\r\n      disableClose:true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  public handlePage(e: any) {\r\n    console.log(e)\r\n    this.currentPageNo = e.pageIndex;\r\n    this.schedulePageSize = e.pageSize;\r\n    this.getAllSchedule();\r\n  }\r\n\r\n}\r\n\r\n"]}