{"version":3,"file":"default-src_app_pages_ledger_preview_preview_component_ts-es2015.js","mappings":"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","sources":["./src/app/core/services/ledger-service.service.ts","./src/app/pages/ledger/preview/preview.component.ts","./src/app/pages/ledger/preview/preview.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\nimport { HttpService } from './http.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LedgerServiceService {\r\n\r\n  // public sharedArray: any[] = [];\r\n  private ledgerDataSubject = new BehaviorSubject<any[]>([]);\r\n  MasterLedgerData$ = this.ledgerDataSubject.asObservable();\r\n  // allLedgerData$ = this.ledgerDataSubject.asObservable();\r\n\r\n  constructor(public httpClient:HttpService) { }\r\n\r\n  setLedgerData(data: any[]): void {\r\n    console.log(\"setLedger in service\", data);\r\n    this.ledgerDataSubject.next(data);\r\n  }\r\n\r\n  addLedger(data, userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.addLedger + userId ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  getUserLedger2(data, userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.getUserLedger2 + userId ,  'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  getAllGlnames(data: {}, userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.getAllGlnames + userId ,  'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  \r\n  getUserUsecaseData(data: {}, userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.getUserUsecaseData + userId ,  'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  addCustomLedger(data: {}, userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.addCustomLedger + userId ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  assignLedgersv2(data: {}, userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.assignLedgersv2 + userId ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  getUserChildLedger(data: {}, userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.getUserChildLedger + userId ,  'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  masterLedgerTrueFalse(data: {}, userId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.masterLedgerTrueFalse + userId ,  'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { request } from 'http';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { LedgerServiceService } from 'src/app/core/services/ledger-service.service';\r\n\r\n@Component({\r\n  selector: 'app-preview',\r\n  templateUrl: './preview.component.html',\r\n  styleUrls: ['./preview.component.scss']\r\n})\r\nexport class PreviewComponent implements OnInit {  \r\n  ledgerList: any[] = [];\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  // Create separate arrays for each category\r\n  currentAssets: any[] = [];\r\n  nonCurrentAssets: any[] = [];\r\n  currentLiabilities: any[] = [];\r\n  nonCurrentLiabilities: any[] = [];\r\n  equity: any[] = [];\r\n  revenue: any[] = [];\r\n  cogs: any[] = [];\r\n  operatingExpenses: any[] = [];\r\n  masterLedger: any[] = [];\r\n  ledgerItems: { [key: string]: [] } = {};\r\n  allGlData: any[] = [];\r\n  filteredData: any[];\r\n  itemToDelete: any;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n  public dialogRef: MatDialogRef<PreviewComponent>, private dialog: MatDialog, public router: Router,\r\n  private ledgerService : LedgerServiceService, private commonService : CommonService) { \r\n    this.ledgerList = data.selectedItems; \r\n    this.allGlData = data.allGlData;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.ledgerItems = this.groupLedgerItems(this.ledgerList);\r\n    const keysArray = Object.keys(this.ledgerItems);\r\n    const keysString = keysArray.join(', '); \r\n    console.log(this.allGlData.filter(item => keysString.includes(item.glNumber)));\r\n    this.filteredData = this.allGlData.filter(item => keysString.includes(item.glNumber));\r\n    console.log(this.filteredData);\r\n\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      this.ledgerItems = this.groupLedgerItems(this.ledgerList);\r\n      const keysArray = Object.keys(this.ledgerItems);\r\n      const keysString = keysArray.join(', '); \r\n      console.log(this.allGlData.filter(item => keysString.includes(item.glNumber)));\r\n      this.filteredData = this.allGlData.filter(item => keysString.includes(item.glNumber));\r\n    });\r\n\r\n  }\r\n\r\n  groupLedgerItems(ledgerItems: any[]) {\r\n    const groupedItems = {};\r\n    console.log(ledgerItems)\r\n    ledgerItems.forEach(item => {\r\n      if (!groupedItems[item.parentAccount]) {\r\n        groupedItems[item.parentAccount] = [];\r\n      }\r\n      groupedItems[item.parentAccount].push(item);\r\n    });\r\n  \r\n    return groupedItems;\r\n  }\r\n  \r\n  getGlNameByGlNumber(glNumber: string): string {\r\n    const matchedItem = this.filteredData.find(item => item.glNumber === glNumber);\r\n    return matchedItem ? matchedItem.glName : ''; // Return the glName or an empty string if not found\r\n  }\r\n\r\n  toggleEdit(item: any): void {\r\n    if (!item.editing) {\r\n      item.editing = true;\r\n      item.editedName = item.glName;\r\n    } else {\r\n      item.editing = false;\r\n    }\r\n  }\r\n\r\n  saveEditedName(item: any): void {\r\n    if (item.editing) {\r\n      item.glName = item.editedName;\r\n      item.editing = false;\r\n    }\r\n  }\r\n\r\n  saveData(): void {\r\n    const glNumbersAndNames = this.filteredData.reduce((acc, item) => {\r\n      acc[item.glNumber] = item.glName;\r\n      return acc;\r\n    }, {});\r\n    \r\n    console.log(this.ledgerItems)\r\n    const ledgerGlNumbersAndNames: Record<string, string> = {};\r\n    Object.values(this.ledgerItems).forEach((group: any[]) => {\r\n      group.forEach(item => {\r\n        ledgerGlNumbersAndNames[item.glNumber] = item.glName;\r\n      });\r\n    });\r\n\r\n    console.log(glNumbersAndNames)\r\n    console.log(ledgerGlNumbersAndNames)\r\n    // Create the requestBody object\r\n    const requestBody = {\r\n      new: {\r\n        ...glNumbersAndNames,\r\n        ...ledgerGlNumbersAndNames\r\n      }\r\n    };    \r\n    \r\n    this.ledgerService.addLedger(requestBody, this.currentUser.id).then((res) => {\r\n      if(res.success) {\r\n        console.log(res);\r\n        window.location.reload();   // reload the page after ledger has been added to master ledger for redirecting user to master ledger page\r\n        this.dialogRef.close();\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(ledgerToDelete) {  \r\n    // Get the glNumber to delete from the ledger object\r\n    const glNumberToDelete = ledgerToDelete.glNumber;\r\n    const parentAccount = ledgerToDelete.parentAccount;\r\n  \r\n    const updatedLedgerArray = this.ledgerItems[parentAccount].filter(\r\n      (entry: any) => entry.glNumber !== glNumberToDelete\r\n    ) as []; // Explicitly assert the type\r\n\r\n      console.log(updatedLedgerArray)\r\n    // Update the ledgerItems object with the modified array\r\n    this.ledgerItems[parentAccount] = updatedLedgerArray;\r\n  \r\n    // Get an array of ledger entry arrays from the ledgerList object\r\n    // const ledgerArrays = Object.values(this.ledgerList);\r\n\r\n    // // Iterate through each array of ledger entries\r\n    // const indexToDelete = ledgerArrays.findIndex(\r\n    //   (entry: any) => entry.glNumber === glNumberToDelete\r\n    // );\r\n\r\n    // // Delete the ledger entry if found\r\n    // if (indexToDelete !== -1) {\r\n    //   ledgerArrays.splice(indexToDelete, 1);\r\n    // }\r\n\r\n    // // Reconstruct the ledgerList object from the modified ledgerArrays\r\n    // const updatedLedgerList: any = {}; // Using type assertion\r\n\r\n    // Object.keys(this.ledgerList).forEach((key, index) => {\r\n    //   updatedLedgerList[key] = ledgerArrays[index];\r\n    // });\r\n  \r\n    // console.log(this.ledgerItems);\r\n    // this.ledgerItems[parentAccount] = updatedLedgerList \r\n    // console.log(Object.values(this.ledgerItems));\r\n    // this.commonService.notifyDataAdded()\r\n  }\r\n  \r\n  cancel() {\r\n    // Reset the form and submitted flag\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"modal-header pt-0\" id=\"Add-Party-modal\">\r\n    <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel my-1\"\r\n    (click)=\"cancel()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-save my-1\" (click)=\"saveData()\">Save</button>\r\n</div>\r\n\r\n<div class=\"modal-body\" style=\"overflow-y: auto; height: 92%;\">\r\n    <div class=\"mb-3\">\r\n        <div class=\"\">\r\n              <div class=\"table-responsive\" *ngFor=\"let groupKey of ledgerItems | keyvalue\">\r\n                <table class=\"table table-striped table-bordered bg-white\" *ngIf=\"groupKey.key.length > 0\">\r\n                  <thead style=\"background-color: #EBEBEB;\">\r\n                    <tr class=\"btn-reveal-trigger\">\r\n                      <th class=\"text-nowrap\" style = \"vertical-align: middle;\">{{ getGlNameByGlNumber(groupKey.key) }}</th>\r\n                      <th class=\"text-nowrap\"></th>\r\n                      <th class=\"text-nowrap\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let item of groupKey.value; let i = index\">\r\n                      <!-- Render the columns based on your item properties -->\r\n                      <td style = \"vertical-align: middle;white-space: nowrap;\">{{ item.glNumber }}</td>\r\n                      <td style = \"vertical-align: middle;white-space: nowrap;\">\r\n                        <!-- Your editing and view mode logic here -->\r\n                        <ng-container *ngIf=\"item.editing; else viewMode\">\r\n                            <input type=\"text\" [(ngModel)]=\"item.editedName\" (keyup.enter)=\"saveEditedName(item)\" />\r\n                          </ng-container>\r\n                          <ng-template #viewMode>\r\n                            {{ item.glName }}\r\n                          </ng-template>\r\n                      </td>\r\n                      <td style=\"display: flex; justify-content: center;\">\r\n                        <!-- Your buttons and actions here -->\r\n                        <button class=\"btn btnp pt-0\" (click)=\"toggleEdit(item)\">\r\n                            <span class=\"bi-pencil-square fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                        </button>\r\n                        <button class=\"btn btnp pt-0\" style=\"color : red\" data-bs-toggle=\"modal\" (click)=\"deleteItem(item)\">\r\n                            <span class=\"bi-trash fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///"}