{"version":3,"file":"src_app_pages_shop-module_components_shop-settings_shop-settings_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/shop-module/components/shop-settings/components/shop-profile-settings/shop-profile-settings.component.ts","./src/app/pages/shop-module/components/shop-settings/components/shop-profile-settings/shop-profile-settings.component.html","./src/app/pages/shop-module/components/shop-settings/components/shop-profile/shop-profile.component.ts","./src/app/pages/shop-module/components/shop-settings/components/shop-profile/shop-profile.component.html","./src/app/pages/shop-module/components/shop-settings/shop-settings-routing.module.ts","./src/app/pages/shop-module/components/shop-settings/shop-settings.component.ts","./src/app/pages/shop-module/components/shop-settings/shop-settings.component.html","./src/app/pages/shop-module/components/shop-settings/shop-settings.module.ts"],"sourcesContent":["import { TitleCasePipe, formatDate } from \"@angular/common\";\r\nimport lang from \"src/assets/langTranslation/language_translation\"\r\nimport { Component, ElementRef, OnInit, ViewChild, AfterViewInit, ChangeDetectorRef, OnChanges, SimpleChanges, LOCALE_ID } from \"@angular/core\";\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ProfileService } from \"src/app/core/services/profile.service\";\r\nimport { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\nimport {\r\n  MatAutocomplete,\r\n  MatAutocompleteSelectedEvent,\r\n  MatAutocompleteTrigger,\r\n} from \"@angular/material/autocomplete\";\r\nimport { Observable, pipe } from \"rxjs\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { COMMA, ENTER } from \"@angular/cdk/keycodes\";\r\nimport * as moment from \"moment\";\r\nimport { createFalse } from \"typescript\";\r\nimport { log } from \"console\";\r\nimport { PartyService } from \"src/app/core/services/party.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EditBusinessPartnerModalComponent } from \"src/app/pages/Profile/profile-settings/edit-business-partner-modal/edit-business-partner-modal.component\";\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { CommonService } from \"src/app/core/services/common.service\";\r\n\r\ninterface IRange {\r\n  value: Date[];\r\n  label: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-shop-profile-settings',\r\n  templateUrl: './shop-profile-settings.component.html',\r\n  styleUrls: ['./shop-profile-settings.component.scss']\r\n})\r\nexport class ShopProfileSettingsComponent implements OnInit {\r\n\r\n  public lang = lang.UAE;\r\n  public dragging: boolean = false;\r\n  public loaded: boolean = false;\r\n  public imageLoaded: boolean = false;\r\n  public activeColor: string = 'green';\r\n  public baseColor: string = '#ccc';\r\n  public signImg: any = '';\r\n  public profilePic: any = '';\r\n  public overlayColor: string = 'rgba(255,255,255,0.5)';\r\n  partners: any[] = [];\r\n  states: string[] = [\r\n    'Abu Dhabi',\r\n    'Dubai',\r\n    'Sharjah',\r\n    'Ajman',\r\n    'Umm Al Quwain',\r\n    'Ras Al Khaimah',\r\n    'Fujairah',\r\n  ];\r\n\r\n  ranges: IRange[] = [\r\n    {\r\n      value: [\r\n        new Date(new Date().setDate(new Date().getDate() - 7)),\r\n        new Date(),\r\n      ],\r\n      label: \"Last 7 Days\",\r\n    },\r\n    {\r\n      value: [\r\n        new Date(new Date().setDate(new Date().getMonth() - 1)),\r\n        new Date(),\r\n      ],\r\n      label: \"Last Month\",\r\n    },\r\n  ];\r\n  today: Date;\r\n  maxDate: Date;\r\n  public typeList = [];\r\n  public value: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public data: any;\r\n  public ProfileForm: FormGroup;\r\n  public TradeForm: FormGroup;\r\n  public addressForm: FormGroup;\r\n  public businessForm: FormGroup;\r\n  public dateRange: FormGroup;\r\n  public updated: boolean = false;\r\n  public submitted: boolean;\r\n  public date = new Date();\r\n  public addressId: string = \"\";\r\n  public additionalPlaceOfBusiness: FormArray;\r\n  public addressLength;\r\n  public pinDetails: any;\r\n  public gstDetails: any;\r\n  public finalAddress: any;\r\n  public pin: any;\r\n  public businessNature: any = [];\r\n  public compositeType: boolean = false;\r\n  public isShown: boolean = true;\r\n  public mobileOtp: any;\r\n  public visible = true;\r\n  public selectable = true;\r\n  public removable = true;\r\n  public separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  public categoryCtrl = new FormControl();\r\n  public filteredCategory: Observable<string[]>;\r\n  public categoryBusiness: any = [];\r\n  public categoryName: any = [];\r\n  public categoryId: any[] = [];\r\n  public opened = false;\r\n  public isDisabledGST: boolean = true;\r\n  public addressArray = [];\r\n  public partenerAray = []\r\n  public businessType: any;\r\n  public constitutionBusinessType: any;\r\n  public legTrad: boolean = false;\r\n  public cinFlag: boolean = false;\r\n  public partnerSubmitted = false\r\n  partnerDetails: any[] = [];\r\n  additionaDetailsData: any[] = [];\r\n  public cosntBusiness = [\r\n    \"Proprietorship\",\r\n    \"Partnership\",\r\n    \"Private Limited Company\",\r\n    \"Public Limited Company\",\r\n    \"Limited Liability Partnership\",\r\n    \"Hindu Undivided Family\"\r\n  ];\r\n\r\n  public uaeCosntBusiness = [\r\n    \"Sole proprietorship\",\r\n    \"Civil Company\",\r\n    \"Limited Liability Company (LLC)\",\r\n    \"Partnership\",\r\n    \"Private Share Holding Company\",\r\n    \"Public Share Holding Company\",\r\n    \"Branch of Foreign Companies/Representative Office\",\r\n    \"Branch of GCC companies\",\r\n    \"Branch of Free zone company\",\r\n    \"Branch of Dubai based companies\",\r\n    \"Branch of UAE based companies\"\r\n  ];\r\n  @ViewChild(\"categoryInput\") categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild(\"auto\") matAutocomplete: MatAutocomplete;\r\n  @ViewChild(\"autocompleteTrigger\") matACTrigger: MatAutocompleteTrigger;\r\n  serachByCategory: any;\r\n  public ischecked: boolean = false;\r\n  signatureData: string;\r\n  imgNumber: any;\r\n  showUploadInput: boolean = false;\r\n  public imageSrc: any = \"\";\r\n  profileImage: File;\r\n  signatureImage: File;\r\n  showAdditionalFields = false;\r\n  editedRowIndex: number = -1;  //to store the index of the currently edited row\r\n  additionaList: any[] = [];\r\n  businessPlaceAdd: FormGroup;\r\n  shopId: any;\r\n  isFirstChange: boolean = true;\r\n  isLoading: boolean = false;\r\n  businesscategory: any[] = [];\r\n\r\n  constructor(\r\n    public profileService: ProfileService, public partyService: PartyService,\r\n    public fb: FormBuilder, private cdr: ChangeDetectorRef,\r\n    public router: Router, private commonService: CommonService,\r\n    private toastService: ToastNotificationService, private titleCasePipe: TitleCasePipe,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.today = new Date();\r\n    this.maxDate = new Date(\r\n      this.today.getFullYear(),\r\n      this.today.getMonth(),\r\n      25\r\n    );\r\n  }\r\n\r\n  async ngOnInit() {\r\n    //form for profile data\r\n    try {\r\n      this.TradeForm = this.fb.group({\r\n      })\r\n     \r\n      this.ProfileForm = this.fb.group({\r\n        firstName: [\"\", [Validators.required, Validators.pattern(\"^[a-zA-Z ]*$\")],\r\n        ],\r\n        legalName: [null, [Validators.pattern(\"^[a-zA-Z ]*$\")]],\r\n        businessType: [\"\"],\r\n        email: [\"\", [Validators.pattern(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\")]],\r\n        mobile: [\"\"],\r\n        gstType: [null],\r\n        gstStatus: [null],\r\n        gstinNo: [null],\r\n        state: [\"\", [Validators.required]],\r\n        city: [{ value: 'UAE', disabled: true }],\r\n        pincode: [null],\r\n        district: [\"\", [Validators.required]],\r\n        landmark: [\"\"],\r\n        country: ['United Arab Emirates (UAE) (Former Trucial Oman, Trucial States)'],\r\n        homeno: [\"\"],\r\n        address: [\"\", [Validators.required]],\r\n        accountMethod: [\"\", [Validators.required]],\r\n        compositeType: [\"\"],\r\n        businessNature: [\"\"],\r\n        panNumber: [null],\r\n        tradeName: [null],\r\n        financialYearFrom: [\"\"],\r\n        bookBeginningFrom: [null],\r\n        cinNumber: [null],\r\n        profileImage: [null],\r\n        signatureImage: [null],\r\n      });\r\n     \r\n      this.getType();\r\n      this.getBusinessCategory();\r\n      //calling get data api for profile\r\n      this.getProfileData();\r\n\r\n      //form for multiple address\r\n      this.addressForm = this.fb.group({\r\n        addresses: new FormArray([]),\r\n      });\r\n\r\n      // For Additional place of Business\r\n      this.businessPlaceAdd = this.fb.group({\r\n        pincode: ['', Validators.required],\r\n        state: ['', Validators.required],\r\n        district: ['', Validators.required],\r\n        country: ['United Arab Emirates (UAE) (Former Trucial Oman, Trucial States)', Validators.required],\r\n        city: ['', Validators.required],\r\n        homeno: ['', Validators.required],\r\n        address: ['adress'],\r\n        areaStreet: ['', Validators.required],\r\n        landmark: ['', Validators.required],\r\n      });\r\n\r\n      //for partner Form\r\n      this.businessForm = this.fb.group({\r\n        position: [\"\"],\r\n        nameOfPartner: [\"\"],\r\n        licenceAndCertificate: [\"\"],\r\n        documentNumber: [\"\"],\r\n      })\r\n    } catch (error) {\r\n    } \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.cdr.detectChanges();\r\n    });\r\n   \r\n  }\r\n\r\n  getallPartnerList() {\r\n    this.profileService.getBusinessPartners({}, this.currentUser.id).then((res: any) => {\r\n      this.partnerDetails = res.data.filter(data => {\r\n        return (!(data.position === null) && !(data.nameOfPartner === null))\r\n      })\r\n    });\r\n  }\r\n\r\n  getAdditionaDetails() {\r\n    this.additionaDetailsData = []\r\n    this.profileService.getAdditionaDetails({}, this.currentUser.id).then((res: any) => {\r\n      this.additionaDetailsData = res.data.filter(data => {\r\n        return (!(data.documentNumber === null) && !(data.licenceAndCertificate === null))\r\n      })\r\n    });\r\n    if (this.additionaDetailsData.length > 0) {\r\n      this.showAdditionalFields = true;\r\n    }\r\n  }\r\n\r\n  toggleAdditionalFields() {\r\n    this.showAdditionalFields = !this.showAdditionalFields;\r\n  }\r\n\r\n  validatecinNumber(cin) {\r\n    let cinNo = cin.toUpperCase();\r\n    var regex =\r\n      /^([L|U]{1})([0-9]{5})([A-Za-z]{2})([0-9]{4})([A-Za-z]{3})([0-9]{6})$/;\r\n\r\n    if (regex.test(cinNo)) {\r\n    } else {\r\n      this.ProfileForm.controls.cinNumber.setErrors({ incorrect: true });\r\n    }\r\n  }\r\n\r\n  validatepanNumber(pan) {\r\n    let panNo = pan.toUpperCase();\r\n    var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}/;\r\n\r\n    if (regex.test(panNo)) {\r\n    } else {\r\n      this.ProfileForm.controls.panNumber.setErrors({ incorrect: true });\r\n    }\r\n  }\r\n\r\n  validateTRN(TRN) {\r\n    if (TRN.length === 15) {\r\n        this.isDisabledGST = false;\r\n    } else {\r\n      this.isDisabledGST = true;\r\n      this.ProfileForm.controls.gstinNo.setErrors({ incorrect: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get gst type\r\n   * @param gstType\r\n   */\r\n\r\n  /**\r\n   * Get Controls of FormArray\r\n   */\r\n  get addressControls() {\r\n    return this.addressForm.get(\"addresses\") as FormArray;\r\n  }\r\n\r\n  addAddress(): void {\r\n    try {\r\n      const data = this.addressForm.get(\"addresses\") as FormArray;\r\n      this.cdr.detectChanges();\r\n      if (data) {\r\n        data.push(this.createAddress());\r\n        this.cdr.detectChanges();\r\n      }\r\n    } catch {\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete array index from FormArray\r\n   * @param index\r\n   */\r\n  deleteAddressForm(index): void {\r\n    const data = this.addressForm.get(\"addresses\") as FormArray;\r\n    data.removeAt(index);\r\n  }\r\n\r\n  /**\r\n   * Add index to FormArray\r\n   * @returns\r\n   */\r\n  createAddress(): FormGroup {\r\n    return new FormGroup({\r\n      homeno: new FormControl(),\r\n      pincode: new FormControl(),\r\n      address: new FormControl(),\r\n      city: new FormControl(),\r\n      state: new FormControl(),\r\n      country: new FormControl(),\r\n      district: new FormControl(),\r\n      landmark: new FormControl(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove index from FormArray\r\n   * @param i\r\n   */\r\n  removeAddress(i: number) {\r\n    (<FormArray>this.addressForm.get(\"addresses\")).removeAt(i);\r\n  }\r\n\r\n  /**\r\n   * Get Formcontrol of FormGroup\r\n   */\r\n  get f() {\r\n    return this.ProfileForm.controls;\r\n  }\r\n\r\n  get fpart() {\r\n    return this.businessForm.controls;\r\n  }\r\n\r\n  toggleShow(checked: boolean) {\r\n    this.isShown = checked;\r\n\r\n    if (!this.isShown) {\r\n      this.ProfileForm.get(\"gstinNo\").clearValidators();\r\n      this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n    } else {\r\n      this.ProfileForm.get(\"gstinNo\").setValidators([]);\r\n      this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  getCategoryNamesFromIds(ids: number[]): string[] {\r\n    return ids.map(id => {\r\n      const category = this.categoryBusiness.find(item => item.id === id);\r\n      return category ? category.category : '';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get user profile data\r\n   */\r\n  async getProfileData() {\r\n    await this.profileService.getUserProfile({}, this.currentUser.id).then((res) => {\r\n      this.data = res.data;\r\n      this.shopId = res.data.basicdetails?.id;\r\n      this.profilePic = res.data.basicdetails.profileImage\r\n      this.constitutionBusinessType = res.data.additional.businessType\r\n      this.signImg = res.data.basicdetails.addSignature\r\n      let otherAddresses = res.data.otherAddresses;\r\n      if (res.data.additional.gstType == \"Composite\") {\r\n        this.compositeType = true;\r\n      }\r\n      if (otherAddresses.length > 0) {\r\n        for (let i = 0; i < otherAddresses.length; i++) {\r\n          this.addressId = otherAddresses[i].id;\r\n          this.addressControls.push(\r\n            new FormGroup({\r\n              address: new FormControl(otherAddresses[i].address),\r\n              city: new FormControl(otherAddresses[i].city),\r\n              country: new FormControl(otherAddresses[i].country),\r\n              homeno: new FormControl(otherAddresses[i].homeno),\r\n              pincode: new FormControl(otherAddresses[i].pincode),\r\n              state: new FormControl(otherAddresses[i].state),\r\n              landmark: new FormControl(otherAddresses[i].landmark),\r\n              district: new FormControl(otherAddresses[i].district),\r\n              id: new FormControl(otherAddresses[i].id),\r\n            })\r\n          );\r\n        }\r\n      }\r\n      if (res.data.additional.isRegistered != null) {\r\n        this.toggleShow(res.data.additional.isRegistered);\r\n      }\r\n      if (res.data.additional.gstinNo != null) {\r\n        \r\n      }\r\n      let businessNatureData = res.data.businessTypes.map((item) => item.id);\r\n      this.businesscategory = res.data.businessCategory.map((item) => item.id);\r\n      this.categoryName = this.getCategoryNamesFromIds(this.businesscategory);\r\n      //sending data from get api to form by patching\r\n      this.ProfileForm.patchValue({\r\n        email: res.data.basicdetails.email,\r\n        businessType: res.data.additional.businessType,\r\n        firstName: res.data.basicdetails.firstName,\r\n        totalPlaces: res.data.additional.totalPlaces,\r\n        legalName: res.data.additional.legalName,\r\n        gstType: res.data.additional.gstType,\r\n        gstStatus: res.data.additional.status,\r\n        gstinNo: res.data.additional.gstinNo\r\n          ? res.data.additional.gstinNo\r\n          : null,\r\n        compositeType: res.data.additional.compositeType,\r\n        fullName: res.data.basicdetails.firstName,\r\n        mobile: res.data.basicdetails.mobile,\r\n        tradeName: res.data.additional.tradeName,\r\n        accountMethod: res.data.additional.accountMethod,\r\n        pincode: res.data.primaryAddress.pincode ? res.data.primaryAddress.pincode : null,\r\n        state: res.data.primaryAddress.state ? res.data.primaryAddress.state : null,\r\n        city: res.data.primaryAddress.city ? res.data.primaryAddress.city : null,\r\n        country:  res.data.primaryAddress.country ? res.data.primaryAddress.country : 'UAE' ,\r\n        address: res.data.primaryAddress.address ? res.data.primaryAddress.address : null,\r\n        landmark: res.data.primaryAddress.landmark ? res.data.primaryAddress.landmark : null,\r\n        district: res.data.primaryAddress.district ? res.data.primaryAddress.district : null,\r\n        homeno: res.data.primaryAddress.homeno ? res.data.primaryAddress.homeno : null,\r\n        panNumber: res.data.additional.panNumber ? res.data.additional.panNumber : null,\r\n        financialYearFrom: res.data.additional.financialYearFrom ? moment(res.data.additional.financialYearFrom).format(\r\n          \"DD-MMM-YYYY\"\r\n        ) : \"\",\r\n        bookBeginningFrom: res.data.additional.bookBeginningFrom ? moment(res.data.additional.bookBeginningFrom).format(\r\n          \"DD-MMM-YYYY\"\r\n        ) : \"\",\r\n\r\n        cinNumber: res.data.additional.cinNumber,\r\n        businessNature: businessNatureData,\r\n        categoryCtrl: this.businesscategory,\r\n      \r\n      });\r\n    });\r\n    if (this.ProfileForm.value.gstinNo !== null) {\r\n      this.isLoading = true\r\n    \r\n        this.isShown = true\r\n        this.isDisabledGST = false\r\n        this.isLoading = false\r\n    }\r\n    this.getallPartnerList();\r\n    this.getAdditionaDetails()\r\n       if (!this.ProfileForm.valid) {\r\n       console.log(\"Profile form validity check---\",this.ProfileForm)\r\n      this.toastService.toastMsg({\r\n        title:\"Warning\",\r\n        content: \"profile data is not filled\",\r\n      });\r\n    }else{\r\n    }\r\n\r\n  }\r\n  \r\n  //get pincode api\r\n  getPincodeDetails(pin) {\r\n    this.profileService.getUserPincode({}, pin).then((res) => {\r\n      this.pinDetails = res;\r\n      this.ProfileForm.patchValue({\r\n        district: res.data.districtName,\r\n        state: res.data.stateName,\r\n      });\r\n    });\r\n  }\r\n\r\n  getPincodeDetailsForAdditionalAddress(pin, index) {\r\n    if (pin.length == 6) {\r\n      this.profileService.getUserPincode({}, pin).then((res) => {\r\n        this.pinDetails = res.data;\r\n        this.addressControls.controls[index].patchValue({\r\n          pincode: this.pinDetails.pincode,\r\n          state: this.pinDetails.stateName,\r\n          district: this.pinDetails.districtName,\r\n        });\r\n        this.addressControls\r\n          .at(index)\r\n          .patchValue(res.data.stateName, res.data.districtName);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get nature of business list\r\n   */\r\n  public getType() {\r\n    this.profileService.getTypes({}).then((response) => {\r\n      this.typeList = response.data;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update user profile\r\n   * @returns\r\n   */\r\n  updateUserProfile() {\r\n    console.log(this.ProfileForm);\r\n    this.submitted = true;\r\n    var registerdProfileData\r\n    registerdProfileData = {\r\n      basicdetails: {\r\n        firstName: this.ProfileForm.controls.firstName.value,\r\n        // addSignature: this.signImg,\r\n        // profileImage: this.profileImage,\r\n      },\r\n      additional: {\r\n        isRegistered: this.isShown,\r\n        legalName: this.ProfileForm.controls.legalName.value\r\n          ? this.ProfileForm.controls.legalName.value\r\n          : null,\r\n        businessType: this.ProfileForm.controls.businessType.value\r\n          ? this.ProfileForm.controls.businessType.value\r\n          : null,\r\n        gstType: this.ProfileForm.controls.gstType.value,\r\n        gstStatus: this.ProfileForm.controls.gstStatus.value,\r\n        // ...(this.ProfileForm.controls.compositeType.value == \"Composite\") && ({ \"compositeType\": this.ProfileForm.controls.compositeType.value }),\r\n        compositeType: this.ProfileForm.controls.compositeType.value\r\n          ? this.ProfileForm.controls.compositeType.value\r\n          : \"Trader\",\r\n        gstinNo: this.ProfileForm.controls.gstinNo.value\r\n          ? this.ProfileForm.controls.gstinNo.value.toUpperCase()\r\n          : null,\r\n        accountMethod: this.ProfileForm.controls.accountMethod.value,\r\n        state: this.ProfileForm.controls.state.value,\r\n        //   \"legalName\": this.ProfileForm.controls.legalName.value,\r\n        totalPlaces: 0,\r\n        category: [...this.categoryId, ...this.businesscategory],\r\n        tradeName: this.ProfileForm.controls.tradeName.value,\r\n        panNumber: this.ProfileForm.controls.panNumber.value,\r\n        financialYearFrom: this.ProfileForm.controls.financialYearFrom.value,\r\n        bookBeginningFrom: this.ProfileForm.controls.bookBeginningFrom.value,\r\n        cinNumber: this.ProfileForm.controls.cinNumber.value ? this.ProfileForm.controls.cinNumber.value : null,\r\n      },\r\n      address: {\r\n        state: this.ProfileForm.controls.state.value,\r\n        pincode: this.ProfileForm.controls.pincode.value,\r\n        city: this.ProfileForm.controls.district.value ? this.ProfileForm.controls.district.value : \"\",\r\n        district: this.ProfileForm.controls.district.value,\r\n        // landmark: this.ProfileForm.controls.landmark.value ? this.ProfileForm.controls.landmark.value : \"landmark\",\r\n        country: this.ProfileForm.controls.country.value,\r\n        // homeno: \"homeno\",\r\n        address: this.ProfileForm.controls.address.value,\r\n      },\r\n      businesses: this.ProfileForm.controls.businessNature.value,\r\n      categoryBusiness: [...this.categoryId, ...this.businesscategory],\r\n      // businessCategory: this.ProfileForm.controls.categoryCtrl.value,\r\n    };\r\n\r\n    let finalObject;\r\n\r\n    if (!this.isShown) {\r\n      finalObject = registerdProfileData;\r\n    } else {\r\n      finalObject = registerdProfileData;\r\n      // finalObject = profileData;\r\n    }\r\n\r\n    if (this.ProfileForm.valid) {\r\n      this.profileService\r\n        .updateUserprofile(finalObject, this.currentUser.id)\r\n        .then(\r\n          (res) => {\r\n            if (res.success) {\r\n              this.addBusinessPartners()\r\n              this.addDetailsAPI()\r\n              this.router.navigate([\"/pages/warehouse-landing/warehouse-profile\"]);\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.ststus == 500) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"err.error.error_message\",\r\n              });\r\n            }\r\n          }\r\n        );\r\n    } else {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Please Fill Up Mandatory Details First Before Submit\",\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add multiple address\r\n   */\r\n  addMultipleAddress() {\r\n    const newAddress = this.addressForm.get('addresses').value[this.addressControls.length - 1];\r\n    // Check if the new address is not null and contains valid data\r\n    if (newAddress  && newAddress.address && newAddress.city && newAddress.country && newAddress.district && newAddress.homeno && newAddress.landmark && newAddress.pincode && newAddress.state) {\r\n      var addressData = {\r\n        id: newAddress.id || \"\",\r\n        address: newAddress.address,\r\n        city: newAddress.city,\r\n        country: newAddress.country,\r\n        district: newAddress.district,\r\n        homeno: newAddress.homeno,\r\n        landmark: newAddress.landmark,\r\n        pincode: newAddress.pincode.toString(),\r\n        state: newAddress.state\r\n      };\r\n\r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.currentUser.id)\r\n        .then(\r\n          (res) => {\r\n            if (res.success) {\r\n              this.toastService.toastMsg({\r\n                title: \"Success\",\r\n                content: \"Address Added Successfully!!!\",\r\n              })\r\n              this.addressArray = [];\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.status === 400) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Fill All Additional Address Details.\",\r\n              });\r\n            }\r\n          }\r\n        );\r\n\r\n    } else if (newAddress &&  newAddress.address && newAddress.city && newAddress.country && newAddress.district && newAddress.homeno && newAddress.landmark && newAddress.state) {\r\n      var addressData = {\r\n        id: newAddress.id || \"\",\r\n        address: newAddress.address,\r\n        city: newAddress.city,\r\n        country: newAddress.country,\r\n        district: newAddress.district,\r\n        homeno: newAddress.homeno,\r\n        landmark: newAddress.landmark,\r\n        pincode:newAddress.pincode.toString(),\r\n        state: newAddress.state\r\n      };\r\n\r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.currentUser.id)\r\n        .then(\r\n          (res) => {\r\n            if (res.success) {\r\n              this.toastService.toastMsg({\r\n                title: \"Success\",\r\n                content: \"Address Added Successfully!!!\",\r\n              })\r\n              this.addressArray = [];\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.status === 400) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Fill All Additional Address Details.\",\r\n              });\r\n            }\r\n          }\r\n        );\r\n\r\n    }\r\n  }\r\n\r\n  addDetails() {\r\n    this.partnerSubmitted = true\r\n    if (this.businessForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      let partner = {\r\n        \"documentNumber\": this.businessForm.value?.documentNumber,\r\n        \"licenceAndCertificate\": this.businessForm.value?.licenceAndCertificate,\r\n      }\r\n      this.additionaDetailsData.push(partner);\r\n      this.additionaList.push(partner);\r\n      this.businessForm.reset();\r\n    }\r\n  }\r\n\r\n  addDetailsAPI() {\r\n    if (this.businessForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else if (!(this.businessForm.value?.documentNumber === \"\" || this.businessForm.value?.documentNumber === null) && !(this.businessForm.value?.licenceAndCertificate === \"\" || this.businessForm.value?.licenceAndCertificate === null)) {\r\n      let partner = {\r\n        \"documentNumber\": this.businessForm.value?.documentNumber,\r\n        \"licenceAndCertificate\": this.businessForm.value?.licenceAndCertificate,\r\n      }\r\n      this.additionaList.push(partner);\r\n      this.profileService.addLicDocument(this.additionaList, this.currentUser.id).then((res) => {\r\n        if (res.success) {\r\n          this.businessForm.reset();\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  addPartner(event: KeyboardEvent): void {\r\n    if (event) {\r\n      event.preventDefault(); // Prevent the default behavior of the Enter key\r\n    }\r\n    this.partnerSubmitted = true\r\n    if (this.businessForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Requirted Fields.\",\r\n      });\r\n    }\r\n    else {\r\n      let partner = {\r\n        \"position\": this.businessForm.value?.position,\r\n        \"nameOfPartner\": this.businessForm.value?.nameOfPartner,\r\n      }\r\n      this.partnerDetails.push(partner);\r\n      this.partners.push(partner);\r\n      this.businessForm.reset();\r\n    }\r\n  }\r\n\r\n  openEditModal(i: number, partner: any): void {\r\n    const dialogRef = this.dialog.open(EditBusinessPartnerModalComponent, {\r\n      width: '400px',\r\n      data: { position: partner.position, nameOfPartner: partner.nameOfPartner, businessType: this.ProfileForm.value?.businessType, partnerId: partner.id }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.getallPartnerList()\r\n        // Update the edited partner in the partnerForms array\r\n        let partner = this.businessForm[i].patchValue({\r\n          position: result.position,\r\n          nameOfPartner: result.nameOfPartner,\r\n        });\r\n        this.partnerDetails.push(partner);\r\n      }\r\n    });\r\n  }\r\n\r\n  addBusinessPartners() {\r\n    if (this.businessForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Requirted Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else if (!(this.businessForm.value.position === \"\" || this.businessForm.value.position === null) && !(this.businessForm.value.nameOfPartner === \"\" || this.businessForm.value.nameOfPartner === null)) {\r\n      let partner = {\r\n        \"position\": this.businessForm.value?.position,\r\n        \"nameOfPartner\": this.businessForm.value?.nameOfPartner,\r\n      }\r\n      this.partners.push(partner);\r\n    }\r\n    this.profileService.addBusinessPartners(this.partners, this.currentUser.id).then((res) => {\r\n      if (res.success) {\r\n        this.partners = []\r\n        this.addDetailsAPI()\r\n        this.businessForm.reset();\r\n        this.updated = true;\r\n      }\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  deletePartner(partnerId) {\r\n    this.profileService.deletePartner({}, this.currentUser.id, partnerId).then((res) => {\r\n      this.getallPartnerList()\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Partner Deleted Successfully!!!\",\r\n      })\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  isInvalidDate(event) {\r\n    let test = event.target.value;\r\n\r\n    if (test == \"Invalid date\") {\r\n      event.target.value = formatDate(new Date(), \"DD/MM/\", \"en\"); // Change it here\r\n    }\r\n  }\r\n\r\n  /**\r\n   * update multiple address by addressId\r\n   * @param item\r\n   */\r\n  updateMultipleAddress(item) {\r\n    let data = {\r\n      homeno: item.value.homeno ? item.value.homeno : \"\",\r\n      landmark: item.value.landmark ? item.value.landmark : \"\",\r\n      district: item.value.district ? item.value.district : \"\",\r\n      pincode: item.value.pincode ? item.value.pincode : \"\",\r\n      address: item.value.address ? item.value.address : \"\",\r\n      city: item.value.city ? item.value.city : \"\",\r\n      state: item.value.state ? item.value.state : \"\",\r\n      country: item.value.country ? item.value.country : \"\",\r\n    };\r\n    this.profileService\r\n      .updateMultipleAddress(data, item.value.id)\r\n      .then((res) => {\r\n        if (res) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Address Updated Successfully!!!\",\r\n          })\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Delete Addresses by addressId\r\n   * @param item\r\n   */\r\n  deleteAddress(item) {\r\n    this.profileService.deleteAddressById({}, item.value.id).then((res) => {\r\n      if (res) {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Address Deleted Successfully!!!\",\r\n        })\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Additional Place Of Business\r\n  addPlaceOfBusiness() {\r\n    if (this.businessPlaceAdd.valid) {\r\n      const addressData = this.businessPlaceAdd.value;\r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.shopId)\r\n        .then(\r\n          (res) => {\r\n            if (res.success) {\r\n              this.toastService.toastMsg({\r\n                title: \"Success\",\r\n                content: \"Address Added Successfully!!!\",\r\n              })\r\n            \r\n              this.businessPlaceAdd.reset();\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.status == 400) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Fill All Additional Address Details.\",\r\n              });\r\n            } else {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Something went wrong\",\r\n              });\r\n            }\r\n          }\r\n        );\r\n    } else {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update Mobile\r\n   */\r\n  updateMobile() {\r\n    let data = {\r\n      mobile: this.ProfileForm.controls.mobile.value,\r\n    };\r\n    this.profileService\r\n      .updateClientMobileOTP(data, this.currentUser.id)\r\n      .then((res) => {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"OTP Sent Successfully!!!\",\r\n        })\r\n      });\r\n  }\r\n\r\n  updateMobileNumber() {\r\n    let data = {\r\n      email: this.ProfileForm.controls.email.value,\r\n      mobile: this.ProfileForm.controls.mobile.value,\r\n      mobileotp: this.mobileOtp,\r\n    };\r\n    this.profileService.updateClientMobile(data).then((res) => {\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Mobile Number Verified Successfully!!!\",\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * add category name in categortNames array\r\n   * @param event\r\n   */\r\n  add(event: MatChipInputEvent): void {\r\n    let input = event.input;\r\n    let value = event.value;\r\n    // Add our category\r\n    if ((value || \"\").trim()) {\r\n      this.typeList.push(value.trim());\r\n    }\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = \"\";\r\n    }\r\n    this.categoryCtrl.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * remove/delete selected category\r\n   * @param category\r\n   */\r\n  remove(category: any): void {\r\n    let index = this.categoryName.indexOf(category);\r\n    if (index >= 0) {\r\n      this.categoryName.splice(index, 1);\r\n      this.categoryId.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * called when category selected from dropdown\r\n   * @param event\r\n   */\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    let newValue = event.option.viewValue;\r\n    if (this.categoryName.includes(newValue)) {\r\n      this.categoryName = [\r\n        ...this.categoryName.filter((category) => category !== newValue),\r\n      ];\r\n    } else {\r\n      this.categoryName.push(event.option.viewValue);\r\n    }\r\n    this.categoryInput.nativeElement.value = \"\";\r\n\r\n    // keep the autocomplete opened after each item is picked.\r\n    requestAnimationFrame(() => {\r\n      this.openAuto(this.matACTrigger);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * open category dropdown panel\r\n   * @param trigger\r\n   */\r\n  openAuto(trigger: MatAutocompleteTrigger) {\r\n    trigger.openPanel();\r\n    this.categoryInput.nativeElement.focus();\r\n  }\r\n\r\n  searchCategoryByCategory(categoryInput) {\r\n    this.profileService.getCategoryBySearch({}, categoryInput).then((res) => {\r\n      this.serachByCategory = res.data;\r\n    });\r\n  }\r\n  /**\r\n   * Get all categories\r\n   */\r\n  getBusinessCategory() {\r\n    this.profileService.getBuisnessCategoryAll({}).then((res) => {\r\n      this.categoryBusiness = res.data.rows;\r\n      this.filteredCategory = this.categoryCtrl.valueChanges.pipe(\r\n        startWith(\"\"),\r\n        map((name) =>\r\n          name ? this.filterNames(name) : this.categoryBusiness.slice()\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * filter search category names\r\n   * @param name\r\n   * @returns\r\n   */\r\n  private filterNames(name: string): string[] {\r\n    return this.categoryBusiness.filter((list) => {\r\n      list.category.toLowerCase().indexOf(name) === 0\r\n    }\r\n    );\r\n  }\r\n\r\n  public array = [];\r\n  getCategoryId(list) {\r\n    this.array.push(list.id);\r\n    this.categoryId = this.array.filter(\r\n      (item, index, self) => self.indexOf(item) === index\r\n    );\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  signatureDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  signatureDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  signatureLoad() {\r\n    this.imageLoaded = true;\r\n  }\r\n\r\n  signatureDrop(e) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n  }\r\n\r\n  signatureChange(e) {\r\n    var pattern = /image-*/;\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    const fileSizeLimit = 1 * 1024 * 1024; // 6 MB\r\n    if (!file.type.match(pattern)) {\r\n      alert(\"invalid format\");\r\n      return;\r\n    }\r\n    if (file.size > fileSizeLimit) {\r\n      alert(\"File size exceeds the limit. Please select a smaller image (up to 1 MB).\");\r\n      return;\r\n    }\r\n    this.loaded = false;\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        this.signImg = reader.result;\r\n      };\r\n      if (file === null) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Please Select Image To Upload.\",\r\n        });\r\n      } else {\r\n        formdata.set(\"uploadSignature\", file);\r\n        e.srcElement.value = \"\";\r\n        this.profileService\r\n          .signatureImgAPI(formdata, this.currentUser.id)\r\n          .then((res) => {\r\n            this.toastService.toastMsg({\r\n              title: \"Success\",\r\n              content: \"Image Uploaded Successfully!!!\",\r\n            })\r\n          \r\n          },\r\n            (err) => {\r\n            })\r\n        this.loaded = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  handleDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  handleDrop(e) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n    this.handleInputChange(e);\r\n  }\r\n\r\n  handleImageLoad() {\r\n    this.imageLoaded = true;\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    var pattern = /image-*/;\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    const fileSizeLimit = 1 * 1024 * 1024; // 6 MB\r\n    if (!file.type.match(pattern)) {\r\n      alert(\"invalid format\");\r\n      return;\r\n    }\r\n    if (file.size > fileSizeLimit) {\r\n      alert(\"File size exceeds the limit. Please select a smaller image (up to 1 MB).\");\r\n      return;\r\n    }\r\n   \r\n    this.loaded = false;\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        this.profilePic = reader.result;\r\n      };\r\n      if (file == null) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Please Select Image To Upload.\",\r\n        });\r\n      } else {\r\n        formdata.set(\"upload\", file);\r\n        e.srcElement.value = \"\";\r\n        this.profileService\r\n          .postProfileImage(formdata, this.currentUser.id)\r\n          .then((res) => {\r\n            this.toastService.toastMsg({\r\n              title: \"Success\",\r\n              content: \"Image Uploaded Successfully!!!\",\r\n            })\r\n            this.partyService.notifyPartyAdded();\r\n          });\r\n        this.loaded = true;\r\n      }\r\n    }\r\n  }\r\n  // }\r\n\r\n  deleteProfilePic() {\r\n    // Clear the profilePic value\r\n    this.profilePic = '';\r\n    let formdata = new FormData();\r\n    formdata.set(\"upload\", null); // Sending an empty file or null to indicate deletion\r\n    this.profileService.deleteProfileImg(formdata, this.currentUser.id)\r\n      .then((res) => {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Image Deleted Successfully!!!\",\r\n        })\r\n        this.partyService.notifyPartyAdded();\r\n        this.profilePic = null; // Clear the profilePic value\r\n        this.loaded = true;\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n\r\n  deleteSignature() {\r\n    // Clear the profilePic value\r\n    this.signImg = '';\r\n    let formdata = new FormData();\r\n    formdata.set(\"uploadSignature\", null);\r\n    this.profileService\r\n      .deleteSignature(formdata, this.currentUser.id)\r\n      .then((res) => {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Image Deleted Successfully!!!\",\r\n        })\r\n        this.signImg = null;\r\n        this.loaded = true;\r\n      },\r\n        (err) => {\r\n        })\r\n  }\r\n\r\n  openDatePicker() {\r\n    const selectedDate = this.ProfileForm.get('bookBeginningFrom').value;\r\n    // Check if selectedDate is a Date object\r\n    if (selectedDate instanceof Date && !isNaN(selectedDate.getTime())) {\r\n      // If it's a valid Date, continue with your logic\r\n      console.log('Selected Date:', selectedDate);\r\n    } else {\r\n      // If selectedDate is not a valid Date, set a default date or any valid date here\r\n      this.ProfileForm.get('bookBeginningFrom').setValue(new Date());\r\n    }\r\n  }  \r\n\r\n  openDatepicker1() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.ProfileForm.get('financialYearFrom').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.ProfileForm.get('financialYearFrom').setValue(new Date());\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- Fixed navigation panel -->\r\n<div class=\"container-fluid pt-3\">\r\n    <div class=\"fixed-nav-panel row\">\r\n        <div class=\"nav-panel-header col-lg-3\">\r\n            <label class=\"form-label mb-3\" style=\"font-size: 20px; font-weight: 500;\">\r\n                Business Settings\r\n            </label>\r\n        </div>\r\n        <div class=\"nav-panel-actions headerButtons col-lg-9\">\r\n            <div class=\"nav-panel-btns\">\r\n                <!-- <button mat-raised-button class=\"text-nowrap text-white\" style=\"background: #110152;\"\r\n                        routerLink=\"/pages/add-new-trade\">Add New Trade</button> -->\r\n                <button mat-stroked-button class=\"text-nowrap\"\r\n                    style=\"background: rgb(64, 156, 193, 0.3); color: rgb(29, 145, 174)\">\r\n                    <i class=\"fas fa-comment\"></i>\r\n                    Chat Support</button>\r\n                <button mat-raised-button class=\"text-nowrap\" style=\"border: 1px solid #000;\"\r\n                    routerLink=\"/pages/shop-landing/shop-profile-setting/shop-profile\">Cancel</button>\r\n                    <!-- routerLink=\"/pages/warehouse-landing/warehouse-profile\" *appHasPermission=\"['modify']; name 'profile'\">Cancel</button> -->\r\n                <button mat-raised-button class=\"text-nowrap text-light\" style=\"background: #a0a0a0;\"\r\n                    (click)=\"updateUserProfile()\" type=\"submit\">Save Changes</button>\r\n                    <!-- (click)=\"updateUserProfile()\" type=\"submit\" *appHasPermission=\"['modify']; name 'profile'\">Save Changes</button> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <hr style=\"background-color: black;font-weight: bold;\">\r\n\r\n    <form [formGroup]=\"ProfileForm\" autocomplete=\"off\">\r\n        <!-- Profile options -->\r\n        <div class=\"profile-options row\">\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 pe-4\">\r\n                <div class=\"row mb-5\">\r\n                    <div class=\"col-lg-4 col-md-12 col-sm-12\">\r\n                        <div class=\"image-wrapper\">\r\n                            <label class=\"profile-pic\" ondragover=\"return false;\" [class.loaded]=\"loaded\"\r\n                                [style.outlineColor]=\"dragging ? activeColor : baseColor\"\r\n                                (dragenter)=\"handleDragEnter()\" (dragleave)=\"handleDragLeave()\"\r\n                                (drop)=\"handleDrop($event)\">\r\n                                <img [src]=\"profilePic ? profilePic : '/assets/images/default-profile-pic.JPG'\"\r\n                                    (load)=\"handleImageLoad()\" [class.loaded]=\"imageLoaded\" class=\"shadow-sm\" />\r\n                                <input type=\"file\" name=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\">\r\n                            </label>\r\n                            <button *ngIf=\"profilePic\" class=\"delete-button\" type=\"button\" (click)=\"deleteProfilePic()\">\r\n                                <i class=\"bi bi-x bi-sm\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <label class=\"d-flex justify-content-center form-label\">Add Profile Pic</label>\r\n                    </div>\r\n                    <div class=\"col-lg-2\"></div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Admin Name<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required formControlName=\"firstName\" maxLength=\"50\"\r\n                                placeholder=\"First Name\" [ngClass]=\"{\r\n                                'is-invalid': (f.firstName.invalid && f.firstName.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.firstName.touched) && f.firstName.errors?.required\">\r\n                            First Name is Required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.firstName.touched) && f.firstName.errors?.pattern\">\r\n                            Only Characters Allowed.\r\n                        </mat-error>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\" col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Email Address<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"email\" readonly matInput required formControlName=\"email\" placeholder=\"Email\"\r\n                                [ngClass]=\"{\r\n                                'is-invalid': (f.email.invalid && f.email.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.email.touched) && f.email.errors?.required\">\r\n                            Email is required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.email.touched) && f.email.errors?.pattern\">\r\n                            Email must be a valid email address.\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\" col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Mobile Number<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                            <input type=\"text\" matInput formControlName=\"mobile\" minlength=\"9\" maxlength=\"9\"\r\n                                (keypress)=\"numberOnly($event)\" placeholder=\"Mobile Number\" [ngClass]=\"{\r\n                                    'is-invalid': (f.mobile.invalid && f.mobile.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.required\">\r\n                            Mobile Number is required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.minlength\">\r\n                            Mobile Number must be 9-digits only\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.maxlength\">\r\n                            Mobile Number must be 9-digits only\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <div><label class=\"form-label ms-2\">{{ lang.GSTIN }}<span\r\n                                    class=\"error-asterisk\">*</span></label></div>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 85%;\">\r\n                            <input type=\"text\" matInput formControlName=\"gstinNo\" placeholder=\"{{lang.GSTIN }}\" #input1\r\n                                (keypress)=\"numberOnly($event)\" maxlength=\"15\"\r\n                                (keyup)=\"validateTRN($event.target.value)\"\r\n                                [ngClass]=\"{'is-invalid': (f.gstinNo.invalid && f.gstinNo.touched) && submitted }\"\r\n                                required>\r\n                        </mat-form-field>\r\n                        <mat-spinner *ngIf=\"isLoading\" diameter=\"30\"></mat-spinner>\r\n                        <mat-icon *ngIf=\"ProfileForm.controls.gstinNo.valid && !isLoading\"\r\n                            [ngClass]=\"{ 'gst-status-icon': true, 'active': !isDisabledGST }\">\r\n                            {{ !isDisabledGST ? '✓' : '✗' }}\r\n                        </mat-icon>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"(submitted && f.gstinNo.errors?.required)\">\r\n                            {{ lang.GSTIN }} is Required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"f.gstinNo.invalid && (f.gstinNo.dirty && f.gstinNo.touched)\">\r\n                            Please enter the valid {{ lang.GSTIN }} number\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"f.gstinNo.errors?.maxlength\">\r\n                            {{ lang.GSTIN }} must be of 15-digits\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"f.gstinNo.errors?.minlength\">\r\n                            {{ lang.GSTIN }} must be of 15-digits\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"f.gstinNo.errors?.pattern\">\r\n                            {{ lang.GSTIN }} must be valid number\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\"\r\n                        *ngIf=\"(ProfileForm.get('businessType').value =='Private Limited Company' || ProfileForm.get('businessType').value =='Public Limited Company') && isShown\">\r\n                        <label class=\"form-label ms-2\">CIN<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"cinNumber\"\r\n                                (keyup)=\"validatecinNumber($event.target.value)\" #input1\r\n                                (input)=\"input1.value=$event.target.value.toUpperCase()\" placeholder=\"CIN\"\r\n                                [ngClass]=\"{'is-invalid': (f.cinNumber.invalid && f.cinNumber.touched) && submitted }\"\r\n                                required>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"f.cinNumber.errors?.required\">\r\n                            CIN is Required!\r\n                        </mat-error>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"f.gstinNo.invalid && (f.cinNumber.dirty && f.cinNumber.touched)\">\r\n                            Please enter the valid CIN number\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.cinNumber.touched) && f.cinNumber.errors?.pattern\">\r\n                            CIN pattern is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\"\r\n                        *ngIf=\"ProfileForm.get('businessType').value =='Proprietorship' || ProfileForm.get('businessType').value =='Hindu Undivided Family' && isShown\">\r\n                        <label class=\"form-label ms-2\">Legal Name<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"legalName\"\r\n                                placeholder=\"Legal Name\" [ngClass]=\"{\r\n                                    'is-invalid': (f.legalName.invalid && f.legalName.touched) && submitted }\" requied>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors\">\r\n                            Legal name must be in Alphabets\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors?.required\">\r\n                            Legal Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <label class=\"form-label ms-2\">Financial Year Start From<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matInput bsDatepicker placeholder=\"Financial Year From\" [maxDate]=\"today\"\r\n                                formControlName=\"financialYearFrom\" style=\"text-transform:uppercase!important;\"\r\n                                bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue',\r\n                          dateInputFormat: 'DD MMM YYYY',\r\n                          showWeekNumbers:false }\" (click)=\"openDatePicker()\" autocomplete=\"off\" [ngClass]=\"{\r\n                            'is-invalid': (f.financialYearFrom.invalid && f.financialYearFrom.touched) && submitted }\">\r\n                            <span>\r\n                                <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                            </span>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.financialYearFrom.touched) && f.financialYearFrom.errors?.required\">\r\n                            financialYearFrom is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12\">\r\n                        <label class=\"form-label ms-2\" for=\"billingAddress\">Billing Address<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <textarea matNativeControl matInput required type=\"text\" formControlName=\"address\" row=\"2\"\r\n                                placeholder=\"Billing Address\" [ngClass]=\"{\r\n                                'is-invalid': (f.address.invalid && f.address.touched) && submitted }\"\r\n                                required></textarea>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                            Billing Address is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">State<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select required formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\"\r\n                                [ngClass]=\"{\r\n                              'is-invalid': (f.state.invalid && f.state.touched) && submitted }\">\r\n                                <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{ state }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                            State is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n\r\n                        <label class=\"form-label ms-2\">City<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                                placeholder=\"City\" [ngClass]=\"{\r\n                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                            District is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Country<span class=\"error-asterisk\">*</span></label>\r\n\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n\r\n\r\n                            <input matNativeControl matInput required type=\"text\" value=\"UAE\" placeholder=\"Country\"\r\n                                [ngClass]=\"{ 'is-invalid': (f.country.invalid && f.country.touched) && submitted }\">\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 ps-4\">\r\n                <div class=\"row mb-3\">\r\n\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <!-- <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown && ProfileForm.get('gstType').value =='Composite'\"> -->\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Trade Name<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput formControlName=\"tradeName\" placeholder=\"Trade Name\" maxlength=\"100\"\r\n                                [ngClass]=\"{\r\n                                    'is-invalid': (f.tradeName.invalid && f.tradeName.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.tradeName.touched) && f.tradeName.errors?.required\">\r\n                            Trade Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <label class=\"form-label ms-2\">Constitution of Business<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select formControlName=\"businessType\" matNativeControl matInput disableOptionCentering\r\n                                placeholder=\"Constitution of Business\" [ngClass]=\"{\r\n                                    'is-invalid': (f.businessType.invalid && f.businessType.touched) && submitted }\">\r\n                                <mat-option *ngFor=\"let item of uaeCosntBusiness\" [value]=\"item\">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessType.touched) && f.businessType.errors?.required\">\r\n                            Constitution of Business is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Account Method<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering required\r\n                                formControlName=\"accountMethod\" placeholder=\"Account Method\" [ngClass]=\"{\r\n                                    'is-invalid': (f.accountMethod.invalid && f.accountMethod.touched) && submitted }\"\r\n                                required>\r\n                                <mat-option value=\"Accounts\">Only Accounts</mat-option>\r\n                                <mat-option value=\"Accounts With Stock Management\">Accounts With Stock\r\n                                    Management</mat-option>\r\n                                <!-- <option value=\"Both\">Both</option> -->\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.accountMethod.touched) && f.accountMethod.errors?.required\">\r\n                            Account Method is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <label class=\"form-label ms-2\">Business Type(Select multiple, if applicable)<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering\r\n                                formControlName=\"businessNature\" placeholder=\"Business Type\" multiple\r\n                                [ngClass]=\"{'is-invalid': (f.businessNature.invalid && f.businessNature.touched) && submitted }\"\r\n                                required>\r\n                                <mat-option *ngFor=\"let type of typeList\" [value]=\"type.id\">{{type.businessType}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessNature.touched) && f.businessNature.errors?.required\">\r\n                            Business Type is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <label class=\"form-label ms-2\">Business Category<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-chip-list #chipList aria-label=\"category selection\" [multiple]=\"true\">\r\n                                <mat-chip *ngFor=\"let category of categoryName\" [selectable]=\"category=='Education'\"\r\n                                    [removable]=\"removable\" (removed)=\"remove(category)\">\r\n                                    {{category}}\r\n                                    <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                                </mat-chip>\r\n                                <input placeholder=\"Business Category\" #categoryInput\r\n                                    #autocompleteTrigger=\"matAutocompleteTrigger\" [formControl]=\"categoryCtrl\"\r\n                                    [matAutocomplete]=\"auto\" [matChipInputFor]=\"chipList\"\r\n                                    (click)=\"openAuto(autocompleteTrigger)\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    (matChipInputTokenEnd)=\"add($event)\" [ngClass]=\"{\r\n                                        'is-invalid': (categoryCtrl.invalid && categoryCtrl.touched) && submitted }\">\r\n                            </mat-chip-list>\r\n                            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n                                <mat-option *ngFor=\"let item of filteredCategory | async\" [value]=\"item.id\"\r\n                                    (onSelectionChange)=\"getCategoryId(item)\">\r\n                                    <mat-checkbox color=\"primary\" style=\"padding: 0 12px;\"\r\n                                        [checked]=\"categoryName.indexOf(item.category) >=0\"></mat-checkbox>\r\n                                    {{item.category}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <a mat-icon-button matSuffix style=\"width: 34px; height: 34px;\"\r\n                                (click)=\"openAuto(autocompleteTrigger)\">\r\n                                <mat-icon style=\"width: 34px;\">expand_more</mat-icon>\r\n                            </a>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || categoryCtrl.touched) && categoryCtrl.errors?.required\">\r\n                            Category is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <!-- for partener table -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Partnership'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            Partner Details\r\n                        </label>\r\n                        <div class=\"\">\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Name of Partner\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td style=\"vertical-align: middle;\"></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <mat-select placeholder=\"Position\" formControlName=\"position\"\r\n                                                        [value]=\"'Partner'\">\r\n                                                        <mat-option [value]=\"'Managing Partner'\">Managing\r\n                                                            Partner</mat-option>\r\n                                                        <mat-option [value]=\"'Partner'\" selected>Partner</mat-option>\r\n                                                    </mat-select>\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name Of Partner\"\r\n                                                        formControlName=\"nameOfPartner\"\r\n                                                        (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- for LLP  -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Limited Liability Partnership'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            LLP Details\r\n                        </label>\r\n                        <div class=\"\">\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Name of Partner\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <mat-select placeholder=\"Position\" formControlName=\"position\"\r\n                                                        [value]=\"'Partner'\">\r\n                                                        <mat-option [value]=\"'Managing Partner'\">Managing\r\n                                                            Partner</mat-option>\r\n                                                        <mat-option [value]=\"'Partner'\" selected>Partner</mat-option>\r\n                                                    </mat-select>\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name Of Partner\"\r\n                                                        formControlName=\"nameOfPartner\"\r\n                                                        (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- for private limited -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Private Limited Company'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            Private Limited Company Details\r\n                        </label>\r\n                        <div class=\"\">\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Name of Director\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td style=\"vertical-align: middle;\"></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name Of Director\"\r\n                                                        formControlName=\"nameOfPartner\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Position\"\r\n                                                        formControlName=\"position\" (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- for public limited -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Public Limited Company'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            Public Limited Company Details\r\n                        </label>\r\n                        <div>\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Name of Director\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td style=\"vertical-align: middle;\"></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name Of Director\"\r\n                                                        formControlName=\"nameOfPartner\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Position\"\r\n                                                        formControlName=\"position\" (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- for hindu  undidvided family -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Hindu Undivided Family'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            HUF Details\r\n                        </label>\r\n                        <div>\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Members</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td style=\"vertical-align: middle;\"></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <mat-select placeholder=\"Position\" formControlName=\"position\"\r\n                                                        [value]=\"'Karta'\">\r\n                                                        <mat-option [value]=\"'Karta'\">Karta</mat-option>\r\n                                                        <mat-option [value]=\"'Member'\">Member</mat-option>\r\n                                                    </mat-select>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name of Member\"\r\n                                                        formControlName=\"nameOfPartner\"\r\n                                                        (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div class=\"form-check form-switch mb-3\" style=\"padding-left: 3.7rem;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"toggleAdditionalFields\"\r\n                            (change)=\"toggleAdditionalFields()\">\r\n                        <label class=\"form-check-label\" for=\"toggleAdditionalFields\" *ngIf=\"showAdditionalFields\"><b\r\n                                style=\"font-size: 14px; font-weight:500\">Show Additional Fields</b></label>\r\n                        <label class=\"form-check-label\" for=\"toggleAdditionalFields\" *ngIf=\"!showAdditionalFields\"\r\n                            style=\"font-size: 14px;\">Show\r\n                            Additional Fields</label>\r\n                    </div>\r\n\r\n                    <div class=\"mb-3 pb-1\" *ngIf=\"showAdditionalFields\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            Additional Fields\r\n                        </label>\r\n                        <div>\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">\r\n                                                    License/Certificate </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Document Number\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Print in Sale\r\n                                                    Invoice</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let item of additionaDetailsData; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ item.licenceAndCertificate }}\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">{{ item.documentNumber }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                <td class=\"flex d-flex flex-row\"\r\n                                                    style=\"justify-content: center; align-items: center; vertical-align: middle;\">\r\n                                                    <div class=\"form-check form-switch mb-0\">\r\n                                                        <input class=\"form-check-input text-center\" id=\"customSwitch1\"\r\n                                                            type=\"checkbox\" />\r\n                                                    </div>\r\n                                                </td>\r\n                                </div>\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style=\"vertical-align: middle;\"></td>\r\n                                    <td style=\"vertical-align: middle;\">\r\n                                        <input matInput type=\"text\" placeholder=\"License/Certificate\"\r\n                                            formControlName=\"licenceAndCertificate\">\r\n                                    </td>\r\n                                    <td style=\"vertical-align: middle;\">\r\n                                        <input matInput type=\"text\" placeholder=\"Document Number\"\r\n                                            formControlName=\"documentNumber\" (keyup.enter)=\"addDetails()\">\r\n                                    </td>\r\n                                    <td style=\"vertical-align: middle;\">\r\n                                        <div class=\"\">\r\n                                    <td class=\"flex d-flex flex-row\"\r\n                                        style=\"justify-content: center; align-items: center; vertical-align: middle;\">\r\n                                        <div class=\"form-check form-switch mb-0\">\r\n                                            <input class=\"form-check-input text-center\" id=\"customSwitch1\"\r\n                                                type=\"checkbox\" />\r\n                                        </div>\r\n\r\n                                    </td>\r\n                        </div>\r\n                        </td>\r\n                        </tr>\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n    </form>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n\r\n<!-- <div class=\"row mb-3\">\r\n    <div class=\"col-sm-12 col-md-12\">\r\n        <div class=\"notes-section\">\r\n            <p class=\"notes-textarea text-black\" style=\"background: #e4e3e6;\">\r\n                <b>Note:</b> Terms & condition and Signature added below will be shown on your invoices.\r\n            </p>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-12 col-md-12 ps-2\">\r\n        <div class=\"terms-section\">\r\n\r\n        </div>\r\n        <label class=\"form-label ms-2\">Terms & Conditions</label>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <textarea matInput required rows=\"3\" placeholder=\"Terms & Conditions\">\r\n                       1. Goods once sold will not be taken back or exchanged.\r\n                    </textarea>\r\n            <!-- 1. Goods once sold will not be taken back or exchanged. -->\r\n        <!-- </mat-form-field>\r\n    </div>\r\n</div> --> \r\n\r\n<!-- <div class=\"row mb-3\">\r\n    <div class=\"col-md-5 col-lg-5 col-sm-6\">\r\n        <div class=\"image-wrapper\">\r\n            <label class=\"signature-img\" ondragover=\"return false;\" [class.loaded]=\"loaded\"\r\n                (dragenter)=\"signatureDragEnter()\" (dragleave)=\"signatureDragLeave()\" (drop)=\"signatureDrop($event)\">\r\n                <i class=\"bi bi-plus-lg fs--1\">Add Signature</i>\r\n                <img *ngIf=\"signImg\" [src]=\"signImg\" (load)=\"signatureLoad()\" [class.loaded]=\"imageLoaded\" />\r\n                <input #fileInput type=\"file\" name=\"file\" accept=\"image/*\" (change)=\"signatureChange($event)\" hidden>\r\n            </label>\r\n            <button *ngIf=\"signImg\" class=\"delete-button\" (click)=\"deleteSignature()\">\r\n                <i class=\"bi bi-x bi-sm\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n</div>\r\n\r\n</div>\r\n<hr class=\"my-3\">\r\n<div class=\"mb-3\" *appHasPermission=\"['read']; name: 'profile'\">\r\n    <form [formGroup]=\"addressForm\">\r\n        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n            Add multiple Business Addresses\r\n        </label>\r\n        <div>\r\n            <div formArrayName=\"addresses\" *ngFor=\"let item of addressControls.controls; let i = index\">\r\n                <div [formGroupName]=\"i\" class=\"row\">\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Pincode<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required\r\n                                (input)=\"getPincodeDetailsForAdditionalAddress($event.target.value,i)\" maxlength=\"6\"\r\n                                minlength=\"6\" formControlName=\"pincode\"  (keypress)=\"numberOnly($event)\" placeholder=\"Pincode\" [ngClass]=\"{\r\n                                    'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\" value=\"\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                            Pincode is Required !\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                            Pincode should be only digits.\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">State<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput disableOptionCentering required type=\"text\" ngxOnlyString\r\n                                formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\" [ngClass]=\"{\r\n                                'is-invalid': (f.state.invalid && f.state.touched) && submitted }\" value=\"\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                            State is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">District<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                                placeholder=\"District\" [ngClass]=\"{\r\n                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                            District is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Country<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"country\"\r\n                                placeholder=\"Country\" [ngClass]=\"{\r\n                            'is-invalid': (f.country.invalid && f.country.touched) && submitted }\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                            Country is Required!\r\n                        </mat-error>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Town/City<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"city\"\r\n                                placeholder=\"Town/City\" [ngClass]=\"{\r\n                            'is-invalid': (f.city.invalid && f.city.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.city.touched) && f.city.errors?.required\">\r\n                            Town/City is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">House No<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"homeno\"\r\n                                placeholder=\"House No,Apartment,Building,Company\" [ngClass]=\"{\r\n                            'is-invalid': (f.homeno.invalid && f.homeno.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.homeno.touched) && f.homeno.errors?.required\">\r\n                            House No is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Area, Street, Sector, Village<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"address\"\r\n                                placeholder=\"Area\" [ngClass]=\"{\r\n                            'is-invalid': (f.address.invalid && f.address.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                            Area, Street, Sector, Village is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Landmark<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"landmark\"\r\n                                placeholder=\"Landmark\" [ngClass]=\"{\r\n                                'is-invalid': (f.landmark.invalid && f.country.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.landmark.touched) && f.landmark.errors?.required\">\r\n                            Landmark is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"\">\r\n                        <div class=\"d-flex justify-content-center\">\r\n                            <div *ngIf=\"item.value.id\">\r\n                                <button class=\"btn btn-save mb-1\" type=\"button\" style=\"margin-right: 10px;\"\r\n                                    *appHasPermission=\"['modify']; name: 'profile'\"\r\n                                    (click)=\"updateMultipleAddress(item)\">\r\n                                    Update\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"button\" class=\"btn btn-cancel\" *ngIf=\"item.value.id\"\r\n                                    (click)=\"deleteAddressForm(i)\">\r\n                                    -\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-end pb-4\">\r\n                <button type=\"button\" class=\"btn btn-cancel\" style=\"margin-right: 10px\" (click)=\"addAddress()\">\r\n                    +\r\n                </button>\r\n\r\n                <button class=\"btn btn-save\" type=\"button\" *appHasPermission=\"['modify']; name: 'profile'\"\r\n                    (click)=\"addMultipleAddress()\">\r\n                    Add\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n</form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shop-profile',\r\n  templateUrl: './shop-profile.component.html',\r\n  styleUrls: ['./shop-profile.component.scss']\r\n})\r\nexport class ShopProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>shop-profile works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ShopProfileSettingsComponent } from './components/shop-profile-settings/shop-profile-settings.component';\r\nimport { ShopProfileComponent } from './components/shop-profile/shop-profile.component';\r\nimport { ShopSettingsComponent } from './shop-settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: ShopSettingsComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'shop-profile-settings',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'shop-profile-settings',\r\n        component: ShopProfileSettingsComponent,\r\n      }, \r\n      {\r\n        path:'shop-profile',\r\n        component: ShopProfileComponent,\r\n      }, \r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ShopSettingsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shop-settings',\r\n  templateUrl: './shop-settings.component.html',\r\n  styleUrls: ['./shop-settings.component.scss']\r\n})\r\nexport class ShopSettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ShopSettingsRoutingModule } from './shop-settings-routing.module';\r\nimport { ShopSettingsComponent } from './shop-settings.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ShopProfileComponent } from './components/shop-profile/shop-profile.component';\r\nimport { ShopProfileSettingsComponent } from './components/shop-profile-settings/shop-profile-settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShopSettingsComponent,\r\n    ShopProfileComponent,\r\n    ShopProfileSettingsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ShopSettingsRoutingModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,    \r\n    FormsModule,\r\n    // SharedModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class ShopSettingsModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}