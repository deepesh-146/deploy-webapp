{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_7__","$event","ctx_r63","_r66","_r62","ctx_r20","ShopProfileSettingsComponent","profileService","partyService","fb","cdr","router","commonService","toastService","titleCasePipe","dialog","src_assets_langTranslation_language_translation__WEBPACK_IMPORTED_MODULE_0__","value","Date","setDate","getDate","label","getMonth","JSON","parse","localStorage","getItem","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_8__","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","today","maxDate","getFullYear","TradeForm","group","ProfileForm","firstName","legalName","businessType","email","mobile","gstType","gstStatus","gstinNo","state","city","disabled","pincode","district","landmark","country","homeno","address","accountMethod","compositeType","businessNature","panNumber","tradeName","financialYearFrom","bookBeginningFrom","cinNumber","profileImage","signatureImage","getType","getBusinessCategory","getProfileData","addressForm","addresses","businessPlaceAdd","areaStreet","businessForm","position","nameOfPartner","licenceAndCertificate","documentNumber","error","setTimeout","detectChanges","getBusinessPartners","currentUser","id","then","res","partnerDetails","data","filter","additionaDetailsData","getAdditionaDetails","length","showAdditionalFields","cin","cinNo","toUpperCase","regex","test","controls","setErrors","incorrect","pan","panNo","TRN","isDisabledGST","get","push","createAddress","index","removeAt","i","checked","isShown","clearValidators","updateValueAndValidity","setValidators","ids","map","category","categoryBusiness","find","item","getUserProfile","shopId","basicdetails","_a","profilePic","constitutionBusinessType","additional","signImg","addSignature","otherAddresses","addressId","addressControls","isRegistered","toggleShow","businessNatureData","businessTypes","businesscategory","businessCategory","categoryName","getCategoryNamesFromIds","patchValue","totalPlaces","status","fullName","primaryAddress","moment__WEBPACK_IMPORTED_MODULE_1__","format","categoryCtrl","isLoading","getallPartnerList","valid","console","log","toastMsg","title","content","pin","getUserPincode","pinDetails","districtName","stateName","at","getTypes","response","typeList","submitted","registerdProfileData","categoryId","businesses","finalObject","updateUserprofile","success","addBusinessPartners","addDetailsAPI","navigate","err","ststus","newAddress","addressData","toString","postMultipleAddress","addressArray","partnerSubmitted","invalid","partner","_b","additionaList","reset","_c","_d","_e","_f","addLicDocument","expose","transform","error_message","event","preventDefault","partners","dialogRef","open","src_app_pages_Profile_profile_settings_edit_business_partner_modal_edit_business_partner_modal_component__WEBPACK_IMPORTED_MODULE_2__","width","partnerId","afterClosed","subscribe","result","updated","deletePartner","target","updateMultipleAddress","deleteAddressById","window","location","reload","updateClientMobileOTP","mobileotp","mobileOtp","updateClientMobile","input","trim","setValue","indexOf","splice","newValue","option","viewValue","includes","categoryInput","nativeElement","requestAnimationFrame","openAuto","matACTrigger","trigger","openPanel","focus","getCategoryBySearch","serachByCategory","getBuisnessCategoryAll","rows","filteredCategory","valueChanges","pipe","name","filterNames","slice","list","toLowerCase","array","self","charCode","which","keyCode","dragging","imageLoaded","e","pattern","formdata","FormData","reader","FileReader","file","files","fileSizeLimit","type","match","alert","size","loaded","readAsDataURL","onload","set","srcElement","signatureImgAPI","handleInputChange","postProfileImage","notifyPartyAdded","deleteProfileImg","deleteSignature","selectedDate","isNaN","getTime","selectors","viewQuery","ctx","ShopProfileComponent","decls","vars","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_shop_settings_component__WEBPACK_IMPORTED_MODULE_2__","children","redirectTo","pathMatch","_components_shop_profile_settings_shop_profile_settings_component__WEBPACK_IMPORTED_MODULE_0__","_components_shop_profile_shop_profile_component__WEBPACK_IMPORTED_MODULE_1__","routerLinkActiveOptions","exact","ShopSettingsRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_4__","imports","exports","ShopSettingsComponent","ShopSettingsModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_shop_settings_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","src_app_material_module__WEBPACK_IMPORTED_MODULE_2__","_angular_material_input__WEBPACK_IMPORTED_MODULE_8__","_angular_material_button__WEBPACK_IMPORTED_MODULE_9__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_10__","_angular_material_core__WEBPACK_IMPORTED_MODULE_11__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_12__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_13__","_angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_14__","_angular_forms__WEBPACK_IMPORTED_MODULE_15__","_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_16__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_17__","declarations","_shop_settings_component__WEBPACK_IMPORTED_MODULE_1__","_components_shop_profile_shop_profile_component__WEBPACK_IMPORTED_MODULE_3__","_components_shop_profile_settings_shop_profile_settings_component__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///src/app/pages/shop-module/components/shop-settings/components/shop-profile-settings/shop-profile-settings.component.html","webpack:///src/app/pages/shop-module/components/shop-settings/components/shop-profile-settings/shop-profile-settings.component.ts","webpack:///src/app/pages/shop-module/components/shop-settings/components/shop-profile/shop-profile.component.ts","webpack:///src/app/pages/shop-module/components/shop-settings/components/shop-profile/shop-profile.component.html","webpack:///src/app/pages/shop-module/components/shop-settings/shop-settings-routing.module.ts","webpack:///src/app/pages/shop-module/components/shop-settings/shop-settings.component.ts","webpack:///src/app/pages/shop-module/components/shop-settings/shop-settings.component.html","webpack:///src/app/pages/shop-module/components/shop-settings/shop-settings.module.ts"],"sourcesContent":["<!-- Fixed navigation panel -->\r\n<div class=\"container-fluid pt-3\">\r\n    <div class=\"fixed-nav-panel row\">\r\n        <div class=\"nav-panel-header col-lg-3\">\r\n            <label class=\"form-label mb-3\" style=\"font-size: 20px; font-weight: 500;\">\r\n                Business Settings\r\n            </label>\r\n        </div>\r\n        <div class=\"nav-panel-actions headerButtons col-lg-9\">\r\n            <div class=\"nav-panel-btns\">\r\n                <!-- <button mat-raised-button class=\"text-nowrap text-white\" style=\"background: #110152;\"\r\n                        routerLink=\"/pages/add-new-trade\">Add New Trade</button> -->\r\n                <button mat-stroked-button class=\"text-nowrap\"\r\n                    style=\"background: rgb(64, 156, 193, 0.3); color: rgb(29, 145, 174)\">\r\n                    <i class=\"fas fa-comment\"></i>\r\n                    Chat Support</button>\r\n                <button mat-raised-button class=\"text-nowrap\" style=\"border: 1px solid #000;\"\r\n                    routerLink=\"/pages/shop-landing/shop-profile-setting/shop-profile\">Cancel</button>\r\n                    <!-- routerLink=\"/pages/warehouse-landing/warehouse-profile\" *appHasPermission=\"['modify']; name 'profile'\">Cancel</button> -->\r\n                <button mat-raised-button class=\"text-nowrap text-light\" style=\"background: #a0a0a0;\"\r\n                    (click)=\"updateUserProfile()\" type=\"submit\">Save Changes</button>\r\n                    <!-- (click)=\"updateUserProfile()\" type=\"submit\" *appHasPermission=\"['modify']; name 'profile'\">Save Changes</button> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <hr style=\"background-color: black;font-weight: bold;\">\r\n\r\n    <form [formGroup]=\"ProfileForm\" autocomplete=\"off\">\r\n        <!-- Profile options -->\r\n        <div class=\"profile-options row\">\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 pe-4\">\r\n                <div class=\"row mb-5\">\r\n                    <div class=\"col-lg-4 col-md-12 col-sm-12\">\r\n                        <div class=\"image-wrapper\">\r\n                            <label class=\"profile-pic\" ondragover=\"return false;\" [class.loaded]=\"loaded\"\r\n                                [style.outlineColor]=\"dragging ? activeColor : baseColor\"\r\n                                (dragenter)=\"handleDragEnter()\" (dragleave)=\"handleDragLeave()\"\r\n                                (drop)=\"handleDrop($event)\">\r\n                                <img [src]=\"profilePic ? profilePic : '/assets/images/default-profile-pic.JPG'\"\r\n                                    (load)=\"handleImageLoad()\" [class.loaded]=\"imageLoaded\" class=\"shadow-sm\" />\r\n                                <input type=\"file\" name=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\">\r\n                            </label>\r\n                            <button *ngIf=\"profilePic\" class=\"delete-button\" type=\"button\" (click)=\"deleteProfilePic()\">\r\n                                <i class=\"bi bi-x bi-sm\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <label class=\"d-flex justify-content-center form-label\">Add Profile Pic</label>\r\n                    </div>\r\n                    <div class=\"col-lg-2\"></div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Admin Name<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required formControlName=\"firstName\" maxLength=\"50\"\r\n                                placeholder=\"First Name\" [ngClass]=\"{\r\n                                'is-invalid': (f.firstName.invalid && f.firstName.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.firstName.touched) && f.firstName.errors?.required\">\r\n                            First Name is Required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.firstName.touched) && f.firstName.errors?.pattern\">\r\n                            Only Characters Allowed.\r\n                        </mat-error>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\" col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Email Address<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"email\" readonly matInput required formControlName=\"email\" placeholder=\"Email\"\r\n                                [ngClass]=\"{\r\n                                'is-invalid': (f.email.invalid && f.email.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.email.touched) && f.email.errors?.required\">\r\n                            Email is required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.email.touched) && f.email.errors?.pattern\">\r\n                            Email must be a valid email address.\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\" col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Mobile Number<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                            <input type=\"text\" matInput formControlName=\"mobile\" minlength=\"9\" maxlength=\"9\"\r\n                                (keypress)=\"numberOnly($event)\" placeholder=\"Mobile Number\" [ngClass]=\"{\r\n                                    'is-invalid': (f.mobile.invalid && f.mobile.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.required\">\r\n                            Mobile Number is required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.minlength\">\r\n                            Mobile Number must be 9-digits only\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.maxlength\">\r\n                            Mobile Number must be 9-digits only\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <div><label class=\"form-label ms-2\">{{ lang.GSTIN }}<span\r\n                                    class=\"error-asterisk\">*</span></label></div>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 85%;\">\r\n                            <input type=\"text\" matInput formControlName=\"gstinNo\" placeholder=\"{{lang.GSTIN }}\" #input1\r\n                                (keypress)=\"numberOnly($event)\" maxlength=\"15\"\r\n                                (keyup)=\"validateTRN($event.target.value)\"\r\n                                [ngClass]=\"{'is-invalid': (f.gstinNo.invalid && f.gstinNo.touched) && submitted }\"\r\n                                required>\r\n                        </mat-form-field>\r\n                        <mat-spinner *ngIf=\"isLoading\" diameter=\"30\"></mat-spinner>\r\n                        <mat-icon *ngIf=\"ProfileForm.controls.gstinNo.valid && !isLoading\"\r\n                            [ngClass]=\"{ 'gst-status-icon': true, 'active': !isDisabledGST }\">\r\n                            {{ !isDisabledGST ? '✓' : '✗' }}\r\n                        </mat-icon>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"(submitted && f.gstinNo.errors?.required)\">\r\n                            {{ lang.GSTIN }} is Required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"f.gstinNo.invalid && (f.gstinNo.dirty && f.gstinNo.touched)\">\r\n                            Please enter the valid {{ lang.GSTIN }} number\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"f.gstinNo.errors?.maxlength\">\r\n                            {{ lang.GSTIN }} must be of 15-digits\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"f.gstinNo.errors?.minlength\">\r\n                            {{ lang.GSTIN }} must be of 15-digits\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"f.gstinNo.errors?.pattern\">\r\n                            {{ lang.GSTIN }} must be valid number\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\"\r\n                        *ngIf=\"(ProfileForm.get('businessType').value =='Private Limited Company' || ProfileForm.get('businessType').value =='Public Limited Company') && isShown\">\r\n                        <label class=\"form-label ms-2\">CIN<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"cinNumber\"\r\n                                (keyup)=\"validatecinNumber($event.target.value)\" #input1\r\n                                (input)=\"input1.value=$event.target.value.toUpperCase()\" placeholder=\"CIN\"\r\n                                [ngClass]=\"{'is-invalid': (f.cinNumber.invalid && f.cinNumber.touched) && submitted }\"\r\n                                required>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"f.cinNumber.errors?.required\">\r\n                            CIN is Required!\r\n                        </mat-error>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"f.gstinNo.invalid && (f.cinNumber.dirty && f.cinNumber.touched)\">\r\n                            Please enter the valid CIN number\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.cinNumber.touched) && f.cinNumber.errors?.pattern\">\r\n                            CIN pattern is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\"\r\n                        *ngIf=\"ProfileForm.get('businessType').value =='Proprietorship' || ProfileForm.get('businessType').value =='Hindu Undivided Family' && isShown\">\r\n                        <label class=\"form-label ms-2\">Legal Name<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"legalName\"\r\n                                placeholder=\"Legal Name\" [ngClass]=\"{\r\n                                    'is-invalid': (f.legalName.invalid && f.legalName.touched) && submitted }\" requied>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors\">\r\n                            Legal name must be in Alphabets\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors?.required\">\r\n                            Legal Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <label class=\"form-label ms-2\">Financial Year Start From<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matInput bsDatepicker placeholder=\"Financial Year From\" [maxDate]=\"today\"\r\n                                formControlName=\"financialYearFrom\" style=\"text-transform:uppercase!important;\"\r\n                                bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue',\r\n                          dateInputFormat: 'DD MMM YYYY',\r\n                          showWeekNumbers:false }\" (click)=\"openDatePicker()\" autocomplete=\"off\" [ngClass]=\"{\r\n                            'is-invalid': (f.financialYearFrom.invalid && f.financialYearFrom.touched) && submitted }\">\r\n                            <span>\r\n                                <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                            </span>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.financialYearFrom.touched) && f.financialYearFrom.errors?.required\">\r\n                            financialYearFrom is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12\">\r\n                        <label class=\"form-label ms-2\" for=\"billingAddress\">Billing Address<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <textarea matNativeControl matInput required type=\"text\" formControlName=\"address\" row=\"2\"\r\n                                placeholder=\"Billing Address\" [ngClass]=\"{\r\n                                'is-invalid': (f.address.invalid && f.address.touched) && submitted }\"\r\n                                required></textarea>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                            Billing Address is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">State<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select required formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\"\r\n                                [ngClass]=\"{\r\n                              'is-invalid': (f.state.invalid && f.state.touched) && submitted }\">\r\n                                <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{ state }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                            State is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n\r\n                        <label class=\"form-label ms-2\">City<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                                placeholder=\"City\" [ngClass]=\"{\r\n                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                            District is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Country<span class=\"error-asterisk\">*</span></label>\r\n\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n\r\n\r\n                            <input matNativeControl matInput required type=\"text\" value=\"UAE\" placeholder=\"Country\"\r\n                                [ngClass]=\"{ 'is-invalid': (f.country.invalid && f.country.touched) && submitted }\">\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 ps-4\">\r\n                <div class=\"row mb-3\">\r\n\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <!-- <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown && ProfileForm.get('gstType').value =='Composite'\"> -->\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Trade Name<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput formControlName=\"tradeName\" placeholder=\"Trade Name\" maxlength=\"100\"\r\n                                [ngClass]=\"{\r\n                                    'is-invalid': (f.tradeName.invalid && f.tradeName.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.tradeName.touched) && f.tradeName.errors?.required\">\r\n                            Trade Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <label class=\"form-label ms-2\">Constitution of Business<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select formControlName=\"businessType\" matNativeControl matInput disableOptionCentering\r\n                                placeholder=\"Constitution of Business\" [ngClass]=\"{\r\n                                    'is-invalid': (f.businessType.invalid && f.businessType.touched) && submitted }\">\r\n                                <mat-option *ngFor=\"let item of uaeCosntBusiness\" [value]=\"item\">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessType.touched) && f.businessType.errors?.required\">\r\n                            Constitution of Business is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <label class=\"form-label ms-2\">Account Method<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering required\r\n                                formControlName=\"accountMethod\" placeholder=\"Account Method\" [ngClass]=\"{\r\n                                    'is-invalid': (f.accountMethod.invalid && f.accountMethod.touched) && submitted }\"\r\n                                required>\r\n                                <mat-option value=\"Accounts\">Only Accounts</mat-option>\r\n                                <mat-option value=\"Accounts With Stock Management\">Accounts With Stock\r\n                                    Management</mat-option>\r\n                                <!-- <option value=\"Both\">Both</option> -->\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.accountMethod.touched) && f.accountMethod.errors?.required\">\r\n                            Account Method is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <label class=\"form-label ms-2\">Business Type(Select multiple, if applicable)<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering\r\n                                formControlName=\"businessNature\" placeholder=\"Business Type\" multiple\r\n                                [ngClass]=\"{'is-invalid': (f.businessNature.invalid && f.businessNature.touched) && submitted }\"\r\n                                required>\r\n                                <mat-option *ngFor=\"let type of typeList\" [value]=\"type.id\">{{type.businessType}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessNature.touched) && f.businessNature.errors?.required\">\r\n                            Business Type is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\" *ngIf=\"isShown\">\r\n                        <label class=\"form-label ms-2\">Business Category<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-chip-list #chipList aria-label=\"category selection\" [multiple]=\"true\">\r\n                                <mat-chip *ngFor=\"let category of categoryName\" [selectable]=\"category=='Education'\"\r\n                                    [removable]=\"removable\" (removed)=\"remove(category)\">\r\n                                    {{category}}\r\n                                    <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                                </mat-chip>\r\n                                <input placeholder=\"Business Category\" #categoryInput\r\n                                    #autocompleteTrigger=\"matAutocompleteTrigger\" [formControl]=\"categoryCtrl\"\r\n                                    [matAutocomplete]=\"auto\" [matChipInputFor]=\"chipList\"\r\n                                    (click)=\"openAuto(autocompleteTrigger)\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    (matChipInputTokenEnd)=\"add($event)\" [ngClass]=\"{\r\n                                        'is-invalid': (categoryCtrl.invalid && categoryCtrl.touched) && submitted }\">\r\n                            </mat-chip-list>\r\n                            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n                                <mat-option *ngFor=\"let item of filteredCategory | async\" [value]=\"item.id\"\r\n                                    (onSelectionChange)=\"getCategoryId(item)\">\r\n                                    <mat-checkbox color=\"primary\" style=\"padding: 0 12px;\"\r\n                                        [checked]=\"categoryName.indexOf(item.category) >=0\"></mat-checkbox>\r\n                                    {{item.category}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <a mat-icon-button matSuffix style=\"width: 34px; height: 34px;\"\r\n                                (click)=\"openAuto(autocompleteTrigger)\">\r\n                                <mat-icon style=\"width: 34px;\">expand_more</mat-icon>\r\n                            </a>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || categoryCtrl.touched) && categoryCtrl.errors?.required\">\r\n                            Category is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <!-- for partener table -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Partnership'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            Partner Details\r\n                        </label>\r\n                        <div class=\"\">\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Name of Partner\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td style=\"vertical-align: middle;\"></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <mat-select placeholder=\"Position\" formControlName=\"position\"\r\n                                                        [value]=\"'Partner'\">\r\n                                                        <mat-option [value]=\"'Managing Partner'\">Managing\r\n                                                            Partner</mat-option>\r\n                                                        <mat-option [value]=\"'Partner'\" selected>Partner</mat-option>\r\n                                                    </mat-select>\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name Of Partner\"\r\n                                                        formControlName=\"nameOfPartner\"\r\n                                                        (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- for LLP  -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Limited Liability Partnership'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            LLP Details\r\n                        </label>\r\n                        <div class=\"\">\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Name of Partner\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <mat-select placeholder=\"Position\" formControlName=\"position\"\r\n                                                        [value]=\"'Partner'\">\r\n                                                        <mat-option [value]=\"'Managing Partner'\">Managing\r\n                                                            Partner</mat-option>\r\n                                                        <mat-option [value]=\"'Partner'\" selected>Partner</mat-option>\r\n                                                    </mat-select>\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name Of Partner\"\r\n                                                        formControlName=\"nameOfPartner\"\r\n                                                        (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- for private limited -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Private Limited Company'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            Private Limited Company Details\r\n                        </label>\r\n                        <div class=\"\">\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Name of Director\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td style=\"vertical-align: middle;\"></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name Of Director\"\r\n                                                        formControlName=\"nameOfPartner\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Position\"\r\n                                                        formControlName=\"position\" (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- for public limited -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Public Limited Company'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            Public Limited Company Details\r\n                        </label>\r\n                        <div>\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Name of Director\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td style=\"vertical-align: middle;\"></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name Of Director\"\r\n                                                        formControlName=\"nameOfPartner\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Position\"\r\n                                                        formControlName=\"position\" (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- for hindu  undidvided family -->\r\n                    <div *ngIf=\"ProfileForm.get('businessType').value =='Hindu Undivided Family'\" class=\"mb-3\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            HUF Details\r\n                        </label>\r\n                        <div>\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Position</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Members</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let partner of partnerDetails; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.position }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ partner.nameOfPartner }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" (click)=\"openEditModal(i, partner)\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" style=\"color : red\"\r\n                                                            data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\"\r\n                                                            (click)=\"deletePartner(partner.id)\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td style=\"vertical-align: middle;\"></td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <mat-select placeholder=\"Position\" formControlName=\"position\"\r\n                                                        [value]=\"'Karta'\">\r\n                                                        <mat-option [value]=\"'Karta'\">Karta</mat-option>\r\n                                                        <mat-option [value]=\"'Member'\">Member</mat-option>\r\n                                                    </mat-select>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <input matInput type=\"text\" placeholder=\"Name of Member\"\r\n                                                        formControlName=\"nameOfPartner\"\r\n                                                        (keydown.enter)=\"addPartner($event)\">\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-pencil-square  fs-1\"\r\n                                                                data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                                                title=\"Edit\"></span>\r\n                                                        </button>\r\n                                                        <span class=\"m-1\" text-center></span>\r\n                                                        <button class=\"btn btnp\" [disabled]=\"true\">\r\n                                                            <span class=\"bi-trash  fs-1\" data-bs-toggle=\"tooltip\"\r\n                                                                data-bs-placement=\"top\" title=\"Delete\"></span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div class=\"form-check form-switch mb-3\" style=\"padding-left: 3.7rem;\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"toggleAdditionalFields\"\r\n                            (change)=\"toggleAdditionalFields()\">\r\n                        <label class=\"form-check-label\" for=\"toggleAdditionalFields\" *ngIf=\"showAdditionalFields\"><b\r\n                                style=\"font-size: 14px; font-weight:500\">Show Additional Fields</b></label>\r\n                        <label class=\"form-check-label\" for=\"toggleAdditionalFields\" *ngIf=\"!showAdditionalFields\"\r\n                            style=\"font-size: 14px;\">Show\r\n                            Additional Fields</label>\r\n                    </div>\r\n\r\n                    <div class=\"mb-3 pb-1\" *ngIf=\"showAdditionalFields\">\r\n                        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n                            Additional Fields\r\n                        </label>\r\n                        <div>\r\n                            <form [formGroup]=\"businessForm\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped table-bordered bg-white\">\r\n                                        <thead class=\"inner-model-table-heading\">\r\n                                            <tr class=\"btn-reveal-trigger\">\r\n                                                <th style=\"vertical-align: middle;\">#</th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">\r\n                                                    License/Certificate </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Document Number\r\n                                                </th>\r\n                                                <th class=\"text-nowrap\" style=\"vertical-align: middle;\">Print in Sale\r\n                                                    Invoice</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let item of additionaDetailsData; let i = index\">\r\n                                                <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n                                                <td style=\"vertical-align: middle;\">{{ item.licenceAndCertificate }}\r\n                                                </td>\r\n                                                <td style=\"vertical-align: middle;\">{{ item.documentNumber }}</td>\r\n                                                <td style=\"vertical-align: middle;\">\r\n                                                    <div class=\"\">\r\n                                                <td class=\"flex d-flex flex-row\"\r\n                                                    style=\"justify-content: center; align-items: center; vertical-align: middle;\">\r\n                                                    <div class=\"form-check form-switch mb-0\">\r\n                                                        <input class=\"form-check-input text-center\" id=\"customSwitch1\"\r\n                                                            type=\"checkbox\" />\r\n                                                    </div>\r\n                                                </td>\r\n                                </div>\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style=\"vertical-align: middle;\"></td>\r\n                                    <td style=\"vertical-align: middle;\">\r\n                                        <input matInput type=\"text\" placeholder=\"License/Certificate\"\r\n                                            formControlName=\"licenceAndCertificate\">\r\n                                    </td>\r\n                                    <td style=\"vertical-align: middle;\">\r\n                                        <input matInput type=\"text\" placeholder=\"Document Number\"\r\n                                            formControlName=\"documentNumber\" (keyup.enter)=\"addDetails()\">\r\n                                    </td>\r\n                                    <td style=\"vertical-align: middle;\">\r\n                                        <div class=\"\">\r\n                                    <td class=\"flex d-flex flex-row\"\r\n                                        style=\"justify-content: center; align-items: center; vertical-align: middle;\">\r\n                                        <div class=\"form-check form-switch mb-0\">\r\n                                            <input class=\"form-check-input text-center\" id=\"customSwitch1\"\r\n                                                type=\"checkbox\" />\r\n                                        </div>\r\n\r\n                                    </td>\r\n                        </div>\r\n                        </td>\r\n                        </tr>\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n    </form>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n\r\n<!-- <div class=\"row mb-3\">\r\n    <div class=\"col-sm-12 col-md-12\">\r\n        <div class=\"notes-section\">\r\n            <p class=\"notes-textarea text-black\" style=\"background: #e4e3e6;\">\r\n                <b>Note:</b> Terms & condition and Signature added below will be shown on your invoices.\r\n            </p>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-12 col-md-12 ps-2\">\r\n        <div class=\"terms-section\">\r\n\r\n        </div>\r\n        <label class=\"form-label ms-2\">Terms & Conditions</label>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <textarea matInput required rows=\"3\" placeholder=\"Terms & Conditions\">\r\n                       1. Goods once sold will not be taken back or exchanged.\r\n                    </textarea>\r\n            <!-- 1. Goods once sold will not be taken back or exchanged. -->\r\n        <!-- </mat-form-field>\r\n    </div>\r\n</div> --> \r\n\r\n<!-- <div class=\"row mb-3\">\r\n    <div class=\"col-md-5 col-lg-5 col-sm-6\">\r\n        <div class=\"image-wrapper\">\r\n            <label class=\"signature-img\" ondragover=\"return false;\" [class.loaded]=\"loaded\"\r\n                (dragenter)=\"signatureDragEnter()\" (dragleave)=\"signatureDragLeave()\" (drop)=\"signatureDrop($event)\">\r\n                <i class=\"bi bi-plus-lg fs--1\">Add Signature</i>\r\n                <img *ngIf=\"signImg\" [src]=\"signImg\" (load)=\"signatureLoad()\" [class.loaded]=\"imageLoaded\" />\r\n                <input #fileInput type=\"file\" name=\"file\" accept=\"image/*\" (change)=\"signatureChange($event)\" hidden>\r\n            </label>\r\n            <button *ngIf=\"signImg\" class=\"delete-button\" (click)=\"deleteSignature()\">\r\n                <i class=\"bi bi-x bi-sm\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n</div>\r\n\r\n</div>\r\n<hr class=\"my-3\">\r\n<div class=\"mb-3\" *appHasPermission=\"['read']; name: 'profile'\">\r\n    <form [formGroup]=\"addressForm\">\r\n        <label class=\"pb-3 form-label\" style=\"font-size: 16px; font-weight: 500;\">\r\n            Add multiple Business Addresses\r\n        </label>\r\n        <div>\r\n            <div formArrayName=\"addresses\" *ngFor=\"let item of addressControls.controls; let i = index\">\r\n                <div [formGroupName]=\"i\" class=\"row\">\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Pincode<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required\r\n                                (input)=\"getPincodeDetailsForAdditionalAddress($event.target.value,i)\" maxlength=\"6\"\r\n                                minlength=\"6\" formControlName=\"pincode\"  (keypress)=\"numberOnly($event)\" placeholder=\"Pincode\" [ngClass]=\"{\r\n                                    'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\" value=\"\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                            Pincode is Required !\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                            Pincode should be only digits.\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">State<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput disableOptionCentering required type=\"text\" ngxOnlyString\r\n                                formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\" [ngClass]=\"{\r\n                                'is-invalid': (f.state.invalid && f.state.touched) && submitted }\" value=\"\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                            State is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">District<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                                placeholder=\"District\" [ngClass]=\"{\r\n                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                            District is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Country<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"country\"\r\n                                placeholder=\"Country\" [ngClass]=\"{\r\n                            'is-invalid': (f.country.invalid && f.country.touched) && submitted }\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                            Country is Required!\r\n                        </mat-error>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Town/City<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"city\"\r\n                                placeholder=\"Town/City\" [ngClass]=\"{\r\n                            'is-invalid': (f.city.invalid && f.city.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.city.touched) && f.city.errors?.required\">\r\n                            Town/City is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">House No<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"homeno\"\r\n                                placeholder=\"House No,Apartment,Building,Company\" [ngClass]=\"{\r\n                            'is-invalid': (f.homeno.invalid && f.homeno.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.homeno.touched) && f.homeno.errors?.required\">\r\n                            House No is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Area, Street, Sector, Village<span\r\n                                class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"address\"\r\n                                placeholder=\"Area\" [ngClass]=\"{\r\n                            'is-invalid': (f.address.invalid && f.address.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                            Area, Street, Sector, Village is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                        <label class=\"form-label ms-2\">Landmark<span class=\"error-asterisk\">*</span></label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"landmark\"\r\n                                placeholder=\"Landmark\" [ngClass]=\"{\r\n                                'is-invalid': (f.landmark.invalid && f.country.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.landmark.touched) && f.landmark.errors?.required\">\r\n                            Landmark is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"\">\r\n                        <div class=\"d-flex justify-content-center\">\r\n                            <div *ngIf=\"item.value.id\">\r\n                                <button class=\"btn btn-save mb-1\" type=\"button\" style=\"margin-right: 10px;\"\r\n                                    *appHasPermission=\"['modify']; name: 'profile'\"\r\n                                    (click)=\"updateMultipleAddress(item)\">\r\n                                    Update\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"button\" class=\"btn btn-cancel\" *ngIf=\"item.value.id\"\r\n                                    (click)=\"deleteAddressForm(i)\">\r\n                                    -\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-end pb-4\">\r\n                <button type=\"button\" class=\"btn btn-cancel\" style=\"margin-right: 10px\" (click)=\"addAddress()\">\r\n                    +\r\n                </button>\r\n\r\n                <button class=\"btn btn-save\" type=\"button\" *appHasPermission=\"['modify']; name: 'profile'\"\r\n                    (click)=\"addMultipleAddress()\">\r\n                    Add\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n</form>\r\n</div>","import { TitleCasePipe, formatDate } from \"@angular/common\";\r\nimport lang from \"src/assets/langTranslation/language_translation\"\r\nimport { Component, ElementRef, OnInit, ViewChild, AfterViewInit, ChangeDetectorRef, OnChanges, SimpleChanges, LOCALE_ID } from \"@angular/core\";\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ProfileService } from \"src/app/core/services/profile.service\";\r\nimport { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\nimport {\r\n  MatAutocomplete,\r\n  MatAutocompleteSelectedEvent,\r\n  MatAutocompleteTrigger,\r\n} from \"@angular/material/autocomplete\";\r\nimport { Observable, pipe } from \"rxjs\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { COMMA, ENTER } from \"@angular/cdk/keycodes\";\r\nimport * as moment from \"moment\";\r\nimport { createFalse } from \"typescript\";\r\nimport { log } from \"console\";\r\nimport { PartyService } from \"src/app/core/services/party.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EditBusinessPartnerModalComponent } from \"src/app/pages/Profile/profile-settings/edit-business-partner-modal/edit-business-partner-modal.component\";\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { CommonService } from \"src/app/core/services/common.service\";\r\n\r\ninterface IRange {\r\n  value: Date[];\r\n  label: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-shop-profile-settings',\r\n  templateUrl: './shop-profile-settings.component.html',\r\n  styleUrls: ['./shop-profile-settings.component.scss']\r\n})\r\nexport class ShopProfileSettingsComponent implements OnInit {\r\n\r\n  public lang = lang.UAE;\r\n  public dragging: boolean = false;\r\n  public loaded: boolean = false;\r\n  public imageLoaded: boolean = false;\r\n  public activeColor: string = 'green';\r\n  public baseColor: string = '#ccc';\r\n  public signImg: any = '';\r\n  public profilePic: any = '';\r\n  public overlayColor: string = 'rgba(255,255,255,0.5)';\r\n  partners: any[] = [];\r\n  states: string[] = [\r\n    'Abu Dhabi',\r\n    'Dubai',\r\n    'Sharjah',\r\n    'Ajman',\r\n    'Umm Al Quwain',\r\n    'Ras Al Khaimah',\r\n    'Fujairah',\r\n  ];\r\n\r\n  ranges: IRange[] = [\r\n    {\r\n      value: [\r\n        new Date(new Date().setDate(new Date().getDate() - 7)),\r\n        new Date(),\r\n      ],\r\n      label: \"Last 7 Days\",\r\n    },\r\n    {\r\n      value: [\r\n        new Date(new Date().setDate(new Date().getMonth() - 1)),\r\n        new Date(),\r\n      ],\r\n      label: \"Last Month\",\r\n    },\r\n  ];\r\n  today: Date;\r\n  maxDate: Date;\r\n  public typeList = [];\r\n  public value: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public data: any;\r\n  public ProfileForm: FormGroup;\r\n  public TradeForm: FormGroup;\r\n  public addressForm: FormGroup;\r\n  public businessForm: FormGroup;\r\n  public dateRange: FormGroup;\r\n  public updated: boolean = false;\r\n  public submitted: boolean;\r\n  public date = new Date();\r\n  public addressId: string = \"\";\r\n  public additionalPlaceOfBusiness: FormArray;\r\n  public addressLength;\r\n  public pinDetails: any;\r\n  public gstDetails: any;\r\n  public finalAddress: any;\r\n  public pin: any;\r\n  public businessNature: any = [];\r\n  public compositeType: boolean = false;\r\n  public isShown: boolean = true;\r\n  public mobileOtp: any;\r\n  public visible = true;\r\n  public selectable = true;\r\n  public removable = true;\r\n  public separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  public categoryCtrl = new FormControl();\r\n  public filteredCategory: Observable<string[]>;\r\n  public categoryBusiness: any = [];\r\n  public categoryName: any = [];\r\n  public categoryId: any[] = [];\r\n  public opened = false;\r\n  public isDisabledGST: boolean = true;\r\n  public addressArray = [];\r\n  public partenerAray = []\r\n  public businessType: any;\r\n  public constitutionBusinessType: any;\r\n  public legTrad: boolean = false;\r\n  public cinFlag: boolean = false;\r\n  public partnerSubmitted = false\r\n  partnerDetails: any[] = [];\r\n  additionaDetailsData: any[] = [];\r\n  public cosntBusiness = [\r\n    \"Proprietorship\",\r\n    \"Partnership\",\r\n    \"Private Limited Company\",\r\n    \"Public Limited Company\",\r\n    \"Limited Liability Partnership\",\r\n    \"Hindu Undivided Family\"\r\n  ];\r\n\r\n  public uaeCosntBusiness = [\r\n    \"Sole proprietorship\",\r\n    \"Civil Company\",\r\n    \"Limited Liability Company (LLC)\",\r\n    \"Partnership\",\r\n    \"Private Share Holding Company\",\r\n    \"Public Share Holding Company\",\r\n    \"Branch of Foreign Companies/Representative Office\",\r\n    \"Branch of GCC companies\",\r\n    \"Branch of Free zone company\",\r\n    \"Branch of Dubai based companies\",\r\n    \"Branch of UAE based companies\"\r\n  ];\r\n  @ViewChild(\"categoryInput\") categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild(\"auto\") matAutocomplete: MatAutocomplete;\r\n  @ViewChild(\"autocompleteTrigger\") matACTrigger: MatAutocompleteTrigger;\r\n  serachByCategory: any;\r\n  public ischecked: boolean = false;\r\n  signatureData: string;\r\n  imgNumber: any;\r\n  showUploadInput: boolean = false;\r\n  public imageSrc: any = \"\";\r\n  profileImage: File;\r\n  signatureImage: File;\r\n  showAdditionalFields = false;\r\n  editedRowIndex: number = -1;  //to store the index of the currently edited row\r\n  additionaList: any[] = [];\r\n  businessPlaceAdd: FormGroup;\r\n  shopId: any;\r\n  isFirstChange: boolean = true;\r\n  isLoading: boolean = false;\r\n  businesscategory: any[] = [];\r\n\r\n  constructor(\r\n    public profileService: ProfileService, public partyService: PartyService,\r\n    public fb: FormBuilder, private cdr: ChangeDetectorRef,\r\n    public router: Router, private commonService: CommonService,\r\n    private toastService: ToastNotificationService, private titleCasePipe: TitleCasePipe,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.today = new Date();\r\n    this.maxDate = new Date(\r\n      this.today.getFullYear(),\r\n      this.today.getMonth(),\r\n      25\r\n    );\r\n  }\r\n\r\n  async ngOnInit() {\r\n    //form for profile data\r\n    try {\r\n      this.TradeForm = this.fb.group({\r\n      })\r\n     \r\n      this.ProfileForm = this.fb.group({\r\n        firstName: [\"\", [Validators.required, Validators.pattern(\"^[a-zA-Z ]*$\")],\r\n        ],\r\n        legalName: [null, [Validators.pattern(\"^[a-zA-Z ]*$\")]],\r\n        businessType: [\"\"],\r\n        email: [\"\", [Validators.pattern(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\")]],\r\n        mobile: [\"\"],\r\n        gstType: [null],\r\n        gstStatus: [null],\r\n        gstinNo: [null],\r\n        state: [\"\", [Validators.required]],\r\n        city: [{ value: 'UAE', disabled: true }],\r\n        pincode: [null],\r\n        district: [\"\", [Validators.required]],\r\n        landmark: [\"\"],\r\n        country: ['United Arab Emirates (UAE) (Former Trucial Oman, Trucial States)'],\r\n        homeno: [\"\"],\r\n        address: [\"\", [Validators.required]],\r\n        accountMethod: [\"\", [Validators.required]],\r\n        compositeType: [\"\"],\r\n        businessNature: [\"\"],\r\n        panNumber: [null],\r\n        tradeName: [null],\r\n        financialYearFrom: [\"\"],\r\n        bookBeginningFrom: [null],\r\n        cinNumber: [null],\r\n        profileImage: [null],\r\n        signatureImage: [null],\r\n      });\r\n     \r\n      this.getType();\r\n      this.getBusinessCategory();\r\n      //calling get data api for profile\r\n      this.getProfileData();\r\n\r\n      //form for multiple address\r\n      this.addressForm = this.fb.group({\r\n        addresses: new FormArray([]),\r\n      });\r\n\r\n      // For Additional place of Business\r\n      this.businessPlaceAdd = this.fb.group({\r\n        pincode: ['', Validators.required],\r\n        state: ['', Validators.required],\r\n        district: ['', Validators.required],\r\n        country: ['United Arab Emirates (UAE) (Former Trucial Oman, Trucial States)', Validators.required],\r\n        city: ['', Validators.required],\r\n        homeno: ['', Validators.required],\r\n        address: ['adress'],\r\n        areaStreet: ['', Validators.required],\r\n        landmark: ['', Validators.required],\r\n      });\r\n\r\n      //for partner Form\r\n      this.businessForm = this.fb.group({\r\n        position: [\"\"],\r\n        nameOfPartner: [\"\"],\r\n        licenceAndCertificate: [\"\"],\r\n        documentNumber: [\"\"],\r\n      })\r\n    } catch (error) {\r\n    } \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.cdr.detectChanges();\r\n    });\r\n   \r\n  }\r\n\r\n  getallPartnerList() {\r\n    this.profileService.getBusinessPartners({}, this.currentUser.id).then((res: any) => {\r\n      this.partnerDetails = res.data.filter(data => {\r\n        return (!(data.position === null) && !(data.nameOfPartner === null))\r\n      })\r\n    });\r\n  }\r\n\r\n  getAdditionaDetails() {\r\n    this.additionaDetailsData = []\r\n    this.profileService.getAdditionaDetails({}, this.currentUser.id).then((res: any) => {\r\n      this.additionaDetailsData = res.data.filter(data => {\r\n        return (!(data.documentNumber === null) && !(data.licenceAndCertificate === null))\r\n      })\r\n    });\r\n    if (this.additionaDetailsData.length > 0) {\r\n      this.showAdditionalFields = true;\r\n    }\r\n  }\r\n\r\n  toggleAdditionalFields() {\r\n    this.showAdditionalFields = !this.showAdditionalFields;\r\n  }\r\n\r\n  validatecinNumber(cin) {\r\n    let cinNo = cin.toUpperCase();\r\n    var regex =\r\n      /^([L|U]{1})([0-9]{5})([A-Za-z]{2})([0-9]{4})([A-Za-z]{3})([0-9]{6})$/;\r\n\r\n    if (regex.test(cinNo)) {\r\n    } else {\r\n      this.ProfileForm.controls.cinNumber.setErrors({ incorrect: true });\r\n    }\r\n  }\r\n\r\n  validatepanNumber(pan) {\r\n    let panNo = pan.toUpperCase();\r\n    var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}/;\r\n\r\n    if (regex.test(panNo)) {\r\n    } else {\r\n      this.ProfileForm.controls.panNumber.setErrors({ incorrect: true });\r\n    }\r\n  }\r\n\r\n  validateTRN(TRN) {\r\n    if (TRN.length === 15) {\r\n        this.isDisabledGST = false;\r\n    } else {\r\n      this.isDisabledGST = true;\r\n      this.ProfileForm.controls.gstinNo.setErrors({ incorrect: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get gst type\r\n   * @param gstType\r\n   */\r\n\r\n  /**\r\n   * Get Controls of FormArray\r\n   */\r\n  get addressControls() {\r\n    return this.addressForm.get(\"addresses\") as FormArray;\r\n  }\r\n\r\n  addAddress(): void {\r\n    try {\r\n      const data = this.addressForm.get(\"addresses\") as FormArray;\r\n      this.cdr.detectChanges();\r\n      if (data) {\r\n        data.push(this.createAddress());\r\n        this.cdr.detectChanges();\r\n      }\r\n    } catch {\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete array index from FormArray\r\n   * @param index\r\n   */\r\n  deleteAddressForm(index): void {\r\n    const data = this.addressForm.get(\"addresses\") as FormArray;\r\n    data.removeAt(index);\r\n  }\r\n\r\n  /**\r\n   * Add index to FormArray\r\n   * @returns\r\n   */\r\n  createAddress(): FormGroup {\r\n    return new FormGroup({\r\n      homeno: new FormControl(),\r\n      pincode: new FormControl(),\r\n      address: new FormControl(),\r\n      city: new FormControl(),\r\n      state: new FormControl(),\r\n      country: new FormControl(),\r\n      district: new FormControl(),\r\n      landmark: new FormControl(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove index from FormArray\r\n   * @param i\r\n   */\r\n  removeAddress(i: number) {\r\n    (<FormArray>this.addressForm.get(\"addresses\")).removeAt(i);\r\n  }\r\n\r\n  /**\r\n   * Get Formcontrol of FormGroup\r\n   */\r\n  get f() {\r\n    return this.ProfileForm.controls;\r\n  }\r\n\r\n  get fpart() {\r\n    return this.businessForm.controls;\r\n  }\r\n\r\n  toggleShow(checked: boolean) {\r\n    this.isShown = checked;\r\n\r\n    if (!this.isShown) {\r\n      this.ProfileForm.get(\"gstinNo\").clearValidators();\r\n      this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n    } else {\r\n      this.ProfileForm.get(\"gstinNo\").setValidators([]);\r\n      this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  getCategoryNamesFromIds(ids: number[]): string[] {\r\n    return ids.map(id => {\r\n      const category = this.categoryBusiness.find(item => item.id === id);\r\n      return category ? category.category : '';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get user profile data\r\n   */\r\n  async getProfileData() {\r\n    await this.profileService.getUserProfile({}, this.currentUser.id).then((res) => {\r\n      this.data = res.data;\r\n      this.shopId = res.data.basicdetails?.id;\r\n      this.profilePic = res.data.basicdetails.profileImage\r\n      this.constitutionBusinessType = res.data.additional.businessType\r\n      this.signImg = res.data.basicdetails.addSignature\r\n      let otherAddresses = res.data.otherAddresses;\r\n      if (res.data.additional.gstType == \"Composite\") {\r\n        this.compositeType = true;\r\n      }\r\n      if (otherAddresses.length > 0) {\r\n        for (let i = 0; i < otherAddresses.length; i++) {\r\n          this.addressId = otherAddresses[i].id;\r\n          this.addressControls.push(\r\n            new FormGroup({\r\n              address: new FormControl(otherAddresses[i].address),\r\n              city: new FormControl(otherAddresses[i].city),\r\n              country: new FormControl(otherAddresses[i].country),\r\n              homeno: new FormControl(otherAddresses[i].homeno),\r\n              pincode: new FormControl(otherAddresses[i].pincode),\r\n              state: new FormControl(otherAddresses[i].state),\r\n              landmark: new FormControl(otherAddresses[i].landmark),\r\n              district: new FormControl(otherAddresses[i].district),\r\n              id: new FormControl(otherAddresses[i].id),\r\n            })\r\n          );\r\n        }\r\n      }\r\n      if (res.data.additional.isRegistered != null) {\r\n        this.toggleShow(res.data.additional.isRegistered);\r\n      }\r\n      if (res.data.additional.gstinNo != null) {\r\n        \r\n      }\r\n      let businessNatureData = res.data.businessTypes.map((item) => item.id);\r\n      this.businesscategory = res.data.businessCategory.map((item) => item.id);\r\n      this.categoryName = this.getCategoryNamesFromIds(this.businesscategory);\r\n      //sending data from get api to form by patching\r\n      this.ProfileForm.patchValue({\r\n        email: res.data.basicdetails.email,\r\n        businessType: res.data.additional.businessType,\r\n        firstName: res.data.basicdetails.firstName,\r\n        totalPlaces: res.data.additional.totalPlaces,\r\n        legalName: res.data.additional.legalName,\r\n        gstType: res.data.additional.gstType,\r\n        gstStatus: res.data.additional.status,\r\n        gstinNo: res.data.additional.gstinNo\r\n          ? res.data.additional.gstinNo\r\n          : null,\r\n        compositeType: res.data.additional.compositeType,\r\n        fullName: res.data.basicdetails.firstName,\r\n        mobile: res.data.basicdetails.mobile,\r\n        tradeName: res.data.additional.tradeName,\r\n        accountMethod: res.data.additional.accountMethod,\r\n        pincode: res.data.primaryAddress.pincode ? res.data.primaryAddress.pincode : null,\r\n        state: res.data.primaryAddress.state ? res.data.primaryAddress.state : null,\r\n        city: res.data.primaryAddress.city ? res.data.primaryAddress.city : null,\r\n        country:  res.data.primaryAddress.country ? res.data.primaryAddress.country : 'UAE' ,\r\n        address: res.data.primaryAddress.address ? res.data.primaryAddress.address : null,\r\n        landmark: res.data.primaryAddress.landmark ? res.data.primaryAddress.landmark : null,\r\n        district: res.data.primaryAddress.district ? res.data.primaryAddress.district : null,\r\n        homeno: res.data.primaryAddress.homeno ? res.data.primaryAddress.homeno : null,\r\n        panNumber: res.data.additional.panNumber ? res.data.additional.panNumber : null,\r\n        financialYearFrom: res.data.additional.financialYearFrom ? moment(res.data.additional.financialYearFrom).format(\r\n          \"DD-MMM-YYYY\"\r\n        ) : \"\",\r\n        bookBeginningFrom: res.data.additional.bookBeginningFrom ? moment(res.data.additional.bookBeginningFrom).format(\r\n          \"DD-MMM-YYYY\"\r\n        ) : \"\",\r\n\r\n        cinNumber: res.data.additional.cinNumber,\r\n        businessNature: businessNatureData,\r\n        categoryCtrl: this.businesscategory,\r\n      \r\n      });\r\n    });\r\n    if (this.ProfileForm.value.gstinNo !== null) {\r\n      this.isLoading = true\r\n    \r\n        this.isShown = true\r\n        this.isDisabledGST = false\r\n        this.isLoading = false\r\n    }\r\n    this.getallPartnerList();\r\n    this.getAdditionaDetails()\r\n       if (!this.ProfileForm.valid) {\r\n       console.log(\"Profile form validity check---\",this.ProfileForm)\r\n      this.toastService.toastMsg({\r\n        title:\"Warning\",\r\n        content: \"profile data is not filled\",\r\n      });\r\n    }else{\r\n    }\r\n\r\n  }\r\n  \r\n  //get pincode api\r\n  getPincodeDetails(pin) {\r\n    this.profileService.getUserPincode({}, pin).then((res) => {\r\n      this.pinDetails = res;\r\n      this.ProfileForm.patchValue({\r\n        district: res.data.districtName,\r\n        state: res.data.stateName,\r\n      });\r\n    });\r\n  }\r\n\r\n  getPincodeDetailsForAdditionalAddress(pin, index) {\r\n    if (pin.length == 6) {\r\n      this.profileService.getUserPincode({}, pin).then((res) => {\r\n        this.pinDetails = res.data;\r\n        this.addressControls.controls[index].patchValue({\r\n          pincode: this.pinDetails.pincode,\r\n          state: this.pinDetails.stateName,\r\n          district: this.pinDetails.districtName,\r\n        });\r\n        this.addressControls\r\n          .at(index)\r\n          .patchValue(res.data.stateName, res.data.districtName);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get nature of business list\r\n   */\r\n  public getType() {\r\n    this.profileService.getTypes({}).then((response) => {\r\n      this.typeList = response.data;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update user profile\r\n   * @returns\r\n   */\r\n  updateUserProfile() {\r\n    console.log(this.ProfileForm);\r\n    this.submitted = true;\r\n    var registerdProfileData\r\n    registerdProfileData = {\r\n      basicdetails: {\r\n        firstName: this.ProfileForm.controls.firstName.value,\r\n        // addSignature: this.signImg,\r\n        // profileImage: this.profileImage,\r\n      },\r\n      additional: {\r\n        isRegistered: this.isShown,\r\n        legalName: this.ProfileForm.controls.legalName.value\r\n          ? this.ProfileForm.controls.legalName.value\r\n          : null,\r\n        businessType: this.ProfileForm.controls.businessType.value\r\n          ? this.ProfileForm.controls.businessType.value\r\n          : null,\r\n        gstType: this.ProfileForm.controls.gstType.value,\r\n        gstStatus: this.ProfileForm.controls.gstStatus.value,\r\n        // ...(this.ProfileForm.controls.compositeType.value == \"Composite\") && ({ \"compositeType\": this.ProfileForm.controls.compositeType.value }),\r\n        compositeType: this.ProfileForm.controls.compositeType.value\r\n          ? this.ProfileForm.controls.compositeType.value\r\n          : \"Trader\",\r\n        gstinNo: this.ProfileForm.controls.gstinNo.value\r\n          ? this.ProfileForm.controls.gstinNo.value.toUpperCase()\r\n          : null,\r\n        accountMethod: this.ProfileForm.controls.accountMethod.value,\r\n        state: this.ProfileForm.controls.state.value,\r\n        //   \"legalName\": this.ProfileForm.controls.legalName.value,\r\n        totalPlaces: 0,\r\n        category: [...this.categoryId, ...this.businesscategory],\r\n        tradeName: this.ProfileForm.controls.tradeName.value,\r\n        panNumber: this.ProfileForm.controls.panNumber.value,\r\n        financialYearFrom: this.ProfileForm.controls.financialYearFrom.value,\r\n        bookBeginningFrom: this.ProfileForm.controls.bookBeginningFrom.value,\r\n        cinNumber: this.ProfileForm.controls.cinNumber.value ? this.ProfileForm.controls.cinNumber.value : null,\r\n      },\r\n      address: {\r\n        state: this.ProfileForm.controls.state.value,\r\n        pincode: this.ProfileForm.controls.pincode.value,\r\n        city: this.ProfileForm.controls.district.value ? this.ProfileForm.controls.district.value : \"\",\r\n        district: this.ProfileForm.controls.district.value,\r\n        // landmark: this.ProfileForm.controls.landmark.value ? this.ProfileForm.controls.landmark.value : \"landmark\",\r\n        country: this.ProfileForm.controls.country.value,\r\n        // homeno: \"homeno\",\r\n        address: this.ProfileForm.controls.address.value,\r\n      },\r\n      businesses: this.ProfileForm.controls.businessNature.value,\r\n      categoryBusiness: [...this.categoryId, ...this.businesscategory],\r\n      // businessCategory: this.ProfileForm.controls.categoryCtrl.value,\r\n    };\r\n\r\n    let finalObject;\r\n\r\n    if (!this.isShown) {\r\n      finalObject = registerdProfileData;\r\n    } else {\r\n      finalObject = registerdProfileData;\r\n      // finalObject = profileData;\r\n    }\r\n\r\n    if (this.ProfileForm.valid) {\r\n      this.profileService\r\n        .updateUserprofile(finalObject, this.currentUser.id)\r\n        .then(\r\n          (res) => {\r\n            if (res.success) {\r\n              this.addBusinessPartners()\r\n              this.addDetailsAPI()\r\n              this.router.navigate([\"/pages/warehouse-landing/warehouse-profile\"]);\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.ststus == 500) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"err.error.error_message\",\r\n              });\r\n            }\r\n          }\r\n        );\r\n    } else {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Please Fill Up Mandatory Details First Before Submit\",\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add multiple address\r\n   */\r\n  addMultipleAddress() {\r\n    const newAddress = this.addressForm.get('addresses').value[this.addressControls.length - 1];\r\n    // Check if the new address is not null and contains valid data\r\n    if (newAddress  && newAddress.address && newAddress.city && newAddress.country && newAddress.district && newAddress.homeno && newAddress.landmark && newAddress.pincode && newAddress.state) {\r\n      var addressData = {\r\n        id: newAddress.id || \"\",\r\n        address: newAddress.address,\r\n        city: newAddress.city,\r\n        country: newAddress.country,\r\n        district: newAddress.district,\r\n        homeno: newAddress.homeno,\r\n        landmark: newAddress.landmark,\r\n        pincode: newAddress.pincode.toString(),\r\n        state: newAddress.state\r\n      };\r\n\r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.currentUser.id)\r\n        .then(\r\n          (res) => {\r\n            if (res.success) {\r\n              this.toastService.toastMsg({\r\n                title: \"Success\",\r\n                content: \"Address Added Successfully!!!\",\r\n              })\r\n              this.addressArray = [];\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.status === 400) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Fill All Additional Address Details.\",\r\n              });\r\n            }\r\n          }\r\n        );\r\n\r\n    } else if (newAddress &&  newAddress.address && newAddress.city && newAddress.country && newAddress.district && newAddress.homeno && newAddress.landmark && newAddress.state) {\r\n      var addressData = {\r\n        id: newAddress.id || \"\",\r\n        address: newAddress.address,\r\n        city: newAddress.city,\r\n        country: newAddress.country,\r\n        district: newAddress.district,\r\n        homeno: newAddress.homeno,\r\n        landmark: newAddress.landmark,\r\n        pincode:newAddress.pincode.toString(),\r\n        state: newAddress.state\r\n      };\r\n\r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.currentUser.id)\r\n        .then(\r\n          (res) => {\r\n            if (res.success) {\r\n              this.toastService.toastMsg({\r\n                title: \"Success\",\r\n                content: \"Address Added Successfully!!!\",\r\n              })\r\n              this.addressArray = [];\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.status === 400) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Fill All Additional Address Details.\",\r\n              });\r\n            }\r\n          }\r\n        );\r\n\r\n    }\r\n  }\r\n\r\n  addDetails() {\r\n    this.partnerSubmitted = true\r\n    if (this.businessForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else {\r\n      let partner = {\r\n        \"documentNumber\": this.businessForm.value?.documentNumber,\r\n        \"licenceAndCertificate\": this.businessForm.value?.licenceAndCertificate,\r\n      }\r\n      this.additionaDetailsData.push(partner);\r\n      this.additionaList.push(partner);\r\n      this.businessForm.reset();\r\n    }\r\n  }\r\n\r\n  addDetailsAPI() {\r\n    if (this.businessForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else if (!(this.businessForm.value?.documentNumber === \"\" || this.businessForm.value?.documentNumber === null) && !(this.businessForm.value?.licenceAndCertificate === \"\" || this.businessForm.value?.licenceAndCertificate === null)) {\r\n      let partner = {\r\n        \"documentNumber\": this.businessForm.value?.documentNumber,\r\n        \"licenceAndCertificate\": this.businessForm.value?.licenceAndCertificate,\r\n      }\r\n      this.additionaList.push(partner);\r\n      this.profileService.addLicDocument(this.additionaList, this.currentUser.id).then((res) => {\r\n        if (res.success) {\r\n          this.businessForm.reset();\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  addPartner(event: KeyboardEvent): void {\r\n    if (event) {\r\n      event.preventDefault(); // Prevent the default behavior of the Enter key\r\n    }\r\n    this.partnerSubmitted = true\r\n    if (this.businessForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Requirted Fields.\",\r\n      });\r\n    }\r\n    else {\r\n      let partner = {\r\n        \"position\": this.businessForm.value?.position,\r\n        \"nameOfPartner\": this.businessForm.value?.nameOfPartner,\r\n      }\r\n      this.partnerDetails.push(partner);\r\n      this.partners.push(partner);\r\n      this.businessForm.reset();\r\n    }\r\n  }\r\n\r\n  openEditModal(i: number, partner: any): void {\r\n    const dialogRef = this.dialog.open(EditBusinessPartnerModalComponent, {\r\n      width: '400px',\r\n      data: { position: partner.position, nameOfPartner: partner.nameOfPartner, businessType: this.ProfileForm.value?.businessType, partnerId: partner.id }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.getallPartnerList()\r\n        // Update the edited partner in the partnerForms array\r\n        let partner = this.businessForm[i].patchValue({\r\n          position: result.position,\r\n          nameOfPartner: result.nameOfPartner,\r\n        });\r\n        this.partnerDetails.push(partner);\r\n      }\r\n    });\r\n  }\r\n\r\n  addBusinessPartners() {\r\n    if (this.businessForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Requirted Fields.\",\r\n      });\r\n      return false;\r\n    }\r\n    else if (!(this.businessForm.value.position === \"\" || this.businessForm.value.position === null) && !(this.businessForm.value.nameOfPartner === \"\" || this.businessForm.value.nameOfPartner === null)) {\r\n      let partner = {\r\n        \"position\": this.businessForm.value?.position,\r\n        \"nameOfPartner\": this.businessForm.value?.nameOfPartner,\r\n      }\r\n      this.partners.push(partner);\r\n    }\r\n    this.profileService.addBusinessPartners(this.partners, this.currentUser.id).then((res) => {\r\n      if (res.success) {\r\n        this.partners = []\r\n        this.addDetailsAPI()\r\n        this.businessForm.reset();\r\n        this.updated = true;\r\n      }\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  deletePartner(partnerId) {\r\n    this.profileService.deletePartner({}, this.currentUser.id, partnerId).then((res) => {\r\n      this.getallPartnerList()\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Partner Deleted Successfully!!!\",\r\n      })\r\n\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  isInvalidDate(event) {\r\n    let test = event.target.value;\r\n\r\n    if (test == \"Invalid date\") {\r\n      event.target.value = formatDate(new Date(), \"DD/MM/\", \"en\"); // Change it here\r\n    }\r\n  }\r\n\r\n  /**\r\n   * update multiple address by addressId\r\n   * @param item\r\n   */\r\n  updateMultipleAddress(item) {\r\n    let data = {\r\n      homeno: item.value.homeno ? item.value.homeno : \"\",\r\n      landmark: item.value.landmark ? item.value.landmark : \"\",\r\n      district: item.value.district ? item.value.district : \"\",\r\n      pincode: item.value.pincode ? item.value.pincode : \"\",\r\n      address: item.value.address ? item.value.address : \"\",\r\n      city: item.value.city ? item.value.city : \"\",\r\n      state: item.value.state ? item.value.state : \"\",\r\n      country: item.value.country ? item.value.country : \"\",\r\n    };\r\n    this.profileService\r\n      .updateMultipleAddress(data, item.value.id)\r\n      .then((res) => {\r\n        if (res) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Address Updated Successfully!!!\",\r\n          })\r\n        }\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Delete Addresses by addressId\r\n   * @param item\r\n   */\r\n  deleteAddress(item) {\r\n    this.profileService.deleteAddressById({}, item.value.id).then((res) => {\r\n      if (res) {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Address Deleted Successfully!!!\",\r\n        })\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Additional Place Of Business\r\n  addPlaceOfBusiness() {\r\n    if (this.businessPlaceAdd.valid) {\r\n      const addressData = this.businessPlaceAdd.value;\r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.shopId)\r\n        .then(\r\n          (res) => {\r\n            if (res.success) {\r\n              this.toastService.toastMsg({\r\n                title: \"Success\",\r\n                content: \"Address Added Successfully!!!\",\r\n              })\r\n            \r\n              this.businessPlaceAdd.reset();\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.status == 400) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Fill All Additional Address Details.\",\r\n              });\r\n            } else {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Something went wrong\",\r\n              });\r\n            }\r\n          }\r\n        );\r\n    } else {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update Mobile\r\n   */\r\n  updateMobile() {\r\n    let data = {\r\n      mobile: this.ProfileForm.controls.mobile.value,\r\n    };\r\n    this.profileService\r\n      .updateClientMobileOTP(data, this.currentUser.id)\r\n      .then((res) => {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"OTP Sent Successfully!!!\",\r\n        })\r\n      });\r\n  }\r\n\r\n  updateMobileNumber() {\r\n    let data = {\r\n      email: this.ProfileForm.controls.email.value,\r\n      mobile: this.ProfileForm.controls.mobile.value,\r\n      mobileotp: this.mobileOtp,\r\n    };\r\n    this.profileService.updateClientMobile(data).then((res) => {\r\n      this.toastService.toastMsg({\r\n        title: \"Success\",\r\n        content: \"Mobile Number Verified Successfully!!!\",\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * add category name in categortNames array\r\n   * @param event\r\n   */\r\n  add(event: MatChipInputEvent): void {\r\n    let input = event.input;\r\n    let value = event.value;\r\n    // Add our category\r\n    if ((value || \"\").trim()) {\r\n      this.typeList.push(value.trim());\r\n    }\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = \"\";\r\n    }\r\n    this.categoryCtrl.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * remove/delete selected category\r\n   * @param category\r\n   */\r\n  remove(category: any): void {\r\n    let index = this.categoryName.indexOf(category);\r\n    if (index >= 0) {\r\n      this.categoryName.splice(index, 1);\r\n      this.categoryId.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * called when category selected from dropdown\r\n   * @param event\r\n   */\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    let newValue = event.option.viewValue;\r\n    if (this.categoryName.includes(newValue)) {\r\n      this.categoryName = [\r\n        ...this.categoryName.filter((category) => category !== newValue),\r\n      ];\r\n    } else {\r\n      this.categoryName.push(event.option.viewValue);\r\n    }\r\n    this.categoryInput.nativeElement.value = \"\";\r\n\r\n    // keep the autocomplete opened after each item is picked.\r\n    requestAnimationFrame(() => {\r\n      this.openAuto(this.matACTrigger);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * open category dropdown panel\r\n   * @param trigger\r\n   */\r\n  openAuto(trigger: MatAutocompleteTrigger) {\r\n    trigger.openPanel();\r\n    this.categoryInput.nativeElement.focus();\r\n  }\r\n\r\n  searchCategoryByCategory(categoryInput) {\r\n    this.profileService.getCategoryBySearch({}, categoryInput).then((res) => {\r\n      this.serachByCategory = res.data;\r\n    });\r\n  }\r\n  /**\r\n   * Get all categories\r\n   */\r\n  getBusinessCategory() {\r\n    this.profileService.getBuisnessCategoryAll({}).then((res) => {\r\n      this.categoryBusiness = res.data.rows;\r\n      this.filteredCategory = this.categoryCtrl.valueChanges.pipe(\r\n        startWith(\"\"),\r\n        map((name) =>\r\n          name ? this.filterNames(name) : this.categoryBusiness.slice()\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * filter search category names\r\n   * @param name\r\n   * @returns\r\n   */\r\n  private filterNames(name: string): string[] {\r\n    return this.categoryBusiness.filter((list) => {\r\n      list.category.toLowerCase().indexOf(name) === 0\r\n    }\r\n    );\r\n  }\r\n\r\n  public array = [];\r\n  getCategoryId(list) {\r\n    this.array.push(list.id);\r\n    this.categoryId = this.array.filter(\r\n      (item, index, self) => self.indexOf(item) === index\r\n    );\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  signatureDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  signatureDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  signatureLoad() {\r\n    this.imageLoaded = true;\r\n  }\r\n\r\n  signatureDrop(e) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n  }\r\n\r\n  signatureChange(e) {\r\n    var pattern = /image-*/;\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    const fileSizeLimit = 1 * 1024 * 1024; // 6 MB\r\n    if (!file.type.match(pattern)) {\r\n      alert(\"invalid format\");\r\n      return;\r\n    }\r\n    if (file.size > fileSizeLimit) {\r\n      alert(\"File size exceeds the limit. Please select a smaller image (up to 1 MB).\");\r\n      return;\r\n    }\r\n    this.loaded = false;\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        this.signImg = reader.result;\r\n      };\r\n      if (file === null) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Please Select Image To Upload.\",\r\n        });\r\n      } else {\r\n        formdata.set(\"uploadSignature\", file);\r\n        e.srcElement.value = \"\";\r\n        this.profileService\r\n          .signatureImgAPI(formdata, this.currentUser.id)\r\n          .then((res) => {\r\n            this.toastService.toastMsg({\r\n              title: \"Success\",\r\n              content: \"Image Uploaded Successfully!!!\",\r\n            })\r\n          \r\n          },\r\n            (err) => {\r\n            })\r\n        this.loaded = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  handleDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  handleDrop(e) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n    this.handleInputChange(e);\r\n  }\r\n\r\n  handleImageLoad() {\r\n    this.imageLoaded = true;\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    var pattern = /image-*/;\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    const fileSizeLimit = 1 * 1024 * 1024; // 6 MB\r\n    if (!file.type.match(pattern)) {\r\n      alert(\"invalid format\");\r\n      return;\r\n    }\r\n    if (file.size > fileSizeLimit) {\r\n      alert(\"File size exceeds the limit. Please select a smaller image (up to 1 MB).\");\r\n      return;\r\n    }\r\n   \r\n    this.loaded = false;\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        this.profilePic = reader.result;\r\n      };\r\n      if (file == null) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Please Select Image To Upload.\",\r\n        });\r\n      } else {\r\n        formdata.set(\"upload\", file);\r\n        e.srcElement.value = \"\";\r\n        this.profileService\r\n          .postProfileImage(formdata, this.currentUser.id)\r\n          .then((res) => {\r\n            this.toastService.toastMsg({\r\n              title: \"Success\",\r\n              content: \"Image Uploaded Successfully!!!\",\r\n            })\r\n            this.partyService.notifyPartyAdded();\r\n          });\r\n        this.loaded = true;\r\n      }\r\n    }\r\n  }\r\n  // }\r\n\r\n  deleteProfilePic() {\r\n    // Clear the profilePic value\r\n    this.profilePic = '';\r\n    let formdata = new FormData();\r\n    formdata.set(\"upload\", null); // Sending an empty file or null to indicate deletion\r\n    this.profileService.deleteProfileImg(formdata, this.currentUser.id)\r\n      .then((res) => {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Image Deleted Successfully!!!\",\r\n        })\r\n        this.partyService.notifyPartyAdded();\r\n        this.profilePic = null; // Clear the profilePic value\r\n        this.loaded = true;\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n\r\n  deleteSignature() {\r\n    // Clear the profilePic value\r\n    this.signImg = '';\r\n    let formdata = new FormData();\r\n    formdata.set(\"uploadSignature\", null);\r\n    this.profileService\r\n      .deleteSignature(formdata, this.currentUser.id)\r\n      .then((res) => {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Image Deleted Successfully!!!\",\r\n        })\r\n        this.signImg = null;\r\n        this.loaded = true;\r\n      },\r\n        (err) => {\r\n        })\r\n  }\r\n\r\n  openDatePicker() {\r\n    const selectedDate = this.ProfileForm.get('bookBeginningFrom').value;\r\n    // Check if selectedDate is a Date object\r\n    if (selectedDate instanceof Date && !isNaN(selectedDate.getTime())) {\r\n      // If it's a valid Date, continue with your logic\r\n      console.log('Selected Date:', selectedDate);\r\n    } else {\r\n      // If selectedDate is not a valid Date, set a default date or any valid date here\r\n      this.ProfileForm.get('bookBeginningFrom').setValue(new Date());\r\n    }\r\n  }  \r\n\r\n  openDatepicker1() {\r\n    // Check if the current value of taskdate is an \"Invalid Date\"\r\n    const selectedDate = this.ProfileForm.get('financialYearFrom').value;\r\n    if (isNaN(selectedDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.ProfileForm.get('financialYearFrom').setValue(new Date());\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shop-profile',\r\n  templateUrl: './shop-profile.component.html',\r\n  styleUrls: ['./shop-profile.component.scss']\r\n})\r\nexport class ShopProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>shop-profile works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ShopProfileSettingsComponent } from './components/shop-profile-settings/shop-profile-settings.component';\r\nimport { ShopProfileComponent } from './components/shop-profile/shop-profile.component';\r\nimport { ShopSettingsComponent } from './shop-settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: ShopSettingsComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'shop-profile-settings',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'shop-profile-settings',\r\n        component: ShopProfileSettingsComponent,\r\n      }, \r\n      {\r\n        path:'shop-profile',\r\n        component: ShopProfileComponent,\r\n      }, \r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ShopSettingsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shop-settings',\r\n  templateUrl: './shop-settings.component.html',\r\n  styleUrls: ['./shop-settings.component.scss']\r\n})\r\nexport class ShopSettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ShopSettingsRoutingModule } from './shop-settings-routing.module';\r\nimport { ShopSettingsComponent } from './shop-settings.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ShopProfileComponent } from './components/shop-profile/shop-profile.component';\r\nimport { ShopProfileSettingsComponent } from './components/shop-profile-settings/shop-profile-settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShopSettingsComponent,\r\n    ShopProfileComponent,\r\n    ShopProfileSettingsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ShopSettingsRoutingModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,    \r\n    FormsModule,\r\n    // SharedModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class ShopSettingsModule { }\r\n"]}