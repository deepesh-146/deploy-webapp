{"version":3,"mappings":"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","names":["PurchaseModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_purchsae_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","src_app_material_module__WEBPACK_IMPORTED_MODULE_4__","_angular_material_input__WEBPACK_IMPORTED_MODULE_8__","_angular_material_button__WEBPACK_IMPORTED_MODULE_9__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_10__","_angular_material_core__WEBPACK_IMPORTED_MODULE_11__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_12__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_13__","_angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_14__","_angular_forms__WEBPACK_IMPORTED_MODULE_15__","_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_16__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_17__","declarations","_request_order_request_order_component__WEBPACK_IMPORTED_MODULE_2__","_request_order_modal_request_order_modal_component__WEBPACK_IMPORTED_MODULE_3__","_purchase_purchase_component__WEBPACK_IMPORTED_MODULE_1__","imports","_angular_core__WEBPACK_IMPORTED_MODULE_0__","PurchaseComponent","JSON","parse","localStorage","getItem","selectors","decls","vars","consts","template","routes","path","component","_purchase_purchase_component__WEBPACK_IMPORTED_MODULE_0__","children","redirectTo","pathMatch","_Invoice_purchase_invoice_purchase_invoice_component__WEBPACK_IMPORTED_MODULE_1__","_Invoice_purchase_invoice_list_purchase_invoice_list_component__WEBPACK_IMPORTED_MODULE_2__","_Invoice_sundry_creditor_sundry_creditor_component__WEBPACK_IMPORTED_MODULE_5__","_payment_out_payment_out_component__WEBPACK_IMPORTED_MODULE_8__","_payment_out_list_payment_out_list_component__WEBPACK_IMPORTED_MODULE_9__","_purchase_order_purchase_order_component__WEBPACK_IMPORTED_MODULE_6__","_purchase_order_list_purchase_order_list_component__WEBPACK_IMPORTED_MODULE_7__","_Invoice_puchase_return_puchase_return_component__WEBPACK_IMPORTED_MODULE_3__","_Invoice_purchase_return_list_purchase_return_list_component__WEBPACK_IMPORTED_MODULE_4__","_request_order_request_order_component__WEBPACK_IMPORTED_MODULE_10__","data","routerLinkActiveOptions","exact","PurchsaeRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_12__","_angular_core__WEBPACK_IMPORTED_MODULE_9__","i_r17","$event","RequestOrderModalComponent","formBuilder","activeModal","dialogRef","partyService","commonService","router","toastService","saleInvoiceService","biddingService","titleCasePipe","profileService","warehouseService","modal","saleorderservice","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","src_assets_langTranslation_language_translation__WEBPACK_IMPORTED_MODULE_0__","today","Date","maxDate","getFullYear","getMonth","PartyForm","group","gstType","gstIn","partyName","mobile","email","billingAddress","shippingAddress","balanceStatus","isCustomer","todaysDate","getAllParties","getWarehouseList","requestOrderForm","warehouse","orderNo","orderDate","controls","getUserProfile","currentUser","id","then","userProfileGSTNo","res","additional","gstinNo","slice","item","partyId","partyData","forEach","ele","purchaseOrderGst","patchValue","gstStateMatch","supplytype","getPartyByName","response","rows","allPartyList","filteredOptions","myControl","valueChanges","pipe","name","filterNames","filter","partyList","toLowerCase","indexOf","getAllPartiesDetails","partyPagesize","currentPageNo","pageData","barcode","price","additionalCess","gstInPer","totalPrice","subTotal","gstRate","productData","element","salePrice","basePrice","purchasePrice","quantity","gstAmount","total","isShown","totalGST","gstInRs","compositeType","i","calculationTotal","getAllWarehouse","userId","parentId","size","page","search","warehouseList","err","error","expose","toastMsg","title","content","transform","error_message","sign","splice","length","searchKey","getGoodsList","value","String","trim","getAllProductsByUserSearch","success","searchedProduct","productOptions","myControl1","event","isUserInput","getGoodsByBarcode","existingProductIndex","findIndex","product","push","addDetailsButtonClick","document","getElementById","nodeValue","get","addRolesPermission","read","checked","isShippingAddressinModal","isShowGstFields","unitValue","gstin","index","fieldArray","charCode","which","keyCode","TRN","isDisabledGST","setErrors","incorrect","click","submittedParty","addPartyObject","finalObject","toString","postParty","paramID","reset","dismissAll","open","centered","backdrop","imageLoaded","e","purchaseImage","target","files","AddReceiptName","file","fileType","type","imageSrc1","reader","FileReader","readAsDataURL","onload","imageSrc","result","PurchaseType","submitted","invalid","productId","amount","sendArray","basic","requesterId","senderId","note","metadata","date","address","products","requestStockTransfer","notifyDataAdded","close","errorMessage","includes","isNaN","getTime","setValue","dueDate","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__","viewQuery","ctx","_r6","_angular_core__WEBPACK_IMPORTED_MODULE_4__","RequestOrderComponent","dialog","route","rxjs__WEBPACK_IMPORTED_MODULE_5__","getAllStockTransfer","rowAdded$","subscribe","searchSubscription","searchSubject","isLoading","searchShippingList","status","shippingList","warehouseId","isdeleted","isdeletedParty","selectedIdList","shippingIdList","checkSingleArray","archivedPartyIds","unarchivedPartyIds","party","find","isDeleted","allArchived","every","allUnarchived","alert","checkSelectsingle","upiCheckedId","isChecked","allSelect","checkSelect","checkboxes","querySelectorAll","checkbox","inputElement","console","log","showUnarchiveButton","showDeleteButton","map","Error","totalPages","requestBody","archiveShippingLists","unArchiveShippingLists","setTimeout","next","excelFileUpload","pattern","test","formdata","FormData","set","uploadInput","MouseEvent","view","window","bubbles","cancelable","dispatchEvent","pageIndex","pagesize","pageSize","partyPageSize","_request_order_modal_request_order_modal_component__WEBPACK_IMPORTED_MODULE_0__","height","disableClose","position","right","afterClosed","packageData","filterValue","selectedTypeFilter","isFilterVisible"],"sources":["webpack:///src/app/pages/purchase/purchase.module.ts","webpack:///src/app/pages/purchase/purchase/purchase.component.html","webpack:///src/app/pages/purchase/purchase/purchase.component.ts","webpack:///src/app/pages/purchase/purchsae-routing.module.ts","webpack:///src/app/pages/purchase/request-order-modal/request-order-modal.component.html","webpack:///src/app/pages/purchase/request-order-modal/request-order-modal.component.ts","webpack:///src/app/pages/purchase/request-order/request-order.component.html","webpack:///src/app/pages/purchase/request-order/request-order.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PurchsaeRoutingModule } from './purchsae-routing.module';\r\nimport { PurchaseComponent } from './purchase/purchase.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RequestOrderComponent } from './request-order/request-order.component';\r\nimport { RequestOrderModalComponent } from './request-order-modal/request-order-modal.component';\r\n// import { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n@NgModule({\r\n  declarations: [\r\n    RequestOrderComponent,\r\n    RequestOrderModalComponent,\r\n    PurchaseComponent\r\n  \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PurchsaeRoutingModule,\r\n    RouterModule,\r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,    \r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class PurchaseModule { }\r\n","<div class=\"component-container container-fluid px-4 pt-5\">\r\n    <div id=\"navPanel\" class=\"row\">\r\n      <div class=\"navOptions col-xxl-8 col-xl-9 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row page-nav-link\" id = \"LinkPrint\" style=\"z-index: 1;\">\r\n          <div class=\"col-lg-3 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 text-nowrap\" routerLink=\"./purchase-invoice-list\" routerLinkActive=\"active-link\">Purchase Invoice List</a>\r\n          </div>\r\n          <div class=\"col-lg-2 col-md-4 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 text-nowrap\" routerLink=\"./purchase-out-list\" routerLinkActive=\"active-link\">Payment out List</a>\r\n          </div>\r\n          <div class=\"col-lg-2 col-md-3 col-sm-6 ps-3 links\">\r\n            <a class=\"mt-3 pb-1 text-nowrap\" routerLink=\"./sundry-creditor-list\" routerLinkActive=\"active-link\">Sundry Creditor</a>\r\n          </div>\r\n          <div class=\"col-lg-2 col-md-4 col-sm-6  links\">\r\n            <a class=\"mt-3 pb-1 text-nowrap\" routerLink=\"./purchase-order-list\" routerLinkActive=\"active-link\">Purchase Order List</a>\r\n          </div>\r\n          <div class=\"col-lg-2 col-md-4 col-sm-6 ps-3 links\">\r\n            <a class=\"mt-3 pb-1 text-nowrap\" routerLink=\"./purchase-return-list\" routerLinkActive=\"active-link\">Purchase Return List</a>\r\n          </div>\r\n          <div class=\"col-xxl-2 col-xl-2 col-lg-2 col-md-2 links\" *ngIf=\"currentUser.userType !== 'CLIENT'\">\r\n            <a class=\"mt-3 pb-1 text-nowrap\" routerLink=\"./request-order-list\" routerLinkActive=\"active-link\">Request Order List</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n  </div>\r\n  <hr class=\"mt-1\">\r\n  <div>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-purchase',\r\n  templateUrl: './purchase.component.html',\r\n  styleUrls: ['./purchase.component.scss']\r\n})\r\nexport class PurchaseComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PurchaseComponent } from './purchase/purchase.component';\r\nimport { PurchaseInvoiceComponent } from '../Invoice/purchase-invoice/purchase-invoice.component';\r\nimport { PurchaseInvoiceListComponent } from '../Invoice/purchase-invoice-list/purchase-invoice-list.component';\r\nimport { PuchaseReturnComponent } from '../Invoice/puchase-return/puchase-return.component';\r\nimport { PurchaseReturnListComponent } from '../Invoice/purchase-return-list/purchase-return-list.component';\r\nimport { SundryCreditorComponent } from '../Invoice/sundry-creditor/sundry-creditor.component';\r\nimport { PurchaseOrderComponent } from '../purchase-order/purchase-order.component';\r\nimport { PurchaseOrderListComponent } from '../purchase-order-list/purchase-order-list.component';\r\nimport { PaymentOutComponent } from '../payment-out/payment-out.component';\r\nimport { PaymentOutListComponent } from '../payment-out-list/payment-out-list.component';\r\nimport { RequestOrderComponent } from './request-order/request-order.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: '',\r\n    component : PurchaseComponent,\r\n    children : [\r\n      { \r\n        path: '', \r\n        redirectTo: 'purchase-invoice-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: \"purchase-invoice\",\r\n        component: PurchaseInvoiceComponent\r\n      },\r\n      {\r\n        path: \"purchase-invoice-list\",\r\n        component: PurchaseInvoiceListComponent,\r\n      },\r\n      {\r\n        path: \"sundry-creditor-list\",\r\n        component: SundryCreditorComponent\r\n      },\r\n      {\r\n        path: \"purchase-out\",\r\n        component: PaymentOutComponent\r\n      },\r\n      {\r\n        path: \"purchase-out-list\",\r\n        component: PaymentOutListComponent\r\n      },\r\n      {\r\n        path: \"purchase-order\",\r\n        component: PurchaseOrderComponent\r\n      },\r\n      {\r\n        path: \"purchase-order-list\",\r\n        component: PurchaseOrderListComponent\r\n      },\r\n      {\r\n        path: \"purchase-return\",\r\n        component: PuchaseReturnComponent,\r\n      },\r\n      {\r\n        path: \"purchase-return-list\",\r\n        component: PurchaseReturnListComponent,\r\n      },\r\n      {\r\n        path: \"request-order-list\",\r\n        component: RequestOrderComponent\r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forChild(routes)],\r\n\r\n})\r\nexport class PurchsaeRoutingModule { }\r\n","<div class=\"modal-header pt-0\" id=\"Add-Party-modal\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;margin-left: 5px;\" class=\"modal-title mb-0\">Request Order</h1>\r\n  \r\n    <div class=\"addProductButtons\">\r\n  \r\n      <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n        (click)=\"cancel()\">Cancel</button>\r\n  \r\n      <button type=\"submit\" class=\"btn btn-save\" (click)=\"postPurchase()\">Save</button>\r\n  \r\n    </div>\r\n  \r\n  </div>\r\n  \r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"requestOrderForm\">\r\n      <div class=\"row mb-3\">\r\n        <!-- <div style=\"font-size: 14px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\">\r\n          <label class=\"form-label\" style=\"font-size: 14px\">Vendor Name<span\r\n              class=\"error-asterisk\">*</span></label>\r\n          <mat-form-field style=\"font-size: 14px;\" class=\"example-full-width\" appearance=\"outline\"\r\n            style=\"height: 48px !important;margin-bottom: 16px;\">\r\n            <input type=\"text\" placeholder=\"Vendor Name\" aria-label=\"Select Vendor Name\" matInput\r\n              (keyup)=\"searchPartyByName($event.target.value)\" [formControl]=\"myControl\" [matAutocomplete]=\"auto\"\r\n              [ngClass]=\"{\r\n                    'is-invalid': (myControl.invalid && myControl.touched) && submitted }\" required>\r\n            <mat-autocomplete #auto=\"matAutocomplete\">\r\n              <mat-option>\r\n                <a class=\"mobVerify\" style=\"display: inline-block; width: 100%;\" aria-hidden=\"true\" title=\"Party\"\r\n                  (click)=\"openAddPartyModal(addParty)\">\r\n                  Add new Vendor\r\n                </a>\r\n              </mat-option>\r\n              <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.partyName\"\r\n                (onSelectionChange)=\"setSelectedPartyDeatails(option)\">\r\n                {{option.partyName}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n          <mat-error class=\"text-danger\" *ngIf=\"\r\n                    (submitted || myControl.touched) && myControl.errors?.required\r\n                  \">\r\n            Vendor Is Required!\r\n          </mat-error>\r\n  \r\n  \r\n          <label class=\"form-label\" style=\"font-size: 14px !important\" for=\"Order Date\">Order Date</label>\r\n          <mat-form-field style=\"font-size: 14px !important\" class=\"example-full-width\" appearance=\"outline\">\r\n            <input matInput required placeholder=\"Order Date\" id=\"Order Date\" [outsideClick]=\"true\" ngModel bsDatepicker\r\n              [maxDate]=\"today\" [(ngModel)]=\"todaysDate\" style=\"text-transform:uppercase!important;\"\r\n              formControlName=\"orderDate\"\r\n              [bsConfig]=\"{ dateInputFormat : 'DD MMM YYYY', containerClass: 'theme-dark-blue', displayOneMonthRange: true, showWeekNumbers:false }\"\r\n              [ngClass]=\"{\r\n              'is-invalid': (f.orderDate.invalid && f.orderDate.touched) && submitted }\">\r\n            <span>\r\n              <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n            </span>\r\n          </mat-form-field>\r\n          <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.orderDate.touched) && f.orderDate.errors?.required\"\r\n            (click)=\"openDatepickerOrderDate()\">\r\n            Order Date Is Required!\r\n          </mat-error>\r\n  \r\n        </div> -->\r\n  \r\n        <div style=\"font-size: 14px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\">\r\n          <label class=\"form-label\">Order No<span class=\"error-asterisk\">*</span></label>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matInput required type=\"text\" placeholder=\"Order No.\" (keypress)=\"numberOnly($event)\"\r\n              formControlName=\"orderNo\" autocomplete=\"off\" [ngClass]=\"{\r\n              'is-invalid': (f.orderNo.invalid && f.orderNo.touched) && submitted }\">\r\n          </mat-form-field>\r\n          <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.orderNo.touched) && f.orderNo.errors?.required\">\r\n            Order No Is Required!\r\n          </mat-error>\r\n  \r\n          <!-- <div class=\" col-xs-12 col-sm-12 col-md-6 col-lg-6\"> -->\r\n            <label class=\"form-label\">Warehouse<span class=\"error-asterisk\">*</span></label>\r\n            <mat-form-field class=\"example-full-width mb-2\" appearance=\"outline\">\r\n                <mat-select matNativeControl required disableOptionCentering formControlName=\"warehouse\" placeholder=\"Warehouse\">\r\n                    <mat-option *ngFor=\"let warehouse of warehouseList\" [value]=\"warehouse.id\">\r\n                        {{warehouse.firstName}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.warehouse.touched)\">\r\n                <mat-error *ngIf=\"f.warehouse.errors?.required\">\r\n                    Warehouse is required!\r\n                </mat-error>\r\n            </mat-error>\r\n        <!-- </div> -->\r\n  \r\n        </div>\r\n  \r\n        <div style=\"font-size: 14px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\">\r\n          <label class=\"form-label\">Billed From<span\r\n              class=\"error-asterisk\">*</span></label>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <textarea matInput rows=\"7\" placeholder=\"Billing Address\" formControlName=\"billingAddress\" required \r\n            [ngClass]=\"{\r\n                    'is-invalid': (f.billingAddress.invalid && f.billingAddress.touched) && submitted }\"></textarea>\r\n          </mat-form-field>\r\n          <mat-error class=\"text-danger\"\r\n            *ngIf=\"(submitted || f.billingAddress.touched) && f.billingAddress.errors?.required\">\r\n            Billing Address Is Required!\r\n          </mat-error>\r\n  \r\n        </div>\r\n      <!-- </div> -->\r\n  \r\n        <div style=\"font-size: 14px\" class=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\">\r\n          <label class=\"form-label\">Mobile No.</label>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matInput type=\"text\" (keypress)=\"numberOnly($event)\" placeholder=\"Mobile No.\" autocomplete=\"off\"\r\n              minlength=\"9\" maxlength=\"9\" formControlName=\"mobile\">\r\n          </mat-form-field>\r\n\r\n          <label class=\"form-label\" for=\"Order Date\">Order Date<span class=\"error-asterisk\">*</span></label>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input matInput required placeholder=\"Order Date\" id=\"Order Date\" [outsideClick]=\"true\" ngModel bsDatepicker\r\n              [(ngModel)]=\"todaysDate\" style=\"text-transform:uppercase;\" formControlName=\"orderDate\" (click)=\"openDatepickerOrderDate()\"\r\n              [bsConfig]=\"{ dateInputFormat : 'DD MMM YYYY', containerClass: 'theme-dark-blue', displayOneMonthRange: true, showWeekNumbers:false }\"\r\n              [ngClass]=\"{\r\n              'is-invalid': (f.orderDate.invalid && f.orderDate.touched) && submitted }\">\r\n            <span>\r\n              <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n            </span>\r\n          </mat-form-field>\r\n          <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.orderDate.touched) && f.orderDate.errors?.required\">\r\n            Order Date Is Required!\r\n          </mat-error>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"table-responsive my-custom-scrollbar\">\r\n        <table class=\"table table-bordered\">\r\n          <thead class=\"inner-model-table-heading\">\r\n            <tr class=\"font_size font-weight-bold\">\r\n              <th style=\"vertical-align: middle;\" scope=\"col\">#</th>\r\n              <th scope=\"col\" style=\"width: 10%;vertical-align: middle;\">\r\n                SKU<span class=\"text-danger\"> *</span>\r\n              </th>\r\n              <th style=\"vertical-align: middle;\" class=\"text-nowrap\">SKU Description</th>\r\n              <th style=\"vertical-align: middle;\">Unit</th>\r\n  \r\n              <th style=\"vertical-align: middle;\">Quantity</th>\r\n  \r\n              <th style=\"vertical-align: middle;\" scope=\"col\" colspan=\"1\" class=\"text-nowrap\">\r\n                {{ lang.Base_Price_In_Rs }}<span class=\"text-danger\"> *</span>\r\n              </th>\r\n              <th style=\"width: 10%; vertical-align: middle;\" scope=\"col\" colspan=\"1\" class=\"text-nowrap\">\r\n                {{ lang.GST }}<span class=\"text-danger\"> *</span>\r\n              </th>\r\n              <th style=\"vertical-align: middle;\" scope=\"col\" colspan=\"2\" class=\"text-nowrap\" *ngIf=\"isShown\">\r\n                Additional CESS (IN AED)<span class=\"text-danger\"> *</span>\r\n              </th>\r\n              <th style=\"vertical-align: middle;\" class=\"text-nowrap\" scope=\"col \">\r\n                Total (In AED)<span class=\"text-danger text-nowrap\"> *</span>\r\n              </th>\r\n              <th scope=\"col\" class=\"text-nowrap\" style=\"width:8%;vertical-align: middle;\">\r\n                Action<span class=\"text-danger\"> *</span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n  \r\n          <tbody>\r\n            <tr>\r\n              <td></td>\r\n              <td>\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"text\" id=\"inp12\" placeholder=\"SKU\" (input)=\"onSearchInputChange($event.target.value)\"\r\n                        matInput [formControl]=\"myControl1\" [matAutocomplete]=\"productAuto\">\r\n                    <mat-icon class=\"m-2\" matSuffix>search</mat-icon>        \r\n                    <mat-autocomplete #productAuto=\"matAutocomplete\">\r\n                        <mat-option *ngFor=\"let option of productOptions | async\" [value]=\"option.itemName\"\r\n                        (onSelectionChange)=\"getGoodsByBarcodeSelected(option.barcode,$event)\">\r\n                        <span style=\"font-size: 12px;\">\r\n                        {{option.itemName | titlecase}}/<b>{{ option.barcode}}</b>\r\n                        </span>\r\n                    </mat-option>\r\n                    </mat-autocomplete>\r\n                </mat-form-field>\r\n  \r\n              </td>\r\n              <td>\r\n                <input type=\"text\" matInput placeholder=\"SKU Description\" required />\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" matInput placeholder=\"Unit\" required />\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" matInput placeholder=\"Quantity\" style=\"width: 5rem;\" required />\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" matInput placeholder=\"Unit Price\" />\r\n              </td>\r\n  \r\n              <td>\r\n                <input type=\"text\" matInput required placeholder=\" %\" />\r\n              </td>\r\n  \r\n              <td>\r\n                <input type=\"text\" matInput placeholder=\"Amount\" style=\"max-width:150px;\" required />\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n            <tr *ngFor=\"let item of productData;let i=index\">\r\n              <td style=\"vertical-align: middle;\">{{ i + 1 }}</td>\r\n  \r\n              <td>\r\n                {{ item.barcode }}\r\n              </td>\r\n              <td>{{ item.itemName | titlecase}}</td>\r\n              <td class=\"text-center\">\r\n                <input type=\"text\" class=\"unitInput\" [value]=\"item.unit\" value=\"1\" placeholder=\"Unit\" readonly />\r\n              </td>\r\n  \r\n              <td style=\"display:flex;align-items: center;\">\r\n                <a class=\"border-white btn\" \r\n                  (click)=\"changeQuantity('-',i)\">-</a>\r\n                <input type=\"text\" matInput [value]=\"item.quantity\" placeholder=\"Quantity\"\r\n                  (change)=\"changeQuantity('qty',i,$event.target.value)\" style=\"width: 5rem;text-align: center;\"\r\n                  required />\r\n                <a class=\"border-white btn\" \r\n                  (click)=\"changeQuantity('+',i)\">+</a>\r\n              </td>\r\n              <td colspan=\"1\">\r\n                <!-- <input type=\"text\" matInput (change)=\"setPurchasePrice($event.target.value,i)\"> -->\r\n                <p class=\"\">\r\n                  0\r\n                </p>\r\n              </td>\r\n  \r\n              <td colspan=\"1\">\r\n                <!-- <input type=\"text\" matInput n (change)=\"setGST($event.target.value,i)\" [value]=\"item.gstRate\"> -->\r\n                <p class=\"\">\r\n                  0%\r\n                </p>\r\n              </td>\r\n  \r\n              <td style=\"max-width: 150px;display: flex;align-items:center;\">\r\n                <p class=\"mb-0\">AED&nbsp;</p>\r\n                <p class=\"mb-0\">0</p>\r\n                <!-- <p class=\"mb-0\">{{ item.total | number:'1.2-2'}}</p> -->\r\n              </td>\r\n              <td>\r\n                <button type=\"button\" class=\"text-center btnb\" style=\"width: 3rem!important;\"\r\n                  (click)=\"changeQuantity('rm',i)\">\r\n                  <span class=\"bi-trash fs-1\" style=\"color:red\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                    title=\"Delete\"></span>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n  \r\n      <!-- <div class=\"row\">\r\n        <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n          <label class=\"form-label\">Purchase Type<span class=\"error-asterisk\">*</span></label>\r\n          <mat-form-field style=\"font-size: 11px\" class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-select required placeholder=\"Purchase Type\" formControlName=\"PurchaseType\"\r\n              (selectionChange)=\"getCredit($event)\" [ngClass]=\"{\r\n              'is-invalid': (f.PurchaseType.invalid && f.PurchaseType.touched) && submitted }\">\r\n              <mat-option value=\"false\">Cash</mat-option>\r\n              <mat-option value=\"true\">Credit</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.PurchaseType.touched) && f.PurchaseType.errors?.required\">\r\n            Purchase Type Is Required!\r\n          </mat-error>\r\n        </div>\r\n  \r\n      </div>\r\n      <div class=\"row\">\r\n        <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n          <label class=\"form-label\">Description</label>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <textarea matInput rows=\"5\" formControlName=\"Description\" placeholder=\"Description\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n        <div style=\"font-size: 12px mt-2\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4 pt-4\">\r\n          <div class=\"{{imageSrc ? '':'dash'}} \" style=\"height: 79% !important;margin-top: 7px;\">\r\n  \r\n            <div (click)=\"cancelImage()\" *ngIf=\"imageSrc\" class=\"bi bi-x-circle text-danger fs-1 fw-bold\"\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"delete image\"></div>\r\n  \r\n            <div *ngIf=\"imageSrc1\">\r\n              <img class=\"m-2\" [src]=\"imageSrc ? imageSrc : ''\" (load)=\"handleImageLoad()\" [class.loaded]=\"imageLoaded\"\r\n                class=\"img-thumbnail text-center\" />\r\n            </div>\r\n            <p *ngIf=\"imageSrc\" class=\"p-2\">{{AddReceiptName}}</p>\r\n            <div class=\"input--file\">\r\n              <span *ngIf=\"!imageSrc\" class=\"fas fa-camera fs-1 mt-3\" style=\"padding-left: 45%\" (click)=\"startUpload()\">\r\n              </span>\r\n              <input name=\"Select File\" type=\"file\" id=\"uploadFile\" (change)=\"handleInputChange($event)\" />\r\n              <div *ngIf=\"!imageSrc\" class=\"mt-1 pl-0\">\r\n                <h2 class=\"text-bold text-center\">Add Receipt</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> \r\n  \r\n      </div> -->\r\n  \r\n  \r\n      <ng-template #addParty let-modal>\r\n        <div class=\"modal-content position-relative\">\r\n          <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n            <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" (click)=\"modalDismiss()\"\r\n              aria-label=\"Close\"></a>\r\n          </div>\r\n          <div class=\"modal-body p-0\">\r\n            <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n              <h2 class=\"mb-1\" style=\"color: #EB8B3F; font-weight: bolder;\" id=\"modalExampleDemoLabel\">Add New Vendor</h2>\r\n            </div>\r\n            <form [formGroup]=\"PartyForm\">\r\n              <div class=\"p-4 pb-0\">\r\n                <div class=\"form-check form-switch mb-0 lh-1 mb-3\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"isShowGstFields\"\r\n                    style=\"border:1px solid rgb(201, 199, 199) !important;\" id=\"flexSwitchCheckDefault\"\r\n                    (click)=\"customertoggleShow($event.target.checked)\" />\r\n                  <label class=\"lab text-nowrap p-1\"> As Customer </label>\r\n                </div>\r\n  \r\n                <div class=\"row d-flex justify-content-start\" *ngIf=\"!isShowGstFields\">\r\n  \r\n                  <div class=\"col-sm-12 col-md-6\" *ngIf=\"!isShowGstFields\">\r\n                    <div><mat-label>{{ lang.GSTIN }}<span class=\"error-asterisk\">*</span></mat-label></div>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 85%;\">\r\n                      <input type=\"text\" matInput formControlName=\"gstIn\" placeholder=\"{{lang.GSTIN }}\" #input1\r\n                        (keypress)=\"numberOnly($event)\" maxlength=\"15\" (input)=\"validateTRN($event.target.value)\"\r\n                        [ngClass]=\"{'is-invalid': (fp.gstIn.invalid && fp.gstIn.touched) && submittedParty }\" required>\r\n                    </mat-form-field>\r\n  \r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submittedParty && fp.gstIn.errors?.required)\">\r\n                      {{ lang.GSTIN }} is Required!\r\n                    </mat-error>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"fp.gstIn.invalid && (fp.gstIn.dirty || fp.gstIn.touched)\">\r\n                      Please enter the valid {{ lang.GSTIN }} number\r\n                    </mat-error>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"fp.gstIn.errors?.maxlength\">\r\n                      {{ lang.GSTIN }} must be of 15-digits\r\n                    </mat-error>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"fp.gstIn.errors?.minlength\">\r\n                      {{ lang.GSTIN }} must be of 15-digits\r\n                    </mat-error>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"fp.gstIn.errors?.pattern\">\r\n                      {{ lang.GSTIN }} must be valid number\r\n                    </mat-error>\r\n                  </div>\r\n  \r\n                </div>\r\n  \r\n                <div class=\"row d-flex justify-content-start\">\r\n                  <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n                    <label class=\"form-label\">Vendor Name<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <input matNativeControl required matInput placeholder=\"Vendor Name\" formControlName=\"partyName\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid': (fp.partyName.invalid && fp.partyName.touched) && submittedParty }\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submittedParty || fp.partyName.touched)\">\r\n                      <mat-error *ngIf=\"(submittedParty || fp.partyName.touched) && fp.partyName.errors?.required\">\r\n                        Vendor Name Is Required!\r\n                      </mat-error>\r\n                    </mat-error>\r\n  \r\n                  </div>\r\n  \r\n                  <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n                    <label class=\"form-label\">Mobile Number<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <input type=\"text\" placeholder=\"Mobile Number\" matInput formControlName=\"mobile\" minlength=\"9\"\r\n                        maxLength=\"9\" ngxOnlyNumbers [ngClass]=\"{\r\n                            'is-invalid': (fp.mobile.invalid && fp.mobile.touched) && submittedParty }\">\r\n                    </mat-form-field>\r\n  \r\n                    <mat-error class=\"text-danger\"\r\n                      *ngIf=\"(submittedParty || fp.mobile.touched) && fp.mobile.errors?.pattern\">\r\n                      Enter a valid mobile number.\r\n                    </mat-error>\r\n                    <mat-error class=\"text-danger\"\r\n                      *ngIf=\"(submittedParty || fp.mobile.touched) && fp.mobile.errors?.required\">\r\n                      Mobile Number is required.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"(submittedParty || fp.mobile.touched) && fp.mobile.errors?.maxlength\">\r\n                      Mobile Number must be of 9-digits\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"(submittedParty || fp.mobile.touched) && fp.mobile.errors?.minlength\">\r\n                      Mobile Number must be of 9-digits\r\n                    </mat-error>\r\n                  </div>\r\n  \r\n                  <div style=\"font-size: 12px\" class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n                    <label class=\"form-label\">E-Mail<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <input type=\"email\" placeholder=\"e-mail\" matInput formControlName=\"email\" [ngClass]=\"{\r\n                            'is-invalid': (fp.email.invalid && fp.email.touched) && submittedParty }\">\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\"\r\n                      *ngIf=\"(submittedParty || fp.email.touched) && fp.email.errors?.pattern\">\r\n                      Enter a valid email id.\r\n                    </mat-error>\r\n                    <mat-error class=\"text-danger\"\r\n                      *ngIf=\"(submittedParty || fp.email.touched) && fp.email.errors?.required\">\r\n                      Email id is required.\r\n                    </mat-error>\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row d-flex justify-content-start\">\r\n                  <div class=\"col-lg-4 col-sm-12 col-md-6\">\r\n                    <label class=\"form-label\">Billing Address<span class=\"error-asterisk\">*</span></label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <textarea matInput required formControlName=\"billingAddress\" placeholder=\"Enter your address\"\r\n                        [ngClass]=\"{\r\n                            'is-invalid': (fp.billingAddress.invalid && fp.billingAddress.touched) && submittedParty }\"></textarea>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"(submittedParty || fp.billingAddress.touched)\">\r\n                      <mat-error\r\n                        *ngIf=\"(submittedParty || fp.billingAddress.touched) && fp.billingAddress.errors?.required\">\r\n                        Billing Address Is Required!\r\n                      </mat-error>\r\n                    </mat-error>\r\n                  </div>\r\n  \r\n                  <div class=\"col-lg-4 col-sm-12 col-md-6\" *ngIf=\"isShippingAddressinModal\">\r\n                    <label class=\"form-label\">Shipping Address</label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <textarea matInput formControlName=\"shippingAddress\" placeholder=\"Enter your address\"></textarea>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"form-check form-check-inline mb-2\">\r\n                  <label class=\"form-check-label fs--1\" for=\"inlineCheckbox1\">Add Shipping Address</label>\r\n                  <input class=\"form-check-input fs--1\" id=\"inlineCheckbox1\" type=\"checkbox\"\r\n                    style=\"border:1px solid rgb(201, 199, 199) !important;\"\r\n                    (change)=\"showShippingAddressinModal($event.target.checked)\" />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-cancel\" (click)=\"modalDismiss()\">Close</button>\r\n            <button class=\"btn btn-save\" (click)=\"addNewParty()\" data-bs-dismiss=\"modal\">Add</button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n  \r\n    </form>\r\n  </div>","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { PartyService } from 'src/app/core/services/party.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { SaleInvoiceService } from 'src/app/core/services/sale-invoice.service';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { Observable } from 'rxjs';\r\nimport { BiddingService } from 'src/app/core/services/bidding.service';\r\nimport { FormArray } from '@angular/forms';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProfileService } from 'src/app/core/services/profile.service';\r\nimport { SaleOrderService } from 'src/app/core/services/sale-order.service';\r\nimport { Router } from '@angular/router';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport lang from \"src/assets/langTranslation/language_translation\"\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { WarehouseService } from 'src/app/core/services/warehouse.service';\r\n\r\n@Component({\r\n  selector: 'app-request-order-modal',\r\n  templateUrl: './request-order-modal.component.html',\r\n  styleUrls: ['./request-order-modal.component.scss']\r\n})\r\nexport class RequestOrderModalComponent implements OnInit {\r\n\r\n  @ViewChild('closebutton') closebutton;\r\n  // public PaymentInForm: FormGroup;\r\n  public gstAmount = 0;\r\n  public isShippingAddressinModal: any;\r\n  public isShowGstFields: boolean = false;\r\n  public gstDetails: any\r\n  public isShown: boolean = false;\r\n  public allPartyList: any;\r\n  public filteredOptions: any;\r\n  public myControl = new FormControl();\r\n  public myControl1 = new FormControl();\r\n  searchedProduct: any;\r\n  productOptions: Observable<any>;\r\n  public partyId: any;\r\n  public partyData: any\r\n  public unitValue: any;\r\n  public index: any;\r\n  public product: any;\r\n  public amount = 0;\r\n  public qty = 0;\r\n  public unit: any;\r\n  public wtax: any;\r\n  public wotax: any;\r\n  public ramount: any;\r\n  public taxAmount = 0\r\n  public fieldArray: Array<any> = [];\r\n  public today: Date;\r\n  public maxDate: Date;\r\n  public isDisabledGST: boolean = true;\r\n  public submittedParty: boolean = false;\r\n  public currentPageNo: number = 0;\r\n  public partyPagesize: number = 10;\r\n  public finalObject;\r\n  imageLoaded: boolean = false;\r\n  public purchaseImage: any;\r\n  public imageSrc: any = '';\r\n  public imageSrc1: any = '';\r\n  public todaysDate: any;\r\n  public todaysDate2: any;\r\n  public sendArray: any = [];\r\n  public totalPrice: any;\r\n  public barcode: any;\r\n  public refNo: any;\r\n  public saleInvoiceNo;\r\n  public SaleReturnNo;\r\n  public subTotal = 0;\r\n  public totalGST = 0;\r\n  public total = 0;\r\n  public additionalCess: number = 0;\r\n  public productData: any = [];\r\n  public submitted: boolean = false;\r\n  warehouseList: any;\r\n\r\n  public gstType: any;\r\n  public gstInRs: any\r\n  public gstInPer: any;\r\n  public compositeType: any;\r\n  public lblColor: boolean = false;\r\n  public gstRate = 0;\r\n  public gstStateMatch: boolean = true;\r\n  public requestOrderForm: FormGroup;\r\n  public purchaseOrderGst: any;\r\n  public userProfileGSTNo: any;\r\n  public supplytype: any;\r\n  public paramID: any;\r\n  public AddReceiptName: any;\r\n  public lang = lang.UAE;\r\n  // serialNumber: number = 1;\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  isArabic: any;\r\n  PartyForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder, public activeModal: NgbActiveModal, @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<RequestOrderModalComponent>,\r\n    private partyService: PartyService, private commonService: CommonService,\r\n    private router: Router,\r\n    private toastService: ToastNotificationService,\r\n    private saleInvoiceService: SaleInvoiceService,\r\n    private biddingService: BiddingService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private profileService: ProfileService,\r\n    private warehouseService: WarehouseService,\r\n    private modal: NgbModal, private saleorderservice: SaleOrderService) {\r\n\r\n    this.today = new Date();\r\n    this.maxDate = new Date(this.today.getFullYear(), this.today.getMonth(), 25);\r\n  }\r\n  ngOnInit(): void {\r\n    // Subscribe to the observable to receive updates\r\n    this.PartyForm = this.formBuilder.group({\r\n      gstType: [null],\r\n      gstIn: [\r\n        null,\r\n        [\r\n          Validators.minLength(15),\r\n          Validators.maxLength(15),\r\n        ],\r\n      ],\r\n      partyName: [\"\", [Validators.required]],\r\n      mobile: [\r\n        ,\r\n        [\r\n          Validators.minLength(9),\r\n          Validators.maxLength(9),\r\n          Validators.pattern(\"^[0-9]*$\"),\r\n          Validators.required,\r\n        ],\r\n      ],\r\n      email: [\r\n        null,\r\n        [\r\n          Validators.pattern(\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\" ),     \r\n              Validators.email,\r\n          Validators.required,\r\n        ],\r\n      ],\r\n      billingAddress: [null, [Validators.required]],\r\n      shippingAddress: [],\r\n      balanceStatus: [\"1\"],\r\n      isCustomer: [false],\r\n    });\r\n    // this.getProfileData();\r\n    this.todaysDate = new Date();\r\n    this.getAllParties();\r\n    this.getWarehouseList();\r\n    this.requestOrderForm = this.formBuilder.group({\r\n      partyName: [\"\"],\r\n      warehouse: [null, [Validators.required]],\r\n      orderNo: [\"\", [Validators.required]],\r\n      mobile: [\"\"],\r\n      orderDate: [\"\", [Validators.required]],\r\n      billingAddress: [\"\"]\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.requestOrderForm.controls;\r\n  }\r\n\r\n  getProfileData() {\r\n    this.profileService.getUserProfile({}, this.currentUser.id).then((res => {\r\n      this.userProfileGSTNo = res.data.additional.gstinNo ? res.data.additional.gstinNo.slice(0, 2) : \"\";\r\n    }))\r\n  }\r\n\r\n  setSelectedPartyDeatails(item) {\r\n    this.partyId = item.id;\r\n    if (this.partyData) {\r\n      this.partyData.forEach((ele) => {\r\n        this.purchaseOrderGst = ele.gstIn\r\n        this.requestOrderForm.patchValue({\r\n          'billingAddress': ele.billingAddress\r\n        })\r\n        if (this.purchaseOrderGst.slice(0, 2) == this.userProfileGSTNo) {\r\n          this.gstStateMatch = true\r\n          this.supplytype = \"INTRASTATE\"\r\n        }\r\n        else {\r\n          this.gstStateMatch = false;\r\n          this.supplytype = \"INTERSTATE\"\r\n        }\r\n      })\r\n\r\n    }\r\n    else {\r\n      this.saleInvoiceService.getPartyByName({}, this.currentUser.id, item.partyName)\r\n        .then((response: any) => {\r\n          this.partyData = response.data.rows;\r\n          this.allPartyList = response.data.rows;\r\n          this.allPartyList.forEach((ele) => {\r\n            this.purchaseOrderGst = ele.gstIn\r\n            this.requestOrderForm.patchValue({\r\n              'billingAddress': ele.billingAddress\r\n            })\r\n            if (this.purchaseOrderGst.slice(0, 2) == this.userProfileGSTNo) {\r\n              this.gstStateMatch = true\r\n              this.supplytype = \"INTRASTATE\"\r\n            }\r\n            else {\r\n              this.gstStateMatch = false;\r\n              this.supplytype = \"INTERSTATE\"\r\n            }\r\n          });\r\n        })\r\n      this.filteredOptions = this.myControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(name => name ? this.filterNames(name) : this.allPartyList.slice())\r\n      );\r\n\r\n    }\r\n\r\n  }\r\n  private filterNames(name: string): string[] {\r\n    return this.allPartyList.filter(partyList =>\r\n      partyList.partyName.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n\r\n  getAllParties() {\r\n    this.partyService\r\n      .getAllPartiesDetails({}, this.currentUser.id, this.partyPagesize, (this.currentPageNo + 1))\r\n      .then((res) => {\r\n        this.allPartyList = res.data.pageData;\r\n        this.filteredOptions = this.myControl.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(name => name ? this.filterNames(name) : this.allPartyList.slice())\r\n          );\r\n      });\r\n  }\r\n\r\n  get fp() {\r\n    return this.PartyForm.controls;\r\n  }\r\n\r\n  Units = [\r\n    \"NONE\",\r\n    \"BAG-BAGS\",\r\n    \"BAL-BALE\",\r\n    \"BDL-BUNDLES\",\r\n    \"BKL-BUCKLES\",\r\n    \"BOU-BILLIONS OF UNITS\",\r\n    \"BOX-BOX\",\r\n    \"BTL-BOTTLES\",\r\n    \"BUN-BUNCHES\",\r\n    \"CAN-CANS\",\r\n    \"CBM-CUBIC METER\",\r\n    \"CCM-CUBIC CENTIMETER)\",\r\n    \"CMS-CENTIMETER\",\r\n    \"CTN-CARTONS\",\r\n    \"DOZ-DOZEN\",\r\n    \"DRM-DRUM\",\r\n    \"GGR-GREAT GROSS\",\r\n    \"GMS-GRAMS\",\r\n    \"GRS-GROSS\",\r\n    \"GYD-GROSS YARDS\",\r\n    \"KGS-KILOGRAMS\",\r\n    \"KLR-KILOLITER\",\r\n    \"KME-KILOMETRE\",\r\n    \"MLT-MILLILITRE\",\r\n    \"MTR-METERS(MTR)\",\r\n    \"MTS-METRIC TONS\",\r\n    \"NOS-NUMBERS\",\r\n    \"PAC-PACKS\",\r\n    \"PCS-PIECES\",\r\n    \"PRS-PAIRS)\",\r\n  ]\r\n\r\n  async calculationTotal() {\r\n    this.barcode = \"\";\r\n    let price = 0;\r\n\r\n    let additionalCess = 0;\r\n    let gstInPer = 0;\r\n    this.totalPrice = 0;\r\n    this.subTotal = 0;\r\n    this.gstRate = 0;\r\n    this.productData.forEach((element) => {\r\n      let gstInPer = element.gstRate;\r\n\r\n      additionalCess = (element.salePrice * element.additionalCess) / 100;\r\n\r\n      element.basePrice = element.purchasePrice / (1 + element.gstRate / 100);\r\n      element.subTotal = element.basePrice * element.quantity;\r\n      element.gstAmount =\r\n        (element.purchasePrice - element.basePrice) * element.quantity;\r\n      this.gstRate = element.gstAmount + this.gstRate;\r\n\r\n      element.total = element.purchasePrice * element.quantity;\r\n      // total for all products in the array\r\n      price = element.total + price;\r\n      // total without gst for all products in the array\r\n      this.subTotal = element.subTotal + this.subTotal;\r\n\r\n      gstInPer = element.gstRate;\r\n      if (this.isShown) {\r\n        this.totalPrice = price;\r\n      } else {\r\n        this.totalPrice = price;\r\n      }\r\n    });\r\n\r\n    if (this.gstType === \"Exempted\") {\r\n      this.totalGST = 0;\r\n      this.gstInRs = 0;\r\n      this.gstInPer = 0;\r\n    } else if (this.gstType === \"Composite\") {\r\n      if (\r\n        this.compositeType == \"Manufacturer\" ||\r\n        this.compositeType == \"Trader\"\r\n      ) {\r\n        this.totalGST = (this.subTotal * 1) / 100;\r\n        this.gstInRs = 0;\r\n        this.gstInPer = 0;\r\n      } else if (this.compositeType == \"Restaurant\") {\r\n        this.totalGST = (this.subTotal * 5) / 100;\r\n        this.gstInRs = 0;\r\n        this.gstInPer = 0;\r\n      } else {\r\n        this.totalGST = (this.subTotal * 6) / 100;\r\n        this.gstInRs = 0;\r\n        this.gstInPer = 0;\r\n      }\r\n    } else {\r\n      this.totalGST = this.gstRate;\r\n      this.gstInRs = this.gstRate;\r\n      this.gstInPer = gstInPer;\r\n    }\r\n\r\n    this.additionalCess = additionalCess;\r\n    if (this.isShown) {\r\n      this.total = price;\r\n    } else {\r\n      this.total = price;\r\n    }\r\n  }\r\n\r\n  changeQtyCalculation(i) {\r\n    this.totalGST = (this.productData[i].salePrice * this.productData[i].quantity) * (this.productData[i].gstRate / 100);\r\n    this.subTotal = (this.productData[i].salePrice * this.productData[i].quantity);\r\n    this.total = this.totalGST + this.subTotal;\r\n    this.calculationTotal();\r\n  }\r\n\r\n  getWarehouseList() {\r\n    this.warehouseService.getAllWarehouse({\r\n      data:{}, \r\n      userId: this.currentUser.parentId, \r\n      size: 1000, \r\n      page: 1, \r\n      search:'', \r\n    }).then((res: any) => {\r\n      this.warehouseList = res.data.pageData;\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        })\r\n      };\r\n    })\r\n  }\r\n\r\n  changeQuantity(sign, i, quantity = 0) {\r\n    switch (sign) {\r\n      case \"-\":\r\n        if (this.productData[i].quantity > 1) {\r\n          this.productData[i].quantity = this.productData[i].quantity - 1;\r\n        }\r\n        // this.changeQtyCalculation(i);\r\n        this.calculationTotal();\r\n        break;\r\n      case \"+\":\r\n        this.productData[i].quantity = this.productData[i].quantity + 1;\r\n        // this.changeQtyCalculation(i);\r\n        this.calculationTotal();\r\n        break;\r\n      case \"rm\":\r\n        this.productData.splice(i, 1);\r\n        if (this.productData.length <= 0) {\r\n          this.totalGST = 0;\r\n          this.subTotal = 0;\r\n          this.total = 0;\r\n        }\r\n        this.calculationTotal();\r\n        break;\r\n      case \"qty\":\r\n        this.productData[i].quantity = quantity;\r\n        this.calculationTotal();\r\n        break;\r\n      default:\r\n        this.productData[i];\r\n        break;\r\n    }\r\n  }\r\n  // getGoodsByBarcode() {\r\n  //   this.saleInvoiceService.getGoodsByBarcode({}, this.barcode, this.currentUser.parentId ? this.currentUser.parentId : this.currentUser.id)\r\n  //     .then((response) => {\r\n  //       // Check if the barcode already exists in productData\r\n  //       const existingProductIndex = this.productData.findIndex(\r\n  //         (product) => product.barcode === response.data.barcode\r\n  //       );\r\n\r\n  //       if (existingProductIndex !== -1) {\r\n  //         // Barcode exists, update quantity\r\n  //         this.productData[existingProductIndex].quantity += 1;\r\n  //       } else {\r\n  //         // Barcode doesn't exist, add new product\r\n  //         response.data.quantity = 1;\r\n  //         this.productData.push(response.data);\r\n  //       }\r\n  //       this.calculationTotal();\r\n  //     });\r\n  // }\r\n  \r\n  \r\n  onSearchInputChange(searchKey: string) {\r\n    if (searchKey.length >= 3) {\r\n      this.getGoodsList(searchKey);\r\n    }\r\n  }\r\n\r\n  getGoodsList(value) {\r\n    if (value && (String(value).trim() !== '' || value !== null)) {\r\n      this.biddingService.getAllProductsByUserSearch({}, this.requestOrderForm.controls.warehouse.value ? this.requestOrderForm.controls.warehouse.value : this.currentUser.id, value, 1000, 1, this.requestOrderForm.controls.warehouse.value ? this.requestOrderForm.controls.warehouse.value : this.currentUser.id)\r\n        .then((res) => {\r\n          if(res.success) {\r\n            this.searchedProduct = res.data.pageData;\r\n            this.productOptions = this.myControl1.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(name => name ? this.filterNames(name) : this.searchedProduct.slice())\r\n              );\r\n            }\r\n        },\r\n          (err) => {\r\n            if (err.error.expose) {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: this.titleCasePipe.transform(err.error.error_message),\r\n              });\r\n            }\r\n            else {\r\n              this.toastService.toastMsg({\r\n                title: \"Error\",\r\n                content: \"Something Went Wrong.\",\r\n              });\r\n            }\r\n\r\n          })\r\n    } else {}\r\n  }\r\n\r\n  \r\n  getGoodsByBarcodeSelected(barcode, event) {\r\n    if (event.isUserInput) {\r\n      this.saleInvoiceService\r\n        .getGoodsByBarcode({}, barcode, this.requestOrderForm.controls.warehouse.value ? this.requestOrderForm.controls.warehouse.value : this.currentUser.id, this.requestOrderForm.controls.warehouse.value)\r\n        .then(async (response) => {\r\n          response.data.quantity = 1;\r\n          // Check if the barcode already exists in productData\r\n          const existingProductIndex = this.productData.findIndex(\r\n            (product) => product.barcode === response.data.barcode\r\n            );\r\n\r\n          if (existingProductIndex !== -1) {\r\n            // Barcode exists, update quantity\r\n            this.productData[existingProductIndex].quantity += 1;\r\n            // await this.checkFreeProducts(this.productData)\r\n            // await this.checkOffer(this.productData[existingProductIndex].quantity, this.productData[existingProductIndex].id)\r\n            // this.removeCoupon()\r\n          } else {\r\n            // Barcode doesn't exist, add new product\r\n            response.data.quantity = 1;\r\n            this.productData.push(response.data);\r\n            this.addDetailsButtonClick(this.productData.length - 1);\r\n            // await this.checkFreeProducts(this.productData)\r\n            // await this.checkOffer(response.data.quantity, response.data.id)\r\n            // this.removeCoupon()\r\n          }\r\n\r\n          this.calculationTotal();\r\n          this.myControl1.patchValue('')\r\n          document.getElementById('inp12').nodeValue = ''\r\n        }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: this.titleCasePipe.transform(err.error.error_message),\r\n            });\r\n          }\r\n          else {\r\n            this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: \"Something Went Wrong.\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  addDetailsButtonClick(i): void {\r\n    const content = this.requestOrderForm.get(\"subcheckbox\") as FormArray;\r\n    content.push(this.addRolesPermission(i));\r\n  }\r\n\r\n  addRolesPermission(id): FormGroup {\r\n    return new FormGroup({\r\n      read: new FormControl(false),\r\n    });\r\n  }\r\n\r\n  \r\n  showShippingAddressinModal(checked: boolean) {\r\n    this.isShippingAddressinModal = checked;\r\n  }\r\n  customertoggleShow(value) {\r\n    this.isShowGstFields = value;\r\n  }\r\n  getUnit(value) {\r\n    this.unitValue = \"1 \" + value;\r\n  }\r\n\r\n  getGstNumber(gstin) {\r\n\r\n\r\n  }\r\n  searchPartyByName(item) {\r\n    this.partyId = item.id;\r\n    this.saleInvoiceService.getPartyByName({}, this.currentUser.id, item.partyName)\r\n      .then((response) => {\r\n        this.partyData = response.data.rows;\r\n        this.partyData.forEach((ele) => {\r\n        })\r\n      });\r\n  }\r\n\r\n  deleteFieldValue(index) {\r\n    this.fieldArray.splice(index, 1);\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  validateTRN(TRN) {\r\n    if (TRN.length === 15) {\r\n      this.isDisabledGST = false;\r\n    } else {\r\n      this.isDisabledGST = true;\r\n      this.PartyForm.controls.gstIn.setErrors({ incorrect: true });\r\n    }\r\n  }\r\n\r\n  startUpload() {\r\n    document.getElementById('uploadFile').click();\r\n  }\r\n\r\n  addNewParty() {\r\n    this.submittedParty = true;\r\n    if (this.isShowGstFields) {\r\n      if ((this.PartyForm.controls.billingAddress.value == \"\" || this.PartyForm.controls.partyName.value == \"\"\r\n        || this.PartyForm.controls.mobile.value == \"\" || this.PartyForm.controls.email.value == \"\")) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Fill All Required Fields.\",\r\n        });\r\n        return false;\r\n      } else if ((this.PartyForm.controls.billingAddress.value == \"\" && this.PartyForm.controls.partyName.value == \"\"\r\n        && this.PartyForm.controls.mobile.value == \"\" && this.PartyForm.controls.email.value == \"\")) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Fill All Required Fields.\",\r\n        });\r\n      }\r\n      else {\r\n        this.addPartyObject();\r\n      }\r\n    }\r\n    else {\r\n      if ((this.PartyForm.controls.billingAddress.value == \"\" || this.PartyForm.controls.partyName.value == \"\"\r\n        || this.PartyForm.controls.mobile.value == \"\" || this.PartyForm.controls.email.value == \"\"\r\n        || this.PartyForm.controls.gstType.value == \"\" || this.PartyForm.controls.gstIn.value == \"\")) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Fill All Required Fields.\",\r\n        });\r\n        return false;\r\n      }\r\n\r\n      else {\r\n        this.addPartyObject();\r\n      }\r\n    }\r\n  }\r\n\r\n  addPartyObject() {\r\n    this.finalObject = {\r\n      \"partyDetails\": {\r\n        \"isCustomer\": this.isShowGstFields,\r\n        \"gstType\": this.PartyForm.controls.gstType.value ? this.PartyForm.controls.gstType.value : null,\r\n        \"gstIn\": this.PartyForm.controls.gstIn.value ? this.PartyForm.controls.gstIn.value : null,\r\n        \"partyName\": this.PartyForm.controls.partyName.value,\r\n        \"mobile\": this.PartyForm.controls.mobile.value ? (this.PartyForm.controls.mobile.value).toString() : null,\r\n        \"email\": this.PartyForm.controls.email.value,\r\n        \"warehouseId\": `${this.PartyForm.controls.warehouse.value}`,\r\n        \"billingAddress\": this.PartyForm.controls.billingAddress.value,\r\n        \"shippingAddress\": this.PartyForm.controls.shippingAddress.value,\r\n        \"openingBalance\": null,\r\n        \"asOfDate\": null,\r\n        \"balanceStatus\": this.PartyForm.controls.balanceStatus.value,\r\n        \"payment\": null,\r\n        \"creditPeriodDay\": null,\r\n        \"creditLimit\": null,\r\n        \"noOfCredits\": null,\r\n        \"relationSince\": null,\r\n        \"userId\": this.currentUser.id,\r\n        \"distance\": null,\r\n        \"transporation\": null,\r\n      },\r\n      \"groupAdd\": null\r\n    }\r\n\r\n    this.partyService.postParty(this.finalObject).then((res) => {\r\n      this.paramID = res.data.id\r\n      if (res) {\r\n        this.toastService.toastMsg({\r\n          title: \"Success\",\r\n          content: \"Party Added Successfully!!!\",\r\n        })\r\n        this.PartyForm.reset();\r\n        this.modal.dismissAll();\r\n        this.getAllParties();\r\n        this.submittedParty = false;\r\n      }\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: this.titleCasePipe.transform(err.error.error_message),\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n  }\r\n\r\n  openAddPartyModal(name) {\r\n    this.modal.open(name, {\r\n      centered: true,\r\n      backdrop: \"static\",\r\n      size: \"lg\"\r\n    });\r\n  }\r\n  modalDismiss() {\r\n    this.PartyForm.reset();\r\n    this.modal.dismissAll();\r\n  }\r\n  handleImageLoad() {\r\n    this.imageLoaded = true;\r\n  }\r\n  handleInputChange(e) {\r\n    this.purchaseImage = e.target.files[0];\r\n    this.AddReceiptName = e.target.files[0].name;\r\n\r\n    const file: File = e.target.files[0];\r\n    const fileType: string = file.type;\r\n\r\n    if (fileType === 'application/pdf' || fileType === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\r\n      this.imageSrc1 = false;\r\n\r\n    } else {\r\n      this.imageSrc1 = true;\r\n\r\n    }\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(this.purchaseImage);\r\n    reader.onload = () => {\r\n      this.imageSrc = reader.result;\r\n    }\r\n  }\r\n  cancelImage() {\r\n    this.imageSrc = null;\r\n    this.imageLoaded = false;\r\n  }\r\n  getCredit(e) {\r\n    if (e.value == \"true\") {\r\n      e.value = true;\r\n    } else {\r\n      e.value = false;\r\n    }\r\n    this.requestOrderForm.controls.PurchaseType = e.value;\r\n  }\r\n\r\n  postPurchase() {\r\n    this.submitted = true;\r\n    if (this.requestOrderForm.invalid) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Fill All Required Fields.\",\r\n      });\r\n      return false;\r\n    } else {\r\n      if (this.productData.length < 1) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Please Add At Least One Product To Proceed!!!\",\r\n        });\r\n        return false;\r\n      }\r\n      this.productData.forEach(e => {\r\n        let data = {\r\n          quantity: e.quantity,\r\n          productId: e.id,\r\n          barcode: e.barcode,\r\n          amount: e.purchasePrice\r\n        }\r\n        this.sendArray.push(data);\r\n      })\r\n\r\n      let data = {\r\n        basic: {\r\n          requesterId: this.currentUser.id,\r\n          senderId: this.requestOrderForm.controls.warehouse.value,\r\n          // \"invoiceNo\": this.requestOrderForm.controls.orderNo.value,\r\n          note: \"Your optional note here\",\r\n          metadata: \"SHOP Requesting warehouse\",\r\n          billingAddress: this.requestOrderForm.controls.billingAddress.value,\r\n          orderNo: this.requestOrderForm.controls.orderNo.value,         \r\n          date: this.requestOrderForm.controls.orderDate.value,\r\n          mobile: this.requestOrderForm.controls.mobile.value,\r\n          address: this.requestOrderForm.controls.billingAddress.value\r\n        },\r\n        products: this.sendArray\r\n      }\r\n\r\n      this.warehouseService.requestStockTransfer(data).then((res) => {\r\n        if (res.success) {\r\n          this.toastService.toastMsg({\r\n            title: \"Success\",\r\n            content: \"Request Sent Successfully!!!\",\r\n          })\r\n          this.commonService.notifyDataAdded();\r\n          this.dialogRef.close();\r\n        }\r\n      }, (err) => {\r\n        this.sendArray = [];\r\n        if (err.error.expose) {\r\n          let errorMessage = err.error.error_message;\r\n          if (errorMessage.includes('invoiceDetails.partyId')) {\r\n              errorMessage = \"Vendor Name is required. Please select a valid Vendor Name option.\";\r\n          } else {\r\n              errorMessage = this.titleCasePipe.transform(errorMessage);\r\n          }\r\n          this.toastService.toastMsg({\r\n              title: \"Error\",\r\n              content: errorMessage,\r\n          });\r\n        }\r\n        else {\r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: \"Something Went Wrong.\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  setGST(value, index) {\r\n    this.productData[index].gstRate = value;\r\n    this.calculationTotal();\r\n  }\r\n\r\n  setPurchasePrice(value, index) {\r\n    this.productData[index].purchasePrice = 0;\r\n    this.calculationTotal();\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n    this.submitted = false;\r\n    this.requestOrderForm.reset();\r\n  }\r\n\r\n  openDatepickerOrderDate() {\r\n    // Check if the current value of invoiceDate is an \"Invalid Date\"\r\n    const orderDate = this.requestOrderForm.get('orderDate').value;\r\n    if (isNaN(orderDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.requestOrderForm.get('orderDate').setValue(new Date());\r\n    }\r\n  }\r\n  \r\n  openDatepickerDueDate() {\r\n    // Check if the current value of invoiceDate is an \"Invalid Date\"\r\n    const dueDate = this.requestOrderForm.get('dueDate').value;\r\n    if (isNaN(dueDate.getTime())) {\r\n      // Set a default date or any valid date here\r\n      this.requestOrderForm.get('dueDate').setValue(new Date());\r\n    }\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoading\" class=\"loader-container\">\r\n  <div class=\"loader\">\r\n      <div class=\"spinner-border\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div class=\"container-fluid bg-white p-0\">\r\n  <div class=\"row headerButtons mb-3\" id=\"showoptionHide\">\r\n      <div class=\"flex-item searchBar\">\r\n          <input type=\"search\" id=\"searchInput\" class=\"search-form-control pe-5 my-2\" placeholder=\"Search by names\"\r\n              (input)=\"onSearchInputChange($event.target.value)\" />\r\n      </div>\r\n      <div class=\"navOption-btns flex-item formButtons mx-0\">\r\n          <button id=\"saleButtonPrint1\" class=\"btn text-nowrap my-2\" type=\"button\" (click)=\"addShippingModal()\">\r\n              <i class=\"fas fa-plus me-2\"> </i>Add Request&nbsp;&nbsp;&nbsp;\r\n          </button>            \r\n          <button id=\"saleButtonPrint1\" class=\"btn text-nowrap my-2\" type=\"button\"\r\n              onclick=\"location.href = '';\">\r\n              <i class=\"fas fa-download\"></i>\r\n          </button>\r\n      </div>\r\n  </div>\r\n\r\n  <div class=\"table-container overflow-visible\">\r\n      <div class=\"table-div\" style=\"overflow-x: scroll\">\r\n          <table class=\"table table-responsive\">\r\n              <thead>\r\n                  <tr>\r\n                      <th class=\"text-nowrap\">Date</th>\r\n                      <th class=\"text-nowrap\">Order #</th>\r\n                      <th class=\"text-nowrap\">Warehouse Name</th>\r\n                      <!-- <th class=\"text-nowrap\">Total Quantity</th> -->\r\n                      <th class=\"text-nowrap\">Status</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <ng-container *ngFor=\"let item of shippingList; let i = index\">\r\n                      <tr style=\"color: #676398\"\r\n                          [ngStyle]=\"{ 'background-color': item.isDeleted ? '#c7c2de' : i % 2 === 0 ? '#ffffff' : '#f2f2f2' }\"\r\n                          *ngIf=\"selectedTypeFilter === null || item.type === selectedTypeFilter\">\r\n                          <!--<td class=\"text-nowrap\" style=\"vertical-align: middle\">\r\n                              <input class=\"form-check-input\" type=\"checkbox\" [ngClass]=\"{\r\n                                'custom-checkbox': !item.isDeleted,\r\n                                'custom-checkbox deleted': item.isDeleted\r\n                                }\" [checked]=\"shippingIdList.includes(item.id)\" (change)=\"onChekedsingleCheck($event, item.id)\"\r\n                                  [value]=\"item.id\" />\r\n                          </td> -->\r\n                          <td class=\"long-name\" style=\"vertical-align: middle\">\r\n                              {{ item.record?.date | date:\"dd MMM YYYY\" | uppercase }}\r\n                          </td>\r\n                          <td class=\"long-name\" style=\"vertical-align: middle;\">\r\n                              {{ item.record?.orderNo}}\r\n                          </td>\r\n                          <td class=\"long-name\" style=\"vertical-align: middle;\">\r\n                              {{ item.senderData?.firstName}}\r\n                          </td>\r\n                          <!-- <td class=\"long-address\" style=\"vertical-align: middle;\">\r\n                                {{ item.record?.quantity }}\r\n                          </td> -->\r\n                          <td class=\"long-address\" style=\"vertical-align: middle;\"\r\n                          [ngClass]=\"{\r\n                            'gst-status-accepted': item.record?.status === 'ACCEPTED',\r\n                            'gst-status-rejected': item.record?.status === 'REJECTED',\r\n                            'gst-status-pending': item.record?.status === 'PENDING'\r\n                          }\">\r\n                              {{ item.record?.status }}\r\n                          </td>\r\n                          <!-- <td class=\"text-nowrap varticalAlign\">\r\n                              <div class=\"\">\r\n                                  <button class=\"toggle-button\" (click)=\"isActive(item.id, item.isActive)\"\r\n                                      [ngClass]=\"{'active': item.isActive, 'inactive': !item.isActive}\" [disabled]=\"item.isDefault\">\r\n                                      <div class=\"toggle-slider\"></div>\r\n                                  </button>\r\n                              </div>\r\n                          </td> -->\r\n                          <td class=\"text-nowrap\" style=\"text-align: center; vertical-align: middle\">\r\n                              <div>\r\n                                  <button class=\"btn\">\r\n                                      <span class=\"bi bi-eye icon-color iconFontSize ps-2\" data-bs-toggle=\"tooltip\"\r\n                                      data-bs-placement=\"top\" title=\"View\"></span>\r\n                                  </button>\r\n\r\n                                  <!-- <button class=\"btn\">\r\n                                      <span class=\"bi-pencil-square icon-color iconFontSize ps-2\"\r\n                                          (click)=\"editShippingListModal(item)\" data-bs-toggle=\"tooltip\"\r\n                                          data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                                  </button> -->\r\n\r\n                                  <!-- <button class=\"btn mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                                      <span class=\"material-icons icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                          style=\"color: #fc7643\" (click)=\"archhiveShippingList(item.id, item.isDeleted)\"\r\n                                          data-bs-placement=\"top\" [title]=\"item.isDeleted ? 'Unarchive' : 'Archive'\">{{\r\n                                          item.isDeleted ? \"unarchive\" : \"archive\" }}</span>\r\n                                  </button> -->\r\n                              </div>\r\n                          </td>\r\n                          <!-- <td class=\"text-nowrap\" style=\"text-align: center; vertical-align: middle\"></td> -->\r\n\r\n                      </tr>\r\n                  </ng-container>\r\n              </tbody>\r\n              <tbody *ngIf=\"shippingList.length === 0\">\r\n                  <tr class=\"text-center\">\r\n                      <td colspan=\"10\">\r\n                          <img class=\"image-responsive\"\r\n                              src=\"../../../assets/img/icons/spot-illustrations/notfound1.png\" alt=\"notfound1\"\r\n                              width=\"200\" height=\"150\" />\r\n                      </td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n          <!-- <mat-paginator sticky class=\"float-right mt-2\" *ngIf=\"shippingList.length > 0\"\r\n              [pageSize]=\"partyPageSize\" [pageSizeOptions]=\"[5, 10, 20, 30]\" [length]=\"totalrow\"\r\n              [pageIndex]=\"currentPageNo\" showFirstLastButtons (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n          </mat-paginator> -->\r\n      </div>\r\n\r\n      <!-- Ṃultiple Unarchive -->\r\n      <div class=\"modal fade\" id=\"errorUnarchiveSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n              <div class=\"modal-content position-relative\">\r\n                  <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                      <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\"\r\n                          data-bs-dismiss=\"modal\" aria-label=\"Close\"></a>\r\n                  </div>\r\n                  <div class=\"modal-body p-0\">\r\n                      <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                          <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800\"\r\n                              id=\"modalExampleDemoLabel\">\r\n                              <i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> Unarchive\r\n                              Shipping List?\r\n                          </h2>\r\n                      </div>\r\n                      <h4 *ngIf=\"isChecked\" class=\"text-center\">\r\n                          Are you sure to unarchive all Shipping List?\r\n                      </h4>\r\n                      <h4 *ngIf=\"!isChecked\" class=\"text-center\">\r\n                          Are you sure to unarchive all selected Shipping List?\r\n                      </h4>\r\n                  </div>\r\n                  <div class=\"modal-footer justify-content-center\">\r\n                      <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                      <a *ngIf=\"isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                          (click)=\"unArchiveMultipleShippingList()\">Unarchive</a>\r\n                      <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                          (click)=\"unArchiveMultipleShippingList()\">Unarchive</a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n      <!-- Ṃultiple Archive -->\r\n      <div class=\"modal fade\" id=\"errorArchiveSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n              <div class=\"modal-content position-relative\">\r\n                  <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                      <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\"\r\n                          data-bs-dismiss=\"modal\" aria-label=\"Close\"></a>\r\n                  </div>\r\n                  <div class=\"modal-body p-0\">\r\n                      <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                          <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800\"\r\n                              id=\"modalExampleDemoLabel\">\r\n                              <i class=\"fa fa-lock-alt\" aria-hidden=\"true\"></i> Archive\r\n                              Shipping List?\r\n                          </h2>\r\n                      </div>\r\n                      <h4 *ngIf=\"isChecked\" class=\"text-center\">\r\n                          Are you sure to archive all Shipping List?\r\n                      </h4>\r\n                      <h4 *ngIf=\"!isChecked\" class=\"text-center\">\r\n                          Are you sure to archive all selected Shipping List?\r\n                      </h4>\r\n                  </div>\r\n                  <div class=\"modal-footer justify-content-center\">\r\n                      <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                      <a *ngIf=\"isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                          (click)=\"archiveMultipleShippingList()\">Archive</a>\r\n                      <a *ngIf=\"!isChecked\" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\"\r\n                          (click)=\"archiveMultipleShippingList()\">Archive</a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n      <!-- Signle archive  -->\r\n      <div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n              <div class=\"modal-content position-relative\">\r\n                  <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                      <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\"\r\n                          data-bs-dismiss=\"modal\" aria-label=\"Close\"></a>\r\n                  </div>\r\n                  <div class=\"modal-body p-0\">\r\n                      <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                          <h2 *ngIf=\"!isdeletedParty\" class=\"mb-1 text-center font-weight-bold\"\r\n                              style=\"font-weight: 800\" id=\"modalExampleDemoLabel\">\r\n                              Archive Shipping List?\r\n                          </h2>\r\n                          <h2 *ngIf=\"isdeletedParty\" class=\"mb-1 text-center font-weight-bold\"\r\n                              style=\"font-weight: 800\" id=\"modalExampleDemoLabel\">\r\n                              Unarchive Shipping List?\r\n                          </h2>\r\n                      </div>\r\n                      <h4 class=\"text-center\" *ngIf=\"!isdeletedParty\">\r\n                          Are You Sure To Archive Shipping List?\r\n                      </h4>\r\n                      <h4 class=\"text-center\" *ngIf=\"isdeletedParty\">\r\n                          Are You Sure To Unarchive Shipping List?\r\n                      </h4>\r\n                  </div>\r\n                  <div class=\"modal-footer justify-content-center\">\r\n                      <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                      <a class=\"btn btn-outline-danger\" *ngIf=\"!isdeletedParty\" (click)=\"archiveSignleShippingList()\"\r\n                          data-bs-dismiss=\"modal\">Archive\r\n                      </a>\r\n                      <a *ngIf=\"isdeletedParty\" class=\"btn btn-outline-warning\" (click)=\"archiveSignleShippingList()\"\r\n                          data-bs-dismiss=\"modal\">Unarchive\r\n                      </a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n  </div>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { WarehouseService } from 'src/app/core/services/warehouse.service';\r\nimport { RequestOrderModalComponent } from '../request-order-modal/request-order-modal.component';\r\n//import { AddShippingComponent } from '../add-shipping/add-shipping.component';\r\n//import { EditShippingComponent } from '../edit-shipping/edit-shipping.component';\r\n\r\n@Component({\r\n  selector: 'app-request-order',\r\n  templateUrl: './request-order.component.html',\r\n  styleUrls: ['./request-order.component.scss']\r\n})\r\nexport class RequestOrderComponent implements OnInit {\r\n  private searchSubject = new Subject<string>();\r\n  private searchSubscription: Subscription;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  shippingList: any[] = [];\r\n  excelFileUpload: any;\r\n  public currentpage: any;\r\n  public totalrow: any;\r\n  public totalPages: any;\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 5;\r\n  public pagesize: number = 1;\r\n  public count: number = 0;\r\n  shippingIdList: any[] = [];\r\n  selectedIdList: any[] = [];\r\n\r\n  public archiveIconfalse: boolean = false;\r\n  public checkSingleArray: any = [];\r\n  public isChecked: boolean = false;\r\n  public upiCheckedId = [];\r\n  public upiCheckedId1 = [];\r\n  public allSelect: boolean = false;\r\n  public checkSelect: boolean = false;\r\n\r\n  public checkSelectsingle: boolean = false;\r\n\r\n  public checkSelectsinglefalse: boolean = false;\r\n  public checkSelectsingletrue: boolean = false;\r\n  warehouseId: any;\r\n  pageNumberDisplay: any[];\r\n  isLoading: boolean;\r\n  archivedPartyIds: any[];\r\n  unarchivedPartyIds: any[];\r\n  showUnarchiveButton: boolean;\r\n  showDeleteButton: boolean;\r\n  isdeletedParty: boolean;\r\n  selectedTypeFilter: string | null = null;\r\n  isFilterVisible: any;\r\n  @ViewChild('dropdown') dropdown: ElementRef;\r\n  searchKey: string;\r\n\r\n  constructor(public router: Router, public dialog: MatDialog, private commonService: CommonService,\r\n    public route: ActivatedRoute, private warehouseService: WarehouseService,\r\n    public toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStockTransfer();\r\n    this.commonService.rowAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getAllStockTransfer();\r\n    });\r\n\r\n    this.searchSubscription = this.searchSubject\r\n      .pipe(debounceTime(800),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true; // Show the loader when the API call is initiated\r\n        })).subscribe(searchKey => {\r\n          // Call the API with the search key\r\n          if (searchKey.length >= 3) {\r\n            this.searchKey = searchKey;\r\n            this.searchShippingList(searchKey.trim());\r\n          } else if (searchKey === '') {\r\n             this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n            this.getAllStockTransfer()\r\n          } else {\r\n            this.isLoading = false; // Hide the loader if the search key is less than the threshold\r\n          }\r\n        });\r\n  }\r\n\r\n  getAllStockTransfer(searchKey?) {\r\n    this.warehouseService.getAllStockTransfer({data:{},status: '', requesterId: this.currentUser.id, senderId: ''}).then((res) => {\r\n      if(res.success) {\r\n        this.shippingList = res.data;\r\n        // this.currentPageNo = res.data.currentPage;\r\n        // this.totalrow = res.data.totalrows;\r\n        // this.totalPages = res.data.totalPages\r\n      }\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: this.titleCasePipe.transform(err.error.error_message),\r\n        });\r\n      }\r\n      else {\r\n        this.toastService.toastMsg({\r\n          title: \"Error\",\r\n          content: \"Something Went Wrong.\",\r\n        });\r\n      }\r\n\r\n    }) \r\n  }\r\n\r\n  archhiveShippingList(warehouseId: string, isdeleted: boolean) {\r\n    this.warehouseId = warehouseId;\r\n    this.isdeletedParty = isdeleted;\r\n    this.selectedIdList.push(warehouseId);\r\n  }\r\n\r\n  archiveSignleShippingList() {\r\n    // if (this.isdeletedParty) {\r\n    //   this.warehouseService.unArchiveMultiplewarehouses({data: { unArchivewarehouses: this.selectedIdList }, userId: this.currentUser.id}).then((res: any) => {\r\n    //     if (res.success) {\r\n    //       this.toastService.toastMsg({\r\n    //         title: 'Success',\r\n    //         content: \"warehouse Unarchived Successfully!!!\"\r\n    //       });\r\n\r\n    //       this.getAllWarehouse();\r\n    //     }\r\n    //   })\r\n    // }\r\n    // else {\r\n    //   this.warehouseService.deleteMultiplewarehouses({data: { archivewarehouses: this.selectedIdList }, userId: this.currentUser.id}).then((res: any) => {\r\n    //     if (res.success) {\r\n    //       this.toastService.toastMsg({\r\n    //         title: 'Success',\r\n    //         content: \"ShippingList Archived Successfully!!!\"\r\n    //       });\r\n    //       this.getAllStockTransfer();\r\n    //     }\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  onChekedsingleCheck(e, partyId) {\r\n    if (e.target.checked) {\r\n      this.shippingIdList.push(partyId);\r\n      this.checkSingleArray.push(e.target.value);\r\n    } else {\r\n      const index = this.shippingIdList.indexOf(partyId);\r\n      if (index !== -1) {\r\n        this.shippingIdList.splice(index, 1);\r\n        this.checkSingleArray.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    // Clear the archived and unarchived party IDs\r\n    this.archivedPartyIds = [];\r\n    this.unarchivedPartyIds = [];\r\n\r\n    // Update the archived and unarchived party IDs based on the selected parties\r\n    this.shippingIdList.forEach(partyId => {\r\n      const party = this.shippingList.find(item => item.id === partyId);\r\n      if (party) {\r\n        if (party.isDeleted) {\r\n          this.archivedPartyIds.push(partyId);\r\n        } else {\r\n          this.unarchivedPartyIds.push(partyId);\r\n        }\r\n      }\r\n    })\r\n\r\n    // Check if all the selected parties are archived\r\n    const allArchived = this.shippingIdList.every(partyId => {\r\n      const party = this.shippingList.find(item => item.id === partyId);\r\n      return party && party.isDeleted;\r\n    });\r\n\r\n    // Check if all the selected parties are unarchived\r\n    const allUnarchived = this.shippingIdList.every(partyId => {\r\n      const party = this.shippingList.find(item => item.id === partyId);\r\n      return party && !party.isDeleted;\r\n    });\r\n\r\n    // if (allArchived && allUnarchived) {\r\n    if (this.archivedPartyIds.length > 0 && this.unarchivedPartyIds.length > 0) {\r\n      // Show an alert error message to the user\r\n      alert(\"Please select either archived or unarchived ShippingLists.\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.shippingIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n\r\n    } else if (allArchived) {\r\n      console.log('Archived');\r\n      // Show unarchive button\r\n      this.showUnarchiveButton = true;\r\n      this.showDeleteButton = false;\r\n    } else if (allUnarchived) {\r\n      console.log('Unarchived');\r\n      // Show archive button\r\n      this.showDeleteButton = true;\r\n      this.showUnarchiveButton = false;\r\n    } else {\r\n      // Show error message or handle the case when there are both archived and unarchived parties selected\r\n      alert(\"Please select either archived or unarchived ShippingLists.\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.shippingIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n      this.showDeleteButton = false;\r\n      this.showUnarchiveButton = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getSingleCheckedId(warehouseId) {\r\n    this.warehouseId = warehouseId;\r\n  }\r\n\r\n  onChekMultiple($event) {\r\n    const isChecked = $event.target.checked;\r\n    if (isChecked) {\r\n      this.shippingIdList = this.shippingList.map(item => item.id);\r\n    } else {\r\n      this.shippingIdList = [];\r\n      this.showDeleteButton = false;\r\n      this.showUnarchiveButton = false\r\n    }\r\n    this.checkSelect = isChecked; // Update the checkbox state in the header\r\n\r\n    let id = $event.target.value;\r\n    this.isChecked = $event.target.checked;\r\n    this.upiCheckedId = this.shippingList.map((item) => {\r\n      if (id === -1) {\r\n        if (this.isChecked == true) {\r\n          this.checkSelectsingle = true;\r\n          return item.id;\r\n        }\r\n        else {\r\n          this.checkSelectsingle = false;\r\n          this.upiCheckedId = [];\r\n        }\r\n      }\r\n    })\r\n    // Clear the archived and unarchived party IDs\r\n    this.archivedPartyIds = [];\r\n    this.unarchivedPartyIds = [];\r\n\r\n    // Update the archived and unarchived party IDs based on the selected parties\r\n    this.shippingIdList.forEach(partyId => {\r\n      const party = this.shippingList.find(item => item.id === partyId);\r\n      if (party) {\r\n        if (party.isDeleted) {\r\n          this.archivedPartyIds.push(partyId);\r\n        } else {\r\n          this.unarchivedPartyIds.push(partyId);\r\n        }\r\n      }\r\n\r\n      // Check if all the selected parties are archived\r\n      const allArchived = this.shippingIdList.every(partyId => {\r\n        const party = this.shippingList.find(item => item.id === partyId);\r\n        return party && party.isDeleted;\r\n      });\r\n      // Check if all the selected parties are unarchived\r\n      const allUnarchived = this.shippingIdList.every(partyId => {\r\n        const party = this.shippingList.find(item => item.id === partyId);\r\n        return party && !party.isDeleted;\r\n      });\r\n\r\n      if (allArchived) {\r\n        // Show unarchive button\r\n        this.showUnarchiveButton = true\r\n        this.showDeleteButton = false;\r\n      } else if (allUnarchived) {\r\n        // Show archive button\r\n        this.showDeleteButton = true;\r\n        this.showUnarchiveButton = false\r\n      } else {\r\n        // Show error message or handle the case when there are both archived and unarchived parties selected\r\n      }\r\n    });\r\n\r\n    if (this.archivedPartyIds.length > 0 && this.unarchivedPartyIds.length > 0) {\r\n      alert(\"Please select either archived or unarchived ShippingLists\");\r\n      // Uncheck all the selected parties and header checkbox\r\n      this.shippingIdList = [];\r\n      this.checkSingleArray = [];\r\n      this.checkSelectsingle = false;\r\n      this.upiCheckedId = [];\r\n      this.isChecked = false;\r\n      this.allSelect = false;\r\n      this.checkSelect = false;\r\n      this.checkSelectsingle = false;\r\n\r\n      // Uncheck all the checkboxes in the template\r\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        const inputElement = checkbox as HTMLInputElement;\r\n        inputElement.checked = false;\r\n      });\r\n\r\n      // Throw an error to prevent further processing\r\n      this.toastService.toastMsg({\r\n        title: 'Warning',\r\n        content: 'Please select either archived or unarchived ShippingLists'\r\n      })\r\n      throw new Error(\"Please select either archived or unarchived ShippingLists\");\r\n    }\r\n  }\r\n\r\n  getUPIcheckId(warehouseId) {\r\n    this.warehouseId = warehouseId;\r\n  }\r\n\r\n  archiveMultipleShippingList() {\r\n    if (this.currentPageNo === 1) {\r\n      this.currentPageNo = this.currentPageNo;\r\n    }\r\n    else {\r\n      if (this.totalPages > this.currentPageNo) {\r\n        this.currentPageNo = this.currentPageNo - 1;\r\n      }\r\n    }\r\n    const requestBody = {\r\n      archiveShippingLists: this.shippingIdList\r\n    };\r\n\r\n    // this.warehouseService.deleteMultiplewarehouses({ data: requestBody, userId: this.currentUser.id }).then((result: any) => {\r\n    //   if (result.success) {\r\n    //     this.getAllStockTransfer();\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Success',\r\n    //       content: \"ShippingList Archived Successfully!!!\"\r\n    //     });\r\n\r\n    //     this.showDeleteButton = false;\r\n    //     this.showUnarchiveButton = false\r\n    //     this.shippingIdList = []; // Clear the selected party IDs after deletion\r\n    //     this.checkSelect = false // Reset the checkbox state in the header\r\n    //   }\r\n    // }, (err) => {\r\n    //   if (err.error.expose) {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: this.titleCasePipe.transform(err.error.error_message)\r\n    //     });\r\n    //   } else {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: \"Something Went Wrong.\"\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  showDeleteButtonFunc(): boolean {\r\n    return this.unarchivedPartyIds.length > 0;\r\n  }\r\n\r\n  unArchiveMultipleShippingList() {\r\n    const requestBody = {\r\n      unArchiveShippingLists: this.shippingIdList\r\n    };\r\n    // this.warehouseService.unArchiveMultiplewarehouses({data: requestBody, userId: this.currentUser.id}).then((result: any) => {\r\n    //   if (result.success) {\r\n    //     this.getAllStockTransfer();\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Success',\r\n    //       content: \"ShippingList Unarchived Successfully!!!\"\r\n    //     });\r\n    //     this.showDeleteButton = false;\r\n    //     this.showUnarchiveButton = false\r\n    //     this.shippingIdList = []; // Clear the selected party IDs after unarchiving\r\n    //     this.checkSelect = false; // Reset the checkbox state in the header\r\n    //   }\r\n    // }, (err) => {\r\n    //   if (err.error.expose) {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: this.titleCasePipe.transform(err.error.error_message)\r\n    //     });\r\n    //   } else {\r\n    //     this.toastService.toastMsg({\r\n    //       title: 'Error',\r\n    //       content: \"Something Went Wrong.\"\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  searchShippingList(searchKey: string) {\r\n    setTimeout(() => {\r\n      if (searchKey.trim() === '') {\r\n        this.getAllStockTransfer();\r\n        this.isLoading = false; \r\n      } else {\r\n        this.isLoading = false; \r\n        this.getAllStockTransfer(searchKey)\r\n        if(this.shippingList.length === 0){\r\n          this.isLoading = false; \r\n          this.toastService.toastMsg({\r\n            title: \"Error\",\r\n            content: searchKey + \" Is Not Found\",\r\n          });\r\n        }\r\n      }\r\n    this.isLoading = false; // Hide the loader after the API call is completed\r\n    }, 500);\r\n  }\r\n\r\n\r\n  onSearchInputChange(searchKey: string) {\r\n    console.log(searchKey);\r\n    // Emit the search key to the searchSubject\r\n    this.searchSubject.next(searchKey.trim());\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.excelFileUpload = e.target.files[0];\r\n    const pattern = /\\.(xlsx|xls)$/i; // Pattern to match \".xlsx\" or \".xls\" extension\r\n    if (!pattern.test(this.excelFileUpload.name)) {\r\n      this.toastService.toastMsg({\r\n        title: \"Error\",\r\n        content: \"Invalid Format. Please Select An Excel File.\",\r\n      });\r\n      return;\r\n    }\r\n    if (this.excelFileUpload) {\r\n      let formdata = new FormData();\r\n      formdata.set(\"file\", this.excelFileUpload)\r\n      // this.truckOwnerService.postBulkowner(formdata, this.currentUser.id).then((res) => {\r\n      //   this.toastService.toastMsg({\r\n      //     title: \"Success\",\r\n      //     content: \"Excel Uploaded Successfully\",\r\n      //   });\r\n      //   this.getAllStockTransfer();\r\n      // }, (err) => {\r\n      //   if (err.error.expose) {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: this.titleCasePipe.transform(err.error.error_message),\r\n      //     });\r\n      //   }\r\n      //   else if (err.error.status == \"409\" && err.error.expose == false) {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: \"List Of Consignments Already Exists\",\r\n      //     });\r\n      //   }\r\n      //   else {\r\n      //     this.toastService.toastMsg({\r\n      //       title: \"Error\",\r\n      //       content: \"Something Went Wrong.\",\r\n      //     });\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n\r\n  startUpload() {\r\n    var uploadInput = document.getElementById('uploadFile');\r\n    if (uploadInput) {\r\n      var event = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: false,\r\n        cancelable: true\r\n      });\r\n      uploadInput.dispatchEvent(event);\r\n    } else {\r\n      this.toastService.toastMsg({\r\n        title: 'Error',\r\n        content: \"Upload element not found\"\r\n      });\r\n    }\r\n  }\r\n\r\n  public handlePage(e: any) {\r\n    this.currentPageNo = e.pageIndex;\r\n    this.pagesize = e.pageSize;\r\n\r\n    if (this.shippingList.length > 0) {\r\n      if (this.searchKey !== '') {\r\n        this.partyPageSize = e.pageSize;\r\n        this.searchShippingList(this.searchKey);\r\n      } else {\r\n        this.partyPageSize = e.pageSize;\r\n        this.getAllStockTransfer();\r\n      }\r\n    }\r\n  }\r\n\r\n  addShippingModal(): void {\r\n    const dialogRef: MatDialogRef<RequestOrderModalComponent> = this.dialog.open(RequestOrderModalComponent, {\r\n     // width: '700px',\r\n      height: \"100vh\",\r\n      data: {},\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  editShippingListModal(packageData) {\r\n    const dialogRef: MatDialogRef<RequestOrderModalComponent> = this.dialog.open(RequestOrderModalComponent, {\r\n      // width: '700px',\r\n      height: '100vh',\r\n      data: { packageData: packageData },\r\n      disableClose: true,\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  // isActive(warehouseId, isActive) {\r\n  //   const newStatus = !isActive; // Toggle between '1' and '0'\r\n  //   const payload = {\r\n  //     warehouseId: warehouseId,        \r\n  //   };\r\n  //   this.warehouseService.warehouseToggle({ data: payload, userId: this.currentUser.id })\r\n  //     .then((res) => {\r\n  //       if (res.success) {\r\n  //             if (newStatus) {\r\n  //               this.toastService.toastMsg({\r\n  //                 title: \"Success\",\r\n  //                 content: \"Status Has Changed To Active\",\r\n  //               });\r\n  //               this.getAllStockTransfer()\r\n  //             } else {\r\n  //               this.toastService.toastMsg({\r\n  //                 title: \"Success\",\r\n  //                 content: \"Status Has Changed To Inactive\",\r\n  //               });\r\n  //               this.getAllStockTransfer()\r\n  //             }\r\n  //           }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       this.toastService.toastMsg({\r\n  //         title: 'Error',\r\n  //         content: this.titleCasePipe.transform(error.error.error_message)\r\n  //       })\r\n  //     });\r\n  // }\r\n\r\n  // Add a method to update the filter value\r\n  updateTypeFilter(filterValue: string | null) {\r\n    if(filterValue === 'ALL') {\r\n      this.selectedTypeFilter = null;\r\n    } else {\r\n      this.selectedTypeFilter = filterValue;\r\n    }\r\n  }\r\n\r\n  toggleFilter() {\r\n    this.isFilterVisible = !this.isFilterVisible;\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.isFilterVisible = false;\r\n  }\r\n\r\n}\r\n"]}